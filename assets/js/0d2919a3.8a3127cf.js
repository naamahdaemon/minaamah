"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2069],{58476:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=n(85893),o=n(11151);const i={sidebar_position:12,sidebar_label:"Sending node uptime to our chatbot",sidebar_class_name:"green"},r="Purpose",a={id:"Node operator guide/Telegram_bot/sending_uptime",title:"Purpose",description:"In this section, we'll write a really simple script that sends the uptime of our node as a message to our chatbot every hour.",source:"@site/docs/04-Node operator guide/Telegram_bot/sending_uptime.md",sourceDirName:"04-Node operator guide/Telegram_bot",slug:"/Node operator guide/Telegram_bot/sending_uptime",permalink:"/docs/Node operator guide/Telegram_bot/sending_uptime",draft:!1,unlisted:!1,editUrl:"https://github.com/naamahdaemon/minaamah/tree/main/docs/04-Node operator guide/Telegram_bot/sending_uptime.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12,sidebar_label:"Sending node uptime to our chatbot",sidebar_class_name:"green"},sidebar:"mainSidebar",previous:{title:"Generic bash script to send messages to our bot",permalink:"/docs/Node operator guide/Telegram_bot/generic_telegram_sendmessage_script"},next:{title:"Sending payout rewards to our chatbot",permalink:"/docs/Node operator guide/Telegram_bot/sending_payout"}},l={},d=[{value:"<code>get_uptime.sh</code>",id:"get_uptimesh",level:2},{value:"Using get_uptime.sh with tg_logbot.sh",id:"using-get_uptimesh-with-tg_logbotsh",level:2}];function h(e){const t={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"purpose",children:"Purpose"}),"\n",(0,s.jsxs)(t.p,{children:["In this section, we'll write a really simple script that sends the uptime of our node as a message to our chatbot every hour.",(0,s.jsx)(t.br,{}),"\n","This allows you to precisely monitor your uptime and ensure your node never goes down.",(0,s.jsx)(t.br,{}),"\n","For this, we'll get the uptime from the logs and then send its value to our chatbot using the ",(0,s.jsx)(t.code,{children:"tg_logbot.sh"})," script we wrote in the previous chapter."]}),"\n",(0,s.jsx)(t.h2,{id:"get_uptimesh",children:(0,s.jsx)(t.code,{children:"get_uptime.sh"})}),"\n",(0,s.jsx)(t.p,{children:"The script we will use is the following :"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ vim get_uptime.sh\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'#!/bin/bash\nwhile true\ndo\n        since="24 hours ago" && echo && echo "$(hostname) : Uptime service - sent : $(journalctl --user -u mina -S "$since" | grep \'Sent block with state\' | wc -l), failed: $(journalctl --user -u mina -S "$since" | grep \'After 8 attempts, failed\' | wc -l)"\n        sleep 3600\ndone\n'})}),"\n",(0,s.jsx)(t.p,{children:"Once launched, this script will loop every hour and return the number of successfull and failed uptime upload retrieved from mina logs."}),"\n",(0,s.jsx)(t.admonition,{title:"Example",type:"info",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"Hostname : Uptime service - sent : 96, failed: 0\n"})})}),"\n",(0,s.jsx)(t.h2,{id:"using-get_uptimesh-with-tg_logbotsh",children:"Using get_uptime.sh with tg_logbot.sh"}),"\n",(0,s.jsxs)(t.p,{children:["In order to send the ouput of the script each time it runs (every hour) to telegram, we will do something as easy as pipe the output from ",(0,s.jsx)(t.code,{children:"get_uptime.sh"})," to ",(0,s.jsx)(t.code,{children:"tg_logbot.sh"})]}),"\n",(0,s.jsx)(t.admonition,{title:"Example",type:"info",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ ./get_uptime.sh | ./tg_logbot.sh\n"})})}),"\n",(0,s.jsxs)(t.p,{children:["In order for the script to run in the backbround you can either use ",(0,s.jsx)(t.code,{children:"nohup"})," along with ",(0,s.jsx)(t.code,{children:"&"})," such as"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ nohup ./get_uptime.sh | ./tg_logbot.sh &\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Or my prefered method, launch the same in a ",(0,s.jsx)(t.code,{children:"screen"})," session :"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ screen -S uptime\n$ ./get_uptime.sh | ./tg_logbot.sh\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Then safely detach the screen session with ",(0,s.jsx)(t.code,{children:"CTRL+A+D"}),".",(0,s.jsx)(t.br,{}),"\n","You can easily reattach the screen session with ",(0,s.jsx)(t.code,{children:"screen -R uptime"})," thereafter."]}),"\n",(0,s.jsx)(t.admonition,{title:"You're done !!",type:"tip",children:(0,s.jsx)(t.p,{children:"Finally, once run, you'll receive every hour right in your telegram chat window with your bot a message with your actual 24 hour uptime."})}),"\n",(0,s.jsx)(t.admonition,{title:"Uptime value",type:"warning",children:(0,s.jsxs)(t.p,{children:["The uptime retrieved from the script is the splipping 24 hours uptime.",(0,s.jsx)(t.br,{}),"\n","Its value should be ",(0,s.jsx)(t.strong,{children:"96"})," (1 upload every 15min, 4 uploads each hour, 4x24=96 uploads a day) which means that you did not miss any uptime upload to the server.",(0,s.jsx)(t.br,{}),"\n","Please note that when a block is produced, an additional entry in the logs is added that will count as a snark upload as well.",(0,s.jsx)(t.br,{}),"\n","It means that if you produced 3 blocks the last 24h, then your score will be 99 and not 96."]})})]})}function c(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>r});var s=n(67294);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);