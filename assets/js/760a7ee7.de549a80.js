"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5197],{37537:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=s(85893),o=s(11151);const i={title:"Proof of Research (PoR) on Mina Protocol",sidebar_label:"Proof of Research (PoR) on Mina Protocol",hide_table_of_contents:!1},t="Proof of Research (PoR) on Mina Protocol",a={id:"Application Insights/proof-of-research",title:"Proof of Research (PoR) on Mina Protocol",description:"---",source:"@site/docs/06-Application Insights/proof-of-research.md",sourceDirName:"06-Application Insights",slug:"/Application Insights/proof-of-research",permalink:"/docs/Application Insights/proof-of-research",draft:!1,unlisted:!1,editUrl:"https://github.com/naamahdaemon/minaamah/tree/main/docs/06-Application Insights/proof-of-research.md",tags:[],version:"current",frontMatter:{title:"Proof of Research (PoR) on Mina Protocol",sidebar_label:"Proof of Research (PoR) on Mina Protocol",hide_table_of_contents:!1},sidebar:"mainSidebar",previous:{title:"Application Insights",permalink:"/docs/Application Insights/"}},l={},c=[{value:"Preamble: Why Useful Proof of Work Was Impossible Before ZK",id:"preamble-why-useful-proof-of-work-was-impossible-before-zk",level:2},{value:"Abstract",id:"abstract",level:2},{value:"Related Work",id:"related-work",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Roles",id:"roles",level:2},{value:"zkApps as Research Circuits",id:"zkapps-as-research-circuits",level:2},{value:"Why a Hybrid PoS + PoR Consensus",id:"why-a-hybrid-pos--por-consensus",level:2},{value:"Recursive Proof Aggregation",id:"recursive-proof-aggregation",level:2},{value:"Incentive Model",id:"incentive-model",level:2},{value:"Applications",id:"applications",level:2},{value:"Roadmap",id:"roadmap",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"License",id:"license",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"proof-of-research-por-on-mina-protocol",children:"Proof of Research (PoR) on Mina Protocol"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"preamble-why-useful-proof-of-work-was-impossible-before-zk",children:"Preamble: Why Useful Proof of Work Was Impossible Before ZK"}),"\n",(0,r.jsx)(n.p,{children:"For years, researchers and developers have explored the idea of turning Proof of Work into something useful \u2014 so that instead of burning energy on meaningless hashing, networks could contribute to science, AI, or data analysis."}),"\n",(0,r.jsxs)(n.p,{children:["However, this idea always faced a fundamental obstacle: ",(0,r.jsx)(n.strong,{children:"how to verify useful work efficiently"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Any useful computation, such as training an AI model, sequencing DNA, or analyzing large datasets, is inherently expensive to compute and equally expensive to verify. Without a way to separate the cost of computation from the cost of verification, blockchains could not safely use such tasks for consensus."}),"\n",(0,r.jsxs)(n.p,{children:["This is why early ",(0,r.jsx)(n.em,{children:"Proof of Useful Work"})," projects (Primecoin, CureCoin, FoldingCoin) struggled to gain adoption: they lacked a verification method that was both fast and cryptographically sound."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Zero-Knowledge Proofs (ZKPs)"})," changed this equation. With zk-SNARKs, zk-STARKs, and especially recursive proofs as implemented in ",(0,r.jsx)(n.strong,{children:"Mina Protocol"}),", it became possible to prove the correctness of a computation once, and let anyone verify it in milliseconds."]}),"\n",(0,r.jsxs)(n.p,{children:["This decouples the heavy cost of performing useful research from the trivial cost of verification.",(0,r.jsx)(n.br,{}),"\n","In other words, ZKPs are the missing link that transforms Proof of Useful Work from an impractical dream into a feasible consensus mechanism."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"abstract",children:"Abstract"}),"\n",(0,r.jsxs)(n.p,{children:["We introduce ",(0,r.jsx)(n.strong,{children:"Proof of Research (PoR)"}),", a novel consensus mechanism that transforms blockchain security into a vehicle for useful computation."]}),"\n",(0,r.jsxs)(n.p,{children:["Unlike Proof of Work (PoW), where energy is expended on meaningless hashing, PoR leverages ",(0,r.jsx)(n.strong,{children:"Zero-Knowledge Proofs (ZKP)"})," and Mina Protocol\u2019s ",(0,r.jsx)(n.strong,{children:"recursive cryptography"})," to validate real-world scientific and computational tasks as part of block production."]}),"\n",(0,r.jsx)(n.p,{children:"This creates the first blockchain where the act of securing the network simultaneously contributes to scientific progress, AI training, bioinformatics, and large-scale data analysis."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"related-work",children:"Related Work"}),"\n",(0,r.jsx)(n.p,{children:"Over the past decade, multiple projects have attempted to connect blockchain security with useful computation. While these efforts demonstrated creativity, none have succeeded in building a fully decentralized, verifiable, and secure consensus mechanism based on useful work."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Primecoin (2013)"}),": used mining to discover prime number chains. Valuable but extremely narrow in scope."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CureCoin / FoldingCoin"}),": rewarded contributions to Folding@home but relied on external verification."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gridcoin"}),": connected to BOINC computing, again dependent on trusted external servers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Golem, iExec, Akash"}),": decentralized compute marketplaces, but separate from consensus."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bittensor (2021)"}),": incentivized AI training, but verification remained benchmark-based, not cryptographic."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Why PoR is different:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"ZKPs enable cryptographic proofs of useful computation, verified in milliseconds."}),"\n",(0,r.jsx)(n.li,{children:"Recursive aggregation (Mina) condenses thousands of proofs into one succinct proof."}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.strong,{children:"hybrid PoS + PoR"})," design ties consensus to both financial stake and useful research contributions \u2014 a combination never previously achieved."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(n.p,{children:"The following diagram illustrates the high-level architecture of Proof of Research on Mina Protocol:"}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udccc ",(0,r.jsx)(n.strong,{children:"[Diagram Placeholder: Global Architecture \u2014 Task Marketplace \u2192 Compute Nodes \u2192 Proof Generators \u2192 Aggregators \u2192 Validators \u2192 Mina L1]"})]}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n    A[Task Marketplace] --\x3e B[Compute Nodes]\n    B --\x3e C[Proof Generators]\n    C --\x3e D[Aggregators]\n    B --\x3e D\n    D --\x3e E[PoS Validators]\n    E --\x3e F[Mina L1]\n\n    %% Styling\n    A:::market\n    B:::compute\n    C:::proof\n    D:::agg\n    E:::val\n    F:::mina\n\nclassDef market fill:#cce5ff,stroke:#000,stroke-width:1px;\nclassDef compute fill:#d4edda,stroke:#000,stroke-width:1px;\nclassDef proof fill:#ffe5b4,stroke:#000,stroke-width:1px;\nclassDef agg fill:#fff3cd,stroke:#000,stroke-width:1px;\nclassDef val fill:#f8d7da,stroke:#000,stroke-width:1px;\nclassDef mina fill:#e2e3e5,stroke:#000,stroke-width:1px;\n"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"+-------------------------------+\n| Task Marketplace              |\n| (posts zkApps/tasks, pays)    |\n+-------------------------------+\n               |\n               v\n+------------------------+          +----------------------+\n| Compute Nodes          |  results | Proof Generators     |\n| (run zkApp logic)      +---------\x3e| (produce zk-proofs)  |\n+------------------------+          +----------------------+\n            \\                              /\n             \\                            /\n              v                          v\n               +------------------------+\n               |      Aggregators       |\n               | (recursive proof merge)|\n               +------------------------+\n                         |\n                         v\n                +------------------+        anchor snark       +------------------+\n                |   Validators     |--------------------------\x3e|     Mina L1      |\n                | (PoS consensus,  |                           | (succinct verify) |\n                | embed agg proof) |<-- finality/fork choice --+------------------+\n                +------------------+\n\nToken flows (conceptual):\nUsers/Submitters -> pay tokens -> Marketplace -> rewards -> Compute Nodes / Provers / Validators\n\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"roles",children:"Roles"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Task Submitters (Researchers / Enterprises / Individuals)"}),": Publish useful computational tasks and pay in tokens for execution."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Compute Nodes (Workers)"}),": Execute assigned tasks using CPUs/GPUs and generate raw results."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Proof Generators (Provers)"}),": Produce zk-proofs certifying correctness of computations."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Aggregators"}),": Combine many zk-proofs into a single recursive proof."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validators (PoS Layer)"}),": Secure consensus and include aggregated proofs in blocks."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mina L1"}),": Anchors the final proof, ensuring trust, immutability, and global verifiability."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"zkapps-as-research-circuits",children:"zkApps as Research Circuits"}),"\n",(0,r.jsxs)(n.p,{children:["One of Mina\u2019s unique strengths is the ability to express computations as ",(0,r.jsx)(n.strong,{children:"zkApps"})," \u2014 zero-knowledge smart contracts.",(0,r.jsx)(n.br,{}),"\n","In the context of PoR, ",(0,r.jsx)(n.strong,{children:"task submitters could provide zkApps representing their research problems"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Each zkApp would define:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Inputs"}),": research data (datasets, parameters, genetic sequences, model weights, etc.)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Logic (circuit)"}),": the algorithmic computation to be performed (e.g., matrix multiplication, alignment algorithm, AI training step)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Outputs"}),": the computed result ",(0,r.jsx)(n.strong,{children:"plus a zk-proof"})," certifying that the computation was executed correctly."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This model allows every research task to be formalized as a verifiable circuit. Compute nodes simply execute zkApps with provided inputs, generating results and proofs. Aggregators then combine these proofs recursively into a single succinct certificate of research, which validators embed into the blockchain."}),"\n",(0,r.jsxs)(n.p,{children:["In practice, this transforms the blockchain into a ",(0,r.jsx)(n.strong,{children:"library of reusable, verifiable research circuits"}),".",(0,r.jsx)(n.br,{}),"\n","Any researcher can design and deploy zkApps for their field, enabling a global decentralized marketplace of provable scientific computation."]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udccc ",(0,r.jsx)(n.strong,{children:"[Diagram Placeholder: zkApps Flow \u2014 Submitter provides zkApp \u2192 Compute Nodes run zkApp with inputs \u2192 Proof Generated \u2192 Aggregator \u2192 Validators \u2192 Mina L1]"})]}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n    S[Task Submitter / Researcher] --\x3e Z[zkApp Circuit<br/>Inputs + Logic + Outputs]\n    Z --\x3e M[Task Marketplace]\n    M --\x3e C[Compute Nodes]\n    C --\x3e P[Proof Generators]\n    P --\x3e A[Aggregators]\n    A --\x3e V[Validators]\n    V --\x3e L[Mina L1]\n\n    %% Style\n    S:::submitter\n    Z:::zkapp\n    M:::market\n    C:::compute\n    P:::proof\n    A:::agg\n    V:::val\n    L:::mina\n\nclassDef submitter fill:#d1c4e9,stroke:#000,stroke-width:1px;\nclassDef zkapp fill:#b3e5fc,stroke:#000,stroke-width:1px;\nclassDef market fill:#cce5ff,stroke:#000,stroke-width:1px;\nclassDef compute fill:#d4edda,stroke:#000,stroke-width:1px;\nclassDef proof fill:#ffe5b4,stroke:#000,stroke-width:1px;\nclassDef agg fill:#fff3cd,stroke:#000,stroke-width:1px;\nclassDef val fill:#f8d7da,stroke:#000,stroke-width:1px;\nclassDef mina fill:#e2e3e5,stroke:#000,stroke-width:1px;\n"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"[ Task Submitter / Researcher ]\n             |\n             v\n   +-----------------------+\n   |  zkApp (Circuit)      |\n   |  - Inputs schema      |\n   |  - Logic (algorithm)  |\n   |  - Outputs spec       |\n   +-----------------------+\n             |\n   publish to Marketplace\n             |\n             v\n+------------------------+      data batches      +-----------------------+\n|    Compute Nodes       |<----------------------\x3e|   Data Providers      |\n| (execute zkApp w/      |                        | (datasets, params)    |\n|  inputs -> results)    |-----------------------\x3e|                       |\n+------------------------+     results            +-----------------------+\n             |\n             v\n+------------------------+\n|  Proof Generators      |\n| (result -> zk-proof)   |\n+------------------------+\n             |\n             v\n+------------------------+\n|     Aggregators        |\n| (recursive combine)    |\n+------------------------+\n             |\n             v\n+------------------+          +------------------+\n|    Validators    |  snark   |     Mina L1      |\n| (PoS; include    +---------\x3e| (verify succinct)|\n|  agg proof)      |          +------------------+\n+------------------+\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"why-a-hybrid-pos--por-consensus",children:"Why a Hybrid PoS + PoR Consensus"}),"\n",(0,r.jsx)(n.p,{children:"A pure PoR system faces challenges:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No economic penalty for malicious actors (unlike slashing in PoS)."}),"\n",(0,r.jsx)(n.li,{children:"Vulnerability to sybil attacks with trivial proofs."}),"\n",(0,r.jsx)(n.li,{children:"Lack of fork-choice and finality guarantees."}),"\n",(0,r.jsx)(n.li,{children:"Risk of centralization by large compute farms."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The hybrid model combines the best of both worlds:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PoS"})," ensures economic security, sybil resistance, and finality."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PoR"})," injects scientific and societal value into block production."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"In practice:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Validators must stake tokens."}),"\n",(0,r.jsx)(n.li,{children:"To propose a block, they must also embed an aggregated proof of research."}),"\n",(0,r.jsx)(n.li,{children:"Rewards are shared between validators (security) and compute contributors (useful work)."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udccc ",(0,r.jsx)(n.strong,{children:"[Diagram Placeholder: Hybrid PoS + PoR Eligibility and Rewards Model]"})]}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n    Stake[Stake] --\x3e G[Eligibility Gate]\n    PoR[Aggregated PoR Proof] --\x3e G[Eligibility Gate]\n\n    G --\x3e|If Eligible| Block[Block Proposal]\n    Block --\x3e Rewards[Reward Distribution]\n\n    Rewards --\x3e V[Validators XX%]\n    Rewards --\x3e C[Compute Nodes YY%]\n    Rewards --\x3e P[Proof Generators ZZ%]\n    Rewards --\x3e T[Treasury TT%]\n\n    %% Styling\n    Stake:::stake\n    PoR:::proof\n    G:::gate\n    Block:::block\n    Rewards:::rewards\n    V:::val\n    C:::compute\n    P:::proof\n    T:::treasury\n\nclassDef stake fill:#cce5ff,stroke:#000,stroke-width:1px;\nclassDef proof fill:#ffe5b4,stroke:#000,stroke-width:1px;\nclassDef gate fill:#fff3cd,stroke:#000,stroke-width:1px;\nclassDef block fill:#d1c4e9,stroke:#000,stroke-width:1px;\nclassDef rewards fill:#b3e5fc,stroke:#000,stroke-width:1px;\nclassDef val fill:#f8d7da,stroke:#000,stroke-width:1px;\nclassDef compute fill:#d4edda,stroke:#000,stroke-width:1px;\nclassDef treasury fill:#e2e3e5,stroke:#000,stroke-width:1px;\n"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"        [ Stake ] ----------------\\\n                                   >----\x3e [ Eligibility Gate ]\n[ Aggregated PoR Proof ] ---------/            (e.g., VRF/slot)\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Eligibility condition:  ELIGIBLE = (Stake >= min_stake) AND (Valid PoR proof attached)"}),"\n",(0,r.jsx)(n.p,{children:"If ELIGIBLE:\n-> Propose Block (includes aggregated PoR proof)\n-> On finalization, split rewards:"}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:" +-----------------------------+ \n |        Rewards Split        | \n +-----------------------------+ \n | Validators (security)   XX% | \n | Compute Nodes (work)    YY% | \n | Proof Generators        ZZ% | \n | Treasury / Grants       TT% | \n +-----------------------------+ \n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Anti-Sybil: stake-based weighting; PoR proofs must meet min quality/volume threshold."}),"\n"]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"recursive-proof-aggregation",children:"Recursive Proof Aggregation"}),"\n",(0,r.jsx)(n.p,{children:"Multiple proofs of useful computations can be recursively aggregated into a single succinct proof, then verified on Mina L1 at constant cost."}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udccc ",(0,r.jsx)(n.strong,{children:"[Diagram Placeholder: Recursive Aggregation Flow \u2014 Many proofs \u2192 Aggregators (levels) \u2192 Single Aggregated Proof \u2192 Mina L1]"})]}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n    PA[Proof A] --\x3e L1[Aggregator Level 1]\n    PB[Proof B] --\x3e L1\n    PC[Proof C] --\x3e L1\n    PN[Proof N] --\x3e L1\n\n    L1 --\x3e L2[Aggregator Level 2]\n    L2 --\x3e FP[Aggregated Proof]\n    FP --\x3e Mina[Mina L1]\n\n    %% Styling\n    PA:::proof\n    PB:::proof\n    PC:::proof\n    PN:::proof\n    L1:::agg\n    L2:::agg\n    FP:::final\n    Mina:::mina\n\nclassDef proof fill:#ffe5b4,stroke:#000,stroke-width:1px;\nclassDef agg fill:#fff3cd,stroke:#000,stroke-width:1px;\nclassDef final fill:#d1c4e9,stroke:#000,stroke-width:1px;\nclassDef mina fill:#e2e3e5,stroke:#000,stroke-width:1px;"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"     Proof A     Proof B     Proof C     ...     Proof N\n       |            |           |                    |\n       v            v           v                    v\n     +---+        +---+       +---+                +---+\n     | P |        | P |       | P |                | P |\n     +---+        +---+       +---+                +---+\n        \\          /             \\                  /\n         \\        /               \\                /\n          v      v                 v              v\n            +---------------------------------------+\n            |         Aggregator (level 1)          |\n            |      combines subset of proofs        |\n            +---------------------------------------+\n                              |\n                              v\n              +-------------------------------+\n              |     Aggregator (level 2)      |\n              |   recursive merge of level 1  |\n              +-------------------------------+\n                              |\n                              v\n               +-----------------------------+\n               |      Aggregated Proof       |\n               |       (succinct, O(1))      |\n               +-----------------------------+\n                              |\n                              v\n               +-----------------------------+\n               |           Mina L1           |\n               |      verify in ms, tiny     |\n               +-----------------------------+\n\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"incentive-model",children:"Incentive Model"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Users"}),": pay in tokens to submit tasks."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Compute Nodes"}),": rewarded based on volume of useful work proven."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validators"}),": rewarded for securing consensus and including aggregated proofs."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This creates a sustainable economy where computational power is transformed into both blockchain security and scientific progress."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"applications",children:"Applications"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bioinformatics"}),": genome sequencing, protein folding, biomedical simulations."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"AI & ML"}),": decentralized training and validation of models."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scientific Computing"}),": physics, chemistry, and climate simulations."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mathematics"}),": prime chains, optimization, formal proofs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Analytics"}),": large-scale image, log, and signal processing."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"roadmap",children:"Roadmap"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Prototype PoR with zkSNARK circuits (e.g., matrix multiplications)."}),"\n",(0,r.jsx)(n.li,{children:"Implement recursive proof aggregation on Mina."}),"\n",(0,r.jsx)(n.li,{children:"Build a decentralized task marketplace."}),"\n",(0,r.jsx)(n.li,{children:"Launch a PoR-enabled testnet with real scientific workloads."}),"\n",(0,r.jsx)(n.li,{children:"Full mainnet deployment as a Mina L2."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Proof of Research"})," transforms blockchain security from a cost into a ",(0,r.jsx)(n.strong,{children:"public good"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["By leveraging Mina\u2019s recursive zero-knowledge technology, PoR creates a consensus mechanism that is lightweight, secure, and scientifically productive.",(0,r.jsx)(n.br,{}),"\n","It unites financial incentives with meaningful computation, ensuring that every block added to the chain represents both digital trust and a contribution to human knowledge."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,r.jsxs)(n.p,{children:["This white paper and the concept of ",(0,r.jsx)(n.strong,{children:"Proof of Research on Mina Protocol"})," are published under the ",(0,r.jsx)(n.strong,{children:"Creative Commons Attribution-NonCommercial 4.0 International License (CC BY-NC 4.0)"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"You are free to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Share"})," \u2014 copy and redistribute the material in any medium or format."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Adapt"})," \u2014 remix, transform, and build upon the material."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Under the following terms:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Attribution"})," \u2014 You must give appropriate credit to the original author (",(0,r.jsx)(n.em,{children:"Naamah / Thomas"}),"), provide a link to the license, and indicate if changes were made."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NonCommercial"})," \u2014 You may not use the material for commercial purposes without prior written permission from the author."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Full license text: ",(0,r.jsx)(n.a,{href:"https://creativecommons.org/licenses/by-nc/4.0/",children:"https://creativecommons.org/licenses/by-nc/4.0/"})]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>t});var r=s(67294);const o={},i=r.createContext(o);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);