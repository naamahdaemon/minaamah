"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4095],{4122:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var n=s(5893),o=s(1151);const r={sidebar_position:11,sidebar_label:"Generic bash script to send messages to our bot",sidebar_class_name:"green"},a="Purpose",i={id:"Node operator guide/Telegram_bot/generic_telegram_sendmessage_script",title:"Purpose",description:"This section presents a bash script that will serve as a generic message program to talk to our bot.",source:"@site/docs/04-Node operator guide/Telegram_bot/generic_telegram_sendmessage_script.md",sourceDirName:"04-Node operator guide/Telegram_bot",slug:"/Node operator guide/Telegram_bot/generic_telegram_sendmessage_script",permalink:"/docs/Node operator guide/Telegram_bot/generic_telegram_sendmessage_script",draft:!1,unlisted:!1,editUrl:"https://github.com/naamahdaemon/minaamah/tree/main/docs/04-Node operator guide/Telegram_bot/generic_telegram_sendmessage_script.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,sidebar_label:"Generic bash script to send messages to our bot",sidebar_class_name:"green"},sidebar:"mainSidebar",previous:{title:"Why using A telegram bot",permalink:"/docs/Node operator guide/Telegram_bot/monitoring_node_with_telegram"},next:{title:"Sending node uptime to our chatbot",permalink:"/docs/Node operator guide/Telegram_bot/sending_uptime"}},c={},l=[{value:"The <code>tg_logbot.sh</code> script",id:"the-tg_logbotsh-script",level:2}];function d(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"purpose",children:"Purpose"}),"\n",(0,n.jsx)(t.p,{children:"This section presents a bash script that will serve as a generic message program to talk to our bot.\nThe aim is to be able to do something as easy as"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'$ echo "toto" | tg_logbot.sh\n'})}),"\n",(0,n.jsx)(t.p,{children:"To send a message to our chatbot without the need to use complexe curl in each of our programs that will communicate with our chatbot."}),"\n",(0,n.jsxs)(t.h2,{id:"the-tg_logbotsh-script",children:["The ",(0,n.jsx)(t.code,{children:"tg_logbot.sh"})," script"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"$ vim tg_logbot.sh\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'#!/bin/bash\nCHATID="0123456789"\nKEY="`YOUR_BOT_TOKEN`"\nTIME="10"\nURL="https://api.telegram.org/bot$KEY/sendMessage"\nwhile IFS= read -r line; do\n        line=`echo "$line" | sed -e \'s/\\"//g\'`\n        line=`echo "$line" | sed -e \'s/\\[//g\'`\n        echo "$line"\n        line=`echo "$line" | sed -e \'s/\\]//g\'`\n        echo "$line"\n        line=`echo "$line" | sed -e \'s/_/\\\\\\_/g\'`\n        echo "$line"\n        line=`echo "$line" | sed -e \'s/\\*//g\'`\n        echo send new line as msg: "$line"\n        curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&parse_mode=markdown" --data-urlencode "text=$line" $URL >/dev/null\ndone\n'})}),"\n",(0,n.jsxs)(t.p,{children:["You will have to replace the ",(0,n.jsx)(t.code,{children:"CHATID"})," and ",(0,n.jsx)(t.code,{children:"KEY"})," values with your own ones."]}),"\n",(0,n.jsx)(t.p,{children:"Once saved, make the script executable :"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"$ chmod +x tg_logbot.sh\n"})}),"\n",(0,n.jsxs)(t.p,{children:["And once again, that is ALL !!",(0,n.jsx)(t.br,{}),"\n","You can now try to ",(0,n.jsx)(t.strong,{children:"pipe"}),", ",(0,n.jsx)(t.strong,{children:"tail"}),", ",(0,n.jsx)(t.strong,{children:"cat"})," whatever your want to the shell script which will handle its transfer to our chatbot !!"]})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>i,a:()=>a});var n=s(7294);const o={},r=n.createContext(o);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);