{"searchDocs":[{"title":"Follow me on twitter","type":0,"sectionRef":"#","url":"/blog/Follow me on twitter","content":"Like this website ? Follow me on twitter to get some live news on mina protocol. https://x.com/naamahdaemon","keywords":"","version":null},{"title":"Join my discord server","type":0,"sectionRef":"#","url":"/blog/Join my discord server","content":"Stay in touch. Join my discord server. People all around the world welcome ! D√©l√©gateurs fran√ßais ? On parle fran√ßais l√†-bas aussi üòä https://discord.gg/JpB9jwuZ","keywords":"","version":null},{"title":"Mina Payout Calculator added","type":0,"sectionRef":"#","url":"/blog/Mina Payout Calculator added","content":"You can now retieve the current (or selected) epooch due payouts to my delegators in real time here : Payouts You'll find also additional realtime information on my Block Producer here : Block ProductionDelegations","keywords":"","version":null},{"title":"Mina Contributions","type":0,"sectionRef":"#","url":"/blog/Mina Contributions","content":"Very proud to be able to contribute to the amazing Mina community !! https://discord.com/channels/484437221055922177/601171209287368715/1210579464891801630 SUPPORT ME Support me by delegating to my Block Producer ! B62qpsyB3gCndt8sNz4GRwusBtg9U72TNiL4mxmcQfWKZ5noa9fFnWr My commission fees for regular blocks will be as low as 1% until total independent delegators stake reach 500k Mina.","keywords":"","version":null},{"title":"Welcome","type":0,"sectionRef":"#","url":"/blog/welcome","content":"Welcome to this website. I will post here some information and share my experience regarding Mina protocol - the smallest blockchain. This site is under construction. Be Patient. Stay tuned for more information","keywords":"","version":null},{"title":"Delegation Program","type":0,"sectionRef":"#","url":"/docs/General Information/delegation_program","content":"Delegation Program The Mina Foundation's delegation program (there is also a delegation program operated by o1labs) allows, under certain conditions, delegation of approximately 800k-1M Mina from the Mina Foundation. This enables independent validators to produce blocks and receive rewards (coinbase) for the production of these blocks. Information about how to join and program conditions are available here : https://www.minafoundation.com/#delegation In practice, the conditions to be met to qualify for a delegation from the foundation are as follows: Operate one or more servers running a Mina validation node.Maintain a global server uptime of 100% for a minimum of 3 months (90 days), after which the first eligibility condition will be met (uptime = 100%).Provide the KYC (Know Your Customer) information requested by the program initiators (Mina Foundation / o1Labs) through one of their approved partners (Coinlist / Synaps).Be among the top 240 validators with the highest uptime score (100% being the standard; there are approximately 340 operators with 100% uptime today). In case of a tie, the foundation or o1labs conducts a random draw. Once the delegation is obtained, adhere to the rules imposed by the foundation: Calculate the reward amount to be returned to each delegator accurately (there is a script to automate this process).Return the required reward amount within the specified timeframe (block 3500 of epoch n+1 at the latest)Follow the rules (transaction memo containing the MD5 hash of the block producer's public address, amount, and repayment deadline)","keywords":"","version":"Next"},{"title":"Monitoring with Grafana","type":0,"sectionRef":"#","url":"/docs/Node operator guide/Monitoring/grafana_and_prometheus","content":"","keywords":"","version":"Next"},{"title":"Pre-requisites - what will you need ?‚Äã","type":1,"pageTitle":"Monitoring with Grafana","url":"/docs/Node operator guide/Monitoring/grafana_and_prometheus#pre-requisites---what-will-you-need-","content":" ","version":"Next","tagName":"h2"},{"title":"What is Grafana ?‚Äã","type":1,"pageTitle":"Monitoring with Grafana","url":"/docs/Node operator guide/Monitoring/grafana_and_prometheus#what-is-grafana-","content":" ","version":"Next","tagName":"h2"},{"title":"What is Prometheus ?‚Äã","type":1,"pageTitle":"Monitoring with Grafana","url":"/docs/Node operator guide/Monitoring/grafana_and_prometheus#what-is-prometheus-","content":" ","version":"Next","tagName":"h2"},{"title":"What is Loki ?‚Äã","type":1,"pageTitle":"Monitoring with Grafana","url":"/docs/Node operator guide/Monitoring/grafana_and_prometheus#what-is-loki-","content":" ","version":"Next","tagName":"h2"},{"title":"What is Node Exporter ?‚Äã","type":1,"pageTitle":"Monitoring with Grafana","url":"/docs/Node operator guide/Monitoring/grafana_and_prometheus#what-is-node-exporter-","content":" ","version":"Next","tagName":"h2"},{"title":"Installing Grafana‚Äã","type":1,"pageTitle":"Monitoring with Grafana","url":"/docs/Node operator guide/Monitoring/grafana_and_prometheus#installing-grafana","content":"   ","version":"Next","tagName":"h2"},{"title":"Setting up Grafana‚Äã","type":1,"pageTitle":"Monitoring with Grafana","url":"/docs/Node operator guide/Monitoring/grafana_and_prometheus#setting-up-grafana","content":" ","version":"Next","tagName":"h2"},{"title":"Architecture‚Äã","type":1,"pageTitle":"Monitoring with Grafana","url":"/docs/Node operator guide/Monitoring/grafana_and_prometheus#architecture","content":" ","version":"Next","tagName":"h2"},{"title":"Why and how to centralize monitoring of distant hosted nodes securely ?‚Äã","type":1,"pageTitle":"Monitoring with Grafana","url":"/docs/Node operator guide/Monitoring/grafana_and_prometheus#why-and-how-to-centralize-monitoring-of-distant-hosted-nodes-securely-","content":" ","version":"Next","tagName":"h3"},{"title":"Pre-requisites‚Äã","type":1,"pageTitle":"Monitoring with Grafana","url":"/docs/Node operator guide/Monitoring/grafana_and_prometheus#pre-requisites","content":" ","version":"Next","tagName":"h3"},{"title":"Principles‚Äã","type":1,"pageTitle":"Monitoring with Grafana","url":"/docs/Node operator guide/Monitoring/grafana_and_prometheus#principles","content":"","version":"Next","tagName":"h3"},{"title":"Useful links","type":0,"sectionRef":"#","url":"/docs/General Information/usefull_links","content":"","keywords":"","version":"Next"},{"title":"Mina Roadmap‚Äã","type":1,"pageTitle":"Useful links","url":"/docs/General Information/usefull_links#mina-roadmap","content":" You will find the exciting Mina roadmap on official web site here :    ","version":"Next","tagName":"h2"},{"title":"Mina Official links‚Äã","type":1,"pageTitle":"Useful links","url":"/docs/General Information/usefull_links#mina-official-links","content":"  Mina official website : https://minaprotocol.com Mina discord server : Mina discord server Mina official documentation : https://docs.minaprotocol.com/en You'll find here how to run a node and many other information. Mina Github : https://github.com/MinaProtocol Mina forums : https://forums.minaprotocol.com/ Mina Twitter : https://twitter.com/minaprotocol Mina Telegram : https://t.me/minaprotocol Additional non-official localized telegram channel are provided by the community Mina Foundation Delegation program : https://www.minafoundation.com/#delegation Mina Proof of Stake consensus explained : https://docs.minaprotocol.com/mina-protocol/proof-of-stake  ","version":"Next","tagName":"h2"},{"title":"Community maintained Web site‚Äã","type":1,"pageTitle":"Useful links","url":"/docs/General Information/usefull_links#community-maintained-web-site","content":"  Mina Partners / resources and zkApps directory : https://zkok.io/ zkIgnite funded Mina Ecosystem directory  ","version":"Next","tagName":"h2"},{"title":"Wallets‚Äã","type":1,"pageTitle":"Useful links","url":"/docs/General Information/usefull_links#wallets","content":" Although there is no -official- mina wallet (you still can use the command line if your a true warrior üòÅ), there are a few community provided wallets. Those wallets have undergone an independent security audit (but do not believe me, do your own research !). Nevertheless, they are widely used by the community. There may be other wallets out there but as I don't know them, I won't list them here (again, do your own research)   AURO wallet : https://www.aurowallet.com/ Maybe one of the most popular wallet. Auro is available as and Android or iOS application as well as a browser extension. It supports ledger hardware wallet too. Clorio wallet : https://clor.io/ Another popular wallet available as a desktop application or a browser extension. Clorio is not available on mobile (from my knowledge).  ","version":"Next","tagName":"h2"},{"title":"Explorers‚Äã","type":1,"pageTitle":"Useful links","url":"/docs/General Information/usefull_links#explorers","content":"  Mina Explorer : https://minaexplorer.com/ Minataur : https://minataur.net Minascan : https://minascan.io  ","version":"Next","tagName":"h2"},{"title":"Bots‚Äã","type":1,"pageTitle":"Useful links","url":"/docs/General Information/usefull_links#bots","content":"  Mina notifier : https://t.me/MinaNotifierBot A Telegram bot providing alerts on whales transaction, wallet monitoring, .. ","version":"Next","tagName":"h2"},{"title":"Why Mina ?","type":0,"sectionRef":"#","url":"/docs/intro","content":"","keywords":"","version":"Next"},{"title":"Mina Protocol Overview‚Äã","type":1,"pageTitle":"Why Mina ?","url":"/docs/intro#mina-protocol-overview","content":" Mina Protocol aims to be a lightweight blockchain, maintaining a constant size of only 22 KB, regardless of transaction volume. This allows easy node operation and network participation without requiring sophisticated hardware. The native cryptocurrency, MINA, facilitates network transactions and fee distribution.  Blockchain Size Challenges  Traditional blockchains face size challenges with Ethereum growing from 5 GB (April 2016) to over 220 GB (April 2021). Mina addresses this with zk-SNARKS cryptography, reducing the need for each node to store entire transaction histories, promoting decentralization.  ","version":"Next","tagName":"h2"},{"title":"Who Created Mina Protocol?‚Äã","type":1,"pageTitle":"Why Mina ?","url":"/docs/intro#who-created-mina-protocol","content":" Mina Protocol was created by O(1) Labs, founded by Evan Shapiro and Izaak Meckler in 2017. After four years of development, the mainnet launched on March 23, 2021. The Mina Foundation oversees community token sales and network assets.  ","version":"Next","tagName":"h2"},{"title":"How Does Mina Protocol Work?‚Äã","type":1,"pageTitle":"Why Mina ?","url":"/docs/intro#how-does-mina-protocol-work","content":" Mina incorporates zk-SNARKS, allowing transaction confirmation without revealing data. This, combined with Proof-of-Stake consensus, significantly reduces processing and recording resources. Nodes and specialized Snark workers are essential for efficient network operation.  ","version":"Next","tagName":"h2"},{"title":"MINA Token Value‚Äã","type":1,"pageTitle":"Why Mina ?","url":"/docs/intro#mina-token-value","content":" MINA serves as Mina Protocol's transaction token, exchangeable like any cryptocurrency. It can be staked for rewards, securing the network. MINA is also used in ZKApps (DApps) interactions, enhancing utility of the Blockchain. ZKApps will be available in the next major release / hardfork of the Blockchain planned on early 2024.  ","version":"Next","tagName":"h2"},{"title":"More information‚Äã","type":1,"pageTitle":"Why Mina ?","url":"/docs/intro#more-information","content":" You'll find more information about Mina Protocol on official discord server and web sites. I highly encourage everyone to join the discord server. You'll always find a helping hand there !   Mina official website https://minaprotocol.com Mina official discord https://discord.gg/minaprotocol The main source of information and assistance on Mina. The Discord server is filled with extraordinary people always ready to help (hopefully, I'm one of them!). Feel free to drop by! Other Online communities https://docs.minaprotocol.com/participate/online-communities Is the official list of links provided by Mina team.  ","version":"Next","tagName":"h2"},{"title":"Who am I ?‚Äã","type":1,"pageTitle":"Why Mina ?","url":"/docs/intro#who-am-i-","content":" I am a mina validator/block producer. I run a bunch of powerfull servers producing blocks, SNARKs and securing the Mina network.  Using available wallets (Auro, Clorio, ..), you can delegate to my block producer  NAAMAH BP ADDRESS B62qpsyB3gCndt8sNz4GRwusBtg9U72TNiL4mxmcQfWKZ5noa9fFnWr   You can find my node address on any mina explorer available for more information.  minataur.net https://minataur.net/address/B62qpsyB3gCndt8sNz4GRwusBtg9U72TNiL4mxmcQfWKZ5noa9fFnWr#overview  minaexplorer.com https://minaexplorer.com/wallet/B62qpsyB3gCndt8sNz4GRwusBtg9U72TNiL4mxmcQfWKZ5noa9fFnWr  minascan.io https://minascan.io/mainnet/validator/B62qpsyB3gCndt8sNz4GRwusBtg9U72TNiL4mxmcQfWKZ5noa9fFnWr/delegations  ABOUT MY DELEGATION CONDITIONS My commission fees for regular blocks will be as low as 1% until total independent delegators stake reach 500k Mina. ","version":"Next","tagName":"h2"},{"title":"How to run a node","type":0,"sectionRef":"#","url":"/docs/Node operator guide/run_a_node","content":"","keywords":"","version":"Next"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"How to run a node","url":"/docs/Node operator guide/run_a_node#prerequisites","content":" Official documentation states the following hardware and software requirements to run a node :  Software: Supported environments include macOS, Linux (Debian 10, 11 and Ubuntu 20.04 LTS), and any host machine with Docker. Processor: Only AMD64 CPU architecture is supported. Hardware: Sending and receiving MINA does not require any special hardware. Running a block producer on the Mina network requires at least: 8-core processor16 GB of RAM Executing one or more Snarks worker More RAM is required to run a SNARK worker node at the same time as a block producer. Network: At least 1 Mbps connection Officially Tested VM Instances : O(1) Labs has tested running nodes on several cloud providers. We recommend the following instances for basic node operator needs. Custom requirements and different cost constraints might require a different instance type. AWS c5.2xlargeGCP c2-standard-8Azure Standard_F8s_v2Digital Ocean c-8-16gib  Additional Note on Prerequisites Regarding the official recommendations, I would add some remarks below.  Regarding supported hardware Note that only Intel/AMD 64-bit processors are supported. Don't try to run Mina on a Raspberry Pi, it won't work !!. Regarding supported operating systems In addition to the official list, it's worth mentioning that a Linux distribution (e.g., Ubuntu 20.04) installed via WSL2 (Windows Linux Subsystem) allows you to run a validation node and all associated features (Snark Worker, etc.) without any issues as easily as on a native Linux machine. It is also possible to use Docker‚Ñ¢ on Windows to install and run Mina. Regarding machine power / required memory quantity While it is possible to run Mina, according to the official recommendations, on a machine with an 8-core processor and 16GB of RAM, from experience, I strongly recommend a machine with a 16-core CPU and 32GB of RAM.  note I have never been able to produce and broadcast a block on time with a machine equipped with an 8-core processor and 16GB of RAM!!  note Mina does not (yet) leverage the power of graphics cards for validation. Therefore, being a gamer is unnecessary to run a validation node. Only the CPU power is utilized.  Processor Generation Furthermore, the CPU generation also plays a significant role. An older processor, with the same number of cores/threads, will be much less powerful than a recent processor. I recommend a Ryzen 7 7700 which will provide more than sufficient power for block production and Snarks generation.  Regarding cloud providers / VPS / VMs and dedicated servers In addition to the official list provided by Mina, which includes major cloud providers (AWS, Azure, GCP, Digital Ocean), it is possible to find other providers offering dedicated servers and/or VMs capable of running a validation node. However, it should be noted that the usage policy of these providers may prohibit the use of machines for any blockchain-related purposes, particularly the implementation of a validation node, whether in PoW or PoS.  It is also worth noting that the operating cost of a rented machine or dedicated VM in a cloud environment can be extremely prohibitive and ultimately not profitable. This cost can range from tens of Euros per month (‚Ç¨50-90) for a dedicated server to several hundred Euros per month (‚Ç¨300-800) for the most expensive cloud services (GCP, Azure, AWS, etc.).  danger It is therefore very important to assess the profitability of the project before committing to recurring costs that can be very high. Especially since it is often desirable/necessary to ensure redundancy at the machine level (between 2 and 3 servers), which multiplies costs, to ensure continuous blockchain operation.  Alternative The best alternative in terms of cost, service, blockchain philosophy, and decentralization is of course running a local validation node, not hosted by a third-party provider. For this, any sufficiently powerful computer can suffice provided that this machine can remain connected to the network 24/7. There are sufficiently powerful mini-PCs (Ryzen 7, Core i7/i9) that are very affordable and can run a local validation node from home. Example: the Geekom A5 equipped with a Ryzen 7 5800H and 32GB of RAM (between ‚Ç¨400 and ‚Ç¨450) https://www.geekom.fr/geekom-a5-mini-pc ","version":"Next","tagName":"h2"},{"title":"Running Mina Mainnet with Docker","type":0,"sectionRef":"#","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet","content":"","keywords":"","version":"Next"},{"title":"Install Docker‚Äã","type":1,"pageTitle":"Running Mina Mainnet with Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet#install-docker","content":" I will not explain here how to install docker. You will find a lot of resources on the internet explaining docker installation in details.  So we can jump to the next step : getting docker image    ","version":"Next","tagName":"h2"},{"title":"Getting lastest Mina Image‚Äã","type":1,"pageTitle":"Running Mina Mainnet with Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet#getting-lastest-mina-image","content":" You can search for the latest docker image available for your system on Docker Hub. Either go to : https://hub.docker.com/r/minaprotocol/mina-daemon/tags and search for the name of the image you want to retrieve or you can search from a simple curlfrom your shell  curl -sN &quot;https://registry.hub.docker.com/v2/repositories/minaprotocol/mina-daemon/tags?ordering=last_updated&amp;name=focal&quot; | jq -r '.results[] | select(.name | contains(&quot;mainnet&quot;)) | &quot; \\(.last_updated) \\t \\(.name)&quot;'   This command will look for the latest mainnet focal release of mina-daemon. it will return the following :   2024-03-28T06:01:17.39397Z 1.4.1-e76fc1c-focal-mainnet 2024-03-14T21:14:24.761851Z 1.4.1-master-ad8ed6e-focal-mainnet 2024-03-14T16:52:34.529917Z 1.4.1-21acbdc-focal-mainnet 2024-03-12T21:58:26.106807Z 1.4.1beta1-21acbdc-focal-mainnet 2024-03-12T20:58:06.691164Z 1.4.1beta1-master-21acbdc-focal-mainnet   Then you will just have to pick the latest version available which is in this case 1.4.1-e76fc1c-focal-mainnet.  After you found the correct version to be installed, just pull the image from docker hub :  docker pull minaprotocol/mina-daemon:1.4.1-e76fc1c-focal-mainnet docker images docker container ls   NOTE Ensure you use the latest docker image available on docker hub. Go to https://github.com/MinaProtocol/mina/releases/ to check for the latest release available.  ","version":"Next","tagName":"h2"},{"title":"Preparing launch‚Äã","type":1,"pageTitle":"Running Mina Mainnet with Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet#preparing-launch","content":" Here, we'll create the required directories and files to map with the docker container.  cd /home/mina mkdir docker cd docker/ mkdir mina cd mina/ mkdir .mina-config mkdir keys ll ~/keys/   Existing Keys If you already have some keys you want to use for your BP, then simply copy those keys to your mapped folder : cp ~/keys/* keys/ ll keys/ chmod 700 keys   Then copy your .mine-env existing folder if you already have one  cp ~/.mina-env ./   ","version":"Next","tagName":"h2"},{"title":"Running the container‚Äã","type":1,"pageTitle":"Running Mina Mainnet with Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet#running-the-container","content":" Running Mina container interactive bash session docker run --name mina -p 9302:9302 -p 4085:3085 -p 4095:4095 -p 7060:7060 \\ --mount &quot;type=bind,source=$(pwd)/.mina-env,dst=/entrypoint.d/.mina-env,readonly&quot; \\ --mount &quot;type=bind,source=$(pwd)/keys,dst=/keys,readonly&quot; \\ --mount &quot;type=bind,source=$(pwd)/.mina-config,dst=/root/.mina-config&quot; \\ --env MINA_LIBP2P_PASS='****' \\ --env MINA_PRIVKEY_PASS='****' \\ --env UPTIME_PRIVKEY_PASS='****' \\ --entrypoint /bin/bash -it f12d8a034bda   Working with containers f12d8a034bda is the container identifier. press CTRL+P CTRL+Q to detach container User docker attach mina to reattach container  Generate new keys If you did not use existing BP keys (see ‚¨ÜÔ∏èPreparing Launch), you can generate freshj new ones using mina-generate-keypair utility once inside the running container : root@b8244db5dff8:~# mina-generate-keypair --privkey-path /root/keys/my-wallet Password for new private key file: Again to confirm: Keypair generated Public key: B62... Raw public key: 63B...     ","version":"Next","tagName":"h2"},{"title":"Launching Mina Daemon‚Äã","type":1,"pageTitle":"Running Mina Mainnet with Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet#launching-mina-daemon","content":" Once logged into the Docker container :  Run Mina mina daemon --peer-list-url https://storage.googleapis.com/mina-seed-lists/mainnet_seeds.txt \\ --external-port 9302 \\ --block-producer-key /keys/my-wallet \\ --limited-graphql-port 4095 \\ --metrics-port 7060 \\ --coinbase-receiver B62qr1kSFmLBtFbx22VwX2m9WWHVLziYUXNnY8413dsTAfsChHjTM2S \\ --uptime-submitter-key /keys/my-wallet \\ --uptime-url https://uptime-backend.minaprotocol.com/v1/submit \\ --external-ip 65.108.142.213 \\ --insecure-rest-server   ","version":"Next","tagName":"h2"},{"title":"Getting daemon status from host‚Äã","type":1,"pageTitle":"Running Mina Mainnet with Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet#getting-daemon-status-from-host","content":" Status‚Äã  docker exec -it mina mina client status   ","version":"Next","tagName":"h2"},{"title":"Network notice‚Äã","type":1,"pageTitle":"Running Mina Mainnet with Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet#network-notice","content":" Docker run in bridged mode by default (it is possible to run docker in host mode). This can lead to network problems if you need to access some networking ports exposed by the mina daemon running into a docker container.  If you encounter some network problems with your running daemon, get the virtuel ip adress of your docker container (using ifconfig for instance) and use this IP address to communicate.  Running Docker in host mode There are both benefits and caveats to running Docker in either bridge mode or host mode. You can learn more from the official Docker documentation: https://docs.docker.com/network/drivers/host/ ","version":"Next","tagName":"h2"},{"title":"Frequently Ask Questions","type":0,"sectionRef":"#","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley_docker_faq","content":"","keywords":"","version":"Next"},{"title":"Official documentation‚Äã","type":1,"pageTitle":"Frequently Ask Questions","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley_docker_faq#official-documentation","content":" Official documentation to run a berkeley node is available here (latest Berkeley release on Feb, 18th 2024):  https://github.com/MinaProtocol/mina/releases/tag/2.0.0berkeley_rc1  Some additional information about running a mina node with docker is available here (may not be up to date and may concern mainnet, devnet and not Berkeley but a source of inspiration anyway) :  Additional Documentation Staketab documentationhttps://minanode.staketab.com/english/node-launch-options/running-mina-with-dockerOfficial mina testnet documentationhttps://docs.minaprotocol.com/node-operators/connecting-to-devnetOfficial mina mainnet documentationhttps://docs.minaprotocol.com/node-operators/connecting-to-the-network#docker    ","version":"Next","tagName":"h2"},{"title":"Docker images‚Äã","type":1,"pageTitle":"Frequently Ask Questions","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley_docker_faq#docker-images","content":" Mina docker images are available on Docker Hub :  https://hub.docker.com/r/minaprotocol/mina-daemon/tags  For instance, the latest Berkeley RC1 release for Ubuntu Focal :  Links to Google Cloud images are also available in the Github release note : https://github.com/MinaProtocol/mina/releases/tag/2.0.0berkeley_rc1 Every docker image is built for each of the supported platforms. To select the base docker image, replace CODENAME with the codename appropriate for your machine (focal, buster, or bullseye): Mina Daemon: gcr.io/o1labs-192920/mina-daemon:2.0.0berkeley-rc1-1551e2f-CODENAME-berkeleyMina Archive: gcr.io/o1labs-192920/mina-archive:2.0.0berkeley-rc1-1551e2f-CODENAME So if you want to download the FOCAL latest release you can docker pull the following : https://gcr.io/o1labs-192920/mina-daemon:2.0.0berkeley-rc1-1551e2f-focal-berkeley    ","version":"Next","tagName":"h2"},{"title":"Usefull Docker CLI‚Äã","type":1,"pageTitle":"Frequently Ask Questions","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley_docker_faq#usefull-docker-cli","content":" ","version":"Next","tagName":"h2"},{"title":"List available images‚Äã","type":1,"pageTitle":"Frequently Ask Questions","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley_docker_faq#list-available-images","content":" $ docker images   ","version":"Next","tagName":"h3"},{"title":"List docker container‚Äã","type":1,"pageTitle":"Frequently Ask Questions","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley_docker_faq#list-docker-container","content":" There are 2 ways you can list running docker containers :  $ docker container ls   or  $ docker ps   There are 2 ways you can list all containers :  $ docker container ls -a   or  $ docker ps -a   ","version":"Next","tagName":"h3"},{"title":"Stop a running container‚Äã","type":1,"pageTitle":"Frequently Ask Questions","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley_docker_faq#stop-a-running-container","content":" $ docker stop &lt;container_name_or_id&gt;   ","version":"Next","tagName":"h3"},{"title":"Start a container‚Äã","type":1,"pageTitle":"Frequently Ask Questions","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley_docker_faq#start-a-container","content":" $ docker start &lt;container_name_or_id&gt;   ","version":"Next","tagName":"h3"},{"title":"Remove a docker container‚Äã","type":1,"pageTitle":"Frequently Ask Questions","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley_docker_faq#remove-a-docker-container","content":" You can remove a Docker container :  $ docker rm &lt;container_name_or_id&gt;   ","version":"Next","tagName":"h3"},{"title":"Reattach a detach container‚Äã","type":1,"pageTitle":"Frequently Ask Questions","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley_docker_faq#reattach-a-detach-container","content":" You can detach a container to let it run in the background by using CTRL+p CTRL+q. You may want to reattach a detached container. That can be achieved by :  $ docker attach &lt;container_name_or_id&gt;   ","version":"Next","tagName":"h3"},{"title":"Removing all stopped containers‚Äã","type":1,"pageTitle":"Frequently Ask Questions","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley_docker_faq#removing-all-stopped-containers","content":" The docker container prune command is used to remove all stopped containers from your Docker environment. It's a convenient way to clean up your system by removing containers that are no longer in use  $ docker container prune   ","version":"Next","tagName":"h3"},{"title":"Overriding Container entrypoint‚Äã","type":1,"pageTitle":"Frequently Ask Questions","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley_docker_faq#overriding-container-entrypoint","content":" Overriding the default container entrypoint can be really usefull to debug. We used this in the &quot;Running a node on Mina berkeley with docker documentation&quot; to access the container through an interactive shell that allowed us to generate all keys before launching the mina dameon (that failed without this).  For this, you will use the --entrypoint Docker command line parameter allowing you to specify to launch a bash shell for instance  Exemple $ docker run --name mina -p 9302:8302 -p 127.0.0.1:3085:3085 \\ --mount &quot;type=bind,source=$(pwd)/keys,dst=/root/keys&quot; \\ --mount &quot;type=bind,source=$(pwd)/config,dst=/root/.mina-config&quot; \\ --env MINA_LIBP2P_PASS='pass' \\ --env MINA_PRIVKEY_PASS='pass' \\ --env UPTIME_PRIVKEY_PASS='pass' \\ --entrypoint /bin/bash -it 353043fd4878  ","version":"Next","tagName":"h3"},{"title":"Running Mina Berkeley (the easiest way .. I found)","type":0,"sectionRef":"#","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley","content":"","keywords":"","version":"Next"},{"title":"STEP 1 - Pull latest docker image‚Äã","type":1,"pageTitle":"Running Mina Berkeley (the easiest way .. I found)","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley#step-1---pull-latest-docker-image","content":" $ docker pull gcr.io/o1labs-192920/mina-daemon:2.0.0berkeley-rc1-1551e2f-focal-berkeley $ docker images REPOSITORY TAG IMAGE ID CREATED SIZE minaprotocol/mina-daemon 2.0.0berkeley-rc1-1551e2f-focal-berkeley 353043fd4878 2 weeks ago 2.41GB   ","version":"Next","tagName":"h2"},{"title":"STEP 2 - Create your keys and config directories on the host‚Äã","type":1,"pageTitle":"Running Mina Berkeley (the easiest way .. I found)","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley#step-2---create-your-keys-and-config-directories-on-the-host","content":" $ mkdir keys $ mkdir config   ","version":"Next","tagName":"h2"},{"title":"STEP 3 - Getting an interactive bash session to the container‚Äã","type":1,"pageTitle":"Running Mina Berkeley (the easiest way .. I found)","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley#step-3---getting-an-interactive-bash-session-to-the-container","content":" $ docker run --name mina -p 9302:8302 -p 127.0.0.1:3085:3085 --mount &quot;type=bind,source=$(pwd)/keys,dst=/root/keys&quot; --mount &quot;type=bind,source=$(pwd)/config,dst=/root/.mina-config&quot; --env MINA_LIBP2P_PASS='pass' --env MINA_PRIVKEY_PASS='pass' --env UPTIME_PRIVKEY_PASS='pass' --entrypoint /bin/bash -it 353043fd4878   Map keys and config directory from the host to the target container.Set your env variables MINA_LIBP2P_PASS, MINA_PRIVKEY_PASS (optionnal if you want to run a bloc producer) and UPTIME_PRIVKEY_PASS (not required/useless on berkeley)  353043fd4878 is your image id.  ","version":"Next","tagName":"h2"},{"title":"STEP 4 - Generating libp2p keypair‚Äã","type":1,"pageTitle":"Running Mina Berkeley (the easiest way .. I found)","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley#step-4---generating-libp2p-keypair","content":" Once inside your container, you now have access to the shell. We'll use this to generate the libp2p key pair inside the /root/keys directory :  root@09437a971acb:~# mina libp2p generate-keypair -privkey-path /root/keys/libp2p Password for new private key file: Again to confirm: libp2p keypair: CAESQFGW4XhXBHPsGf...   Put the same password as the one you specify above for MINA_LIBP2P_PASS environment variable  ","version":"Next","tagName":"h2"},{"title":"STEP 5 - Generating BP keys‚Äã","type":1,"pageTitle":"Running Mina Berkeley (the easiest way .. I found)","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley#step-5---generating-bp-keys","content":" Then we'll generate the BP key (if needed) :  root@b8244db5dff8:~# mina-generate-keypair --privkey-path /root/keys/my-wallet Password for new private key file: Again to confirm: Keypair generated Public key: B62... Raw public key: 63B...   Put the same password as the one you specify above for MINA_PRIVKEY_PASS environment variable  ","version":"Next","tagName":"h2"},{"title":"STEP 6 - Launch Mina Daemon‚Äã","type":1,"pageTitle":"Running Mina Berkeley (the easiest way .. I found)","url":"/docs/Node operator guide/Running_Docker_Berkeley_Node/running_berkeley#step-6---launch-mina-daemon","content":" root@b8244db5dff8:~# mina daemon --peer-list-url https://storage.googleapis.com/seed-lists/berkeley_seeds.txt --libp2p-keypair ~/keys/libp2p --block-producer-key /root/keys/my-wallet --insecure-rest-server --open-limited-graphql-port --limited-graphql-port 3095 --file-log-level Debug -log-level Info   Once inside the container, pressing Ctrl + p, Ctrl + q will detach you from the container's console and leave the container running in the background.  You'll be able to reattach to you running mina container using :  $ docker attach mina   Launch intercative shell session again and check mina daemon status  You can launch an additionnal interactive session again to interact with mina daemon if needed :  $ docker exec -it mina /bin/bash   Then you can get the status of you mina daemon and guess what ? It is synced !!  root@156a3593fdf3:~# mina client status Mina daemon status ----------------------------------- Global number of accounts: 8181 Block height: 4285 Max observed block height: 4285 Max observed unvalidated block height: 4285 Local uptime: 26m32s Ledger Merkle root: jwi4sfjSY6JYKrjaL2wUUhYb6t7Ra5p5JhiMdznNFxbSPFZoN4W Protocol state hash: 3NLwovdQsqLfz8qHFrqbuLx7u4KccdbD94S65pKrw6tVVgHWkbkb Chain id: fd7d111973bf5a9e3e87384f560fdead2f272589ca00b6d9e357fca9839631da Git SHA-1: 1551e2faaa246c01636908aabe5f7981715a10f4 Configuration directory: /root/.mina-config Peers: 14 User_commands sent: 0 SNARK worker: None SNARK work fee: 100000000 Sync status: Synced Catchup status: To build breadcrumb: 0 To initial validate: 0 Finished: 293 To download: 0 Waiting for parent to finish: 0 To verify: 0 Block producers running: 1 (B62qmo7WKXRS3NNC7XNjZ15XDVD2doVgEoXKW4ELeE4SFDACzSm8vT7) Coinbase receiver: Block producer Best tip consensus time: epoch=1, slot=359 Best tip global slot (across all hard-forks): 7499 Next block will be produced in: None this epoch‚Ä¶ checking at in 14.125d (Generated from consensus at slot: 6970 slot-since-genesis: 6970) Consensus time now: epoch=1, slot=359 Consensus mechanism: proof_of_stake Consensus configuration: Delta: 0 k: 290 Slots per epoch: 7140 Slot duration: 3m Epoch duration: 14d21h Chain start timestamp: 2024-02-02 14:01:01.000000Z Acceptable network delay: 3m Addresses and ports: External IP: 0.0.0.0 Bind IP: 0.0.0.0 Libp2p PeerID: 12D3KooWE1tZXChc9c9ZbgwMgVVnmjqio49KKoZvEjeyaAEAWkYH Libp2p port: 8302 Client port: 8301 Metrics: block_production_delay: 7 (0 0 0 0 0 0 0) transaction_pool_diff_received: 48 transaction_pool_diff_broadcasted: 0 transactions_added_to_pool: 24 transaction_pool_size: 6 snark_pool_diff_received: 41 snark_pool_diff_broadcasted: 0 pending_snark_work: 0 snark_pool_size: 18  ","version":"Next","tagName":"h2"},{"title":"Running Mina Mainnet Archive Node on Docker","type":0,"sectionRef":"#","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive","content":"","keywords":"","version":"Next"},{"title":"Installing Postgres Database Docker Container‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#installing-postgres-database-docker-container","content":" ","version":"Next","tagName":"h2"},{"title":"Pull image‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#pull-image","content":" docker pull postgres   ","version":"Next","tagName":"h3"},{"title":"Run container‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#run-container","content":" docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=postgres -d postgres   ","version":"Next","tagName":"h3"},{"title":"create Database‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#create-database","content":" docker exec -it postgres createdb -U postgres archive   Liste databases echo &quot;SELECT datname FROM pg_database;&quot; | docker exec -i postgres psql -U postgres -d archive   ","version":"Next","tagName":"h3"},{"title":"Import database‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#import-database","content":" curl -Ls https://raw.githubusercontent.com/MinaProtocol/mina/master/src/app/archive/create_schema.sql | docker exec -i postgres psql -U postgres -d archive   List all databases echo &quot;\\dt&quot; | docker exec -i postgres psql -U postgres -d archive   ","version":"Next","tagName":"h3"},{"title":"Installing Mina Archive Node‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#installing-mina-archive-node","content":" ","version":"Next","tagName":"h2"},{"title":"Get docker image‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#get-docker-image","content":" As for the mina-daemon github image, you can look for the latest version of mina-archive matching your mina-daemon version from docker hub :  curl -sN &quot;https://registry.hub.docker.com/v2/repositories/minaprotocol/mina-archive/tags?ordering=last_updated&amp;name=1.4.1&quot; | jq -r '.results[] | select(.name | contains(&quot;focal&quot;)) | &quot; \\(.last_updated) \\t \\(.name)&quot;'   This command will look for the latest 1.4.1 focal release of mina-archive. it will return the following :   2024-03-28T06:00:26.05546Z 1.4.1-e76fc1c-focal 2024-03-14T21:13:27.723574Z 1.4.1-master-ad8ed6e-focal 2024-03-14T16:51:27.896839Z 1.4.1-21acbdc-focal 2024-03-12T21:57:15.389135Z 1.4.1beta1-21acbdc-focal   Then you will just have to pick the latest version available which is in this case 1.4.1-e76fc1c-focal.  docker pull minaprotocol/mina-archive:1.4.1-e76fc1c-focal   ","version":"Next","tagName":"h3"},{"title":"Create temporary directory‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#create-temporary-directory","content":" mkdir -p /tmp/archive   ","version":"Next","tagName":"h3"},{"title":"Create local directory to store stuff and wget the latest database dump‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#create-local-directory-to-store-stuff-and-wget-the-latest-database-dump","content":" mkdir archive_node cd archive_node/ wget --inet4-only https://storage.googleapis.com/mina-archive-dumps/mainnet-archive-dump-2024-03-28_0001.sql.tar.gz tar xvf mainnet-archive-dump-2024-03-28_0001.sql.tar.gz   How to get the latest database dump available ? From a google cloud console, you can look for the latest database dump available using the following command line : gsutil ls -l gs://mina-archive-dumps/mainnet* | grep mainnet-archive-dump | grep 2024-03 This will search for all mainnet archive dumps available for March, 2024. 1037223471 2024-03-01T00:09:00Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-01_0001.sql.tar.gz 1038036714 2024-03-02T00:09:27Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-02_0001.sql.tar.gz 1038705304 2024-03-03T00:09:12Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-03_0001.sql.tar.gz 1040347494 2024-03-04T00:09:28Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-04_0001.sql.tar.gz 1041544668 2024-03-05T00:09:07Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-05_0001.sql.tar.gz 1042530101 2024-03-06T00:09:16Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-06_0001.sql.tar.gz 1043968663 2024-03-07T00:09:20Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-07_0001.sql.tar.gz 1046183259 2024-03-08T00:09:21Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-08_0001.sql.tar.gz 1048471704 2024-03-09T00:12:17Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-09_0003.sql.tar.gz 1050222256 2024-03-10T00:09:04Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-10_0001.sql.tar.gz 1052718697 2024-03-11T00:09:06Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-11_0001.sql.tar.gz 1054899270 2024-03-12T00:09:22Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-12_0001.sql.tar.gz 1056512846 2024-03-13T00:09:14Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-13_0001.sql.tar.gz 1058309593 2024-03-14T00:09:12Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-14_0001.sql.tar.gz 1059496578 2024-03-15T00:09:40Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-15_0001.sql.tar.gz 1060379733 2024-03-16T00:09:25Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-16_0001.sql.tar.gz 1061349319 2024-03-17T00:09:39Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-17_0001.sql.tar.gz 1063031545 2024-03-18T00:09:30Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-18_0001.sql.tar.gz 1064066717 2024-03-19T00:10:01Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-19_0001.sql.tar.gz 1064937270 2024-03-20T00:09:13Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-20_0001.sql.tar.gz 1066622955 2024-03-21T00:08:56Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-21_0001.sql.tar.gz 1067571505 2024-03-22T00:08:54Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-22_0001.sql.tar.gz 1069661202 2024-03-23T00:09:05Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-23_0001.sql.tar.gz 1071691612 2024-03-24T00:09:06Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-24_0001.sql.tar.gz 1073968497 2024-03-25T00:08:56Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-25_0001.sql.tar.gz 1075411684 2024-03-26T00:09:19Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-26_0001.sql.tar.gz 1076374149 2024-03-27T00:09:14Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-27_0001.sql.tar.gz 1078286270 2024-03-28T00:09:15Z gs://mina-archive-dumps/mainnet-archive-dump-2024-03-28_0001.sql.tar.gz The latest dump available is mainnet-archive-dump-2024-03-28_0001.sql.tar.gz  ","version":"Next","tagName":"h3"},{"title":"Import the dump into postgres‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#import-the-dump-into-postgres","content":" docker cp mainnet-archive-dump-2024-03-28_0001.sql postgres:/mainnet-archive-dump-2024-03-28_0001.sql docker exec -i postgres psql -U postgres -d archive -f /mainnet-archive-dump-2024-03-28_0001.sql   checking everything is ok after the dump is imported docker exec -it postgres bash Then once in the container : root@f4f526a38062:/## psql -U postgres -d archive_balances_migrated archive_balances_migrated=## SELECT datname FROM pg_catalog.pg_database; datname --------------------------- postgres archive template1 template0 archive_balances_migrated (5 rows) archive_balances_migrated=## \\dt List of relations Schema | Name | Type | Owner --------+--------------------------+-------+---------- public | balances | table | postgres public | blocks | table | postgres public | blocks_internal_commands | table | postgres public | blocks_user_commands | table | postgres public | epoch_data | table | postgres public | internal_commands | table | postgres public | public_keys | table | postgres public | snarked_ledger_hashes | table | postgres public | timing_info | table | postgres public | user_commands | table | postgres (10 rows) note A new archive_balances_migrated database has been created The archivedatabase is useless  THE DUMP IS IMPORTED !! The dump has been successfully imported. We can check the latest leist of blocks that are present in the database : archive_balances_migrated=## select * from blocks order by global_slot desc limit 10; id | state_hash | parent_id | parent_hash | creator_id | block_winner_id | snarked_ledger_hash_id | staking_epoch_data_id | next_epoch_data_id | ledger_hash | height | global_slot | global_slot_since_genesis | timestamp | chain_status ---------+------------------------------------------------------+-----------+------------------------------------------------------+------------+-----------------+------------------------+-----------------------+--------------------+-----------------------------------------------------+--------+-------------+---------------------------+---------------+-------------- 1087577 | 3NKUGWfxWbDrfybV42unX38hnZ2yqMAyLLiQYZ2B4YcrPF9L4BWc | 1087575 | 3NKfzune2ker9cP4QhJ4vuqWzfVgJJVmX1c3Th4bRQH9bvYna3g8 | 94623 | 101819 | 75169 | 497907 | 505105 | jxJ5Me5aQP4HF9Kcm7mmmeesNFifPHF5qB3hWz8a2QxXNa9Rd7T | 339070 | 527998 | 527998 | 1710978840000 | pending 1087575 | 3NKfzune2ker9cP4QhJ4vuqWzfVgJJVmX1c3Th4bRQH9bvYna3g8 | 1087573 | 3NL5P1dkGo2pXVTX7XedPK1zsvQrNreSF8YTJ1VYVMLXkCxBgfDF | 1987 | 107904 | 75168 | 497907 | 505105 | jy1gishsu6Uts3exnAC5kCF9mNqZtMqfHaSuKhyaxuHtFCa3wiH | 339069 | 527996 | 527996 | 1710978480000 | pending 1087573 | 3NL5P1dkGo2pXVTX7XedPK1zsvQrNreSF8YTJ1VYVMLXkCxBgfDF | 1087571 | 3NLuoC89qa6cGjZ9m5idfAQjsVK5ShNdJmbUWY6KpuEotD4Df7Rp | 162470 | 162558 | 75168 | 497907 | 505105 | jwshPjoFVzh7gxhhvwBn24DEZoE7s859q8nW5iLiqik7x9T1kVR | 339068 | 527994 | 527994 | 1710978120000 | pending 1087571 | 3NLuoC89qa6cGjZ9m5idfAQjsVK5ShNdJmbUWY6KpuEotD4Df7Rp | 1087566 | 3NKTBEhAuHgr43f3bpRsrJ7PuFKtjT3sfMQBDWSxfwkgpoFyK67o | 1483 | 205 | 75168 | 497907 | 505105 | jwNvj1eFX2V7eRL6gDHJwprcHjJNQnDggHVErY1w7Hd7Nf1iJxV | 339067 | 527993 | 527993 | 1710977940000 | pending 1087569 | 3NKXFvaxf7YVhtt5FQKupVcEWWdvDmcaQVKYB5LRoXUuDxbvk9TV | 1087566 | 3NKTBEhAuHgr43f3bpRsrJ7PuFKtjT3sfMQBDWSxfwkgpoFyK67o | 1483 | 205 | 75168 | 497907 | 505105 | jxDPWezuPbPst28NbtzXJv5EWpC1WVFaqW8quCmrzQPdnRsGbFu | 339067 | 527993 | 527993 | 1710977940000 | pending 1087568 | 3NKDL6KnnRQUEruiNEHQM1eeYyTU3E6RPLiS2AQqNGRYiBqk9HUj | 1087566 | 3NKTBEhAuHgr43f3bpRsrJ7PuFKtjT3sfMQBDWSxfwkgpoFyK67o | 1483 | 205 | 75168 | 497907 | 505105 | jxmxAWv7a7Gje8tG33xYaJvQWs3TJrVU7wyAwJYqQkHhaaTFXiu | 339067 | 527993 | 527993 | 1710977940000 | pending 1087565 | 3NKCM4JqTrznCHxr7Xs1djmT4QAMNnZonawE9wghENC5QZU2SZGv | 1087563 | 3NLyYqoniFRMtmkcRkNVJX5Zy15eFNefpTxon57RsrTV63Ysmv25 | 1396 | 3507 | 75168 | 497907 | 505105 | jxHdFJ3EYRpBhvfUWKpQyV8t2sETSkJCPcQhqe8V6XsRJH6vaHS | 339066 | 527991 | 527991 | 1710977580000 | pending 1087566 | 3NKTBEhAuHgr43f3bpRsrJ7PuFKtjT3sfMQBDWSxfwkgpoFyK67o | 1087563 | 3NLyYqoniFRMtmkcRkNVJX5Zy15eFNefpTxon57RsrTV63Ysmv25 | 1396 | 3507 | 75168 | 497907 | 505105 | jwFrq2DwysFpHqNvpTRvH67h52W6vNWztmqAC99pZrZ7A63Vdz9 | 339066 | 527991 | 527991 | 1710977580000 | pending 1087563 | 3NLyYqoniFRMtmkcRkNVJX5Zy15eFNefpTxon57RsrTV63Ysmv25 | 1087558 | 3NLoCUELuKCVRgf6oWKdYtzisjgMonZQjRw81fB61geeXBkwyDYB | 1419 | 97463 | 75168 | 497907 | 505105 | jxYLcPbCDiiBKdoSZzpuss5HhDUEbVUaxVq7BhvSvr1KtcefvU4 | 339065 | 527988 | 527988 | 1710977040000 | pending 1087559 | 3NKhopfj2JKqFvi7kGe3LL1xUbz7E6CbLQpUh1xgdqCAMhPgM53a | 1087556 | 3NL4US8Vt4RCDdWegfA24nFZiJKGHBS1AYHETt9Y7wLcXScvx5ZA | 1483 | 71062 | 75168 | 497907 | 505105 | jwrqN8xGVmxSV7Z5BvQMWeMupBoa7yX5sjuM84ZPm3sCuWHRa9a | 339064 | 527987 | 527987 | 1710976860000 | pending   ","version":"Next","tagName":"h3"},{"title":"Starting the mina-archive container‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#starting-the-mina-archive-container","content":" docker run --name mina-archive -p 3086:3086 -v /tmp/archive:/data --entrypoint /bin/bash -it 154109f4622a   ","version":"Next","tagName":"h3"},{"title":"Running mina-archive‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#running-mina-archive","content":" First check the IP adress of the docker container running postgres : 172.17.0.3  $ docker exec -it postgres bash root@f4f526a38062:/## ifconfig eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500 inet 172.17.0.3 netmask 255.255.0.0 broadcast 172.17.255.255 ether 02:42:ac:11:00:03 txqueuelen 0 (Ethernet) RX packets 145546 bytes 36562420 (34.8 MiB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 149990 bytes 319049761 (304.2 MiB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536 inet 127.0.0.1 netmask 255.0.0.0 loop txqueuelen 1000 (Local Loopback) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0   Then run an interactive bash shell to the mina-archive container and run the mina-archive process :  $ docker exec -it mina-archive bash root@69c535e2f0b6:/## mina-archive run --postgres-uri postgres://postgres@172.17.0.3:5432/archive_balances_migrated --server-port 3086   SUCCESS You are all done !! You can get the last block indexed from the database by entering an interactive bash session to the postgrescontainer : $ docker exec -it postgres bash root@f4f526a38062:/## psql -U postgres -d archive_balances_migrated psql (16.2 (Debian 16.2-1.pgdg120+2)) Type &quot;help&quot; for help. archive_balances_migrated=## SELECT TO_CHAR(TO_TIMESTAMP(timestamp / 1000), 'YYYY-MM-DD HH24:MI:SS') AS utc_time, height, global_slot from blocks order by timestamp desc limit 1; utc_time | height | global_slot ---------------------+--------+------------- 2024-03-21 14:24:00 | 339249 | 528288 (1 row)   ","version":"Next","tagName":"h3"},{"title":"Catchup missing blocks‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#catchup-missing-blocks","content":" In order to catchup missing block, we will use a shell script available here : https://github.com/MinaProtocol/mina/blob/develop/scripts/archive/download-missing-blocks.sh  Script execution The script execution requires some tools from the mina-archive package. Notably : mina-missing-blocks-auditormina-archive-blocks  It means that the script can only be executed from the mina-archive docker container. So we copy the script to the mina-archive container :  docker cp download-missing-blocks.sh mina-archive:/   PROBLEM Now the big problem when running the script from the mina-archive docker container is that it tries to connect to the archive database but failed to do so due to docker network isolation :-( psql -h localhost -p 5432 -U postgres -d archive_balances_migrated FAILS  SOLUTION Use Docker Postgresql network ip address root@69c535e2f0b6:/## export PGPASSWORD=postgres root@69c535e2f0b6:/## ./download-missing-blocks.sh -n mainnet -a postgres://postgres@172.17.0.3:5432/archive_balances_migrated   ","version":"Next","tagName":"h2"},{"title":"USEFUL COMMANDS‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#useful-commands","content":" ","version":"Next","tagName":"h2"},{"title":"List running docker containers‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#list-running-docker-containers","content":" docker ps   ","version":"Next","tagName":"h3"},{"title":"Docker container logs‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#docker-container-logs","content":" docker logs mina   ","version":"Next","tagName":"h3"},{"title":"Launch interactive shell session‚Äã","type":1,"pageTitle":"Running Mina Mainnet Archive Node on Docker","url":"/docs/Node operator guide/Run_Docker_Mainnet/running_docker_mainnet_archive#launch-interactive-shell-session","content":" POSTGRES Container‚Äã  docker exec -it postgres bash   Mina Container‚Äã  docker exec -it mina bash   Mina Archive Container‚Äã  docker exec -it mina-archive bash   Copy a local file to a container‚Äã  docker cp mainnet-archive-dump-2024-03-28_0001.sql postgres:/mainnet-archive-dump-2024-03-28_0001.sql docker cp download-missing-blocks.sh mina-archive:/   Running Mina Archive Container‚Äã  docker run --name mina-archive -p 3086:3086 -v /tmp/archive:/data --entrypoint /bin/bash -it 154109f4622a   note We forward port 3086 in order for the mina daemon to be able to connect to the mina-archive process. We also map /tmp/archive to /data The archive process will be launched manually from within the container (not ideal but more control over)  Running the postgres container‚Äã  docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=postgres -d postgres  ","version":"Next","tagName":"h3"},{"title":"Purpose","type":0,"sectionRef":"#","url":"/docs/Node operator guide/Telegram_bot/generic_telegram_sendmessage_script","content":"","keywords":"","version":"Next"},{"title":"The tg_logbot.sh script‚Äã","type":1,"pageTitle":"Purpose","url":"/docs/Node operator guide/Telegram_bot/generic_telegram_sendmessage_script#the-tg_logbotsh-script","content":" $ vim tg_logbot.sh   #!/bin/bash CHATID=&quot;0123456789&quot; KEY=&quot;`YOUR_BOT_TOKEN`&quot; TIME=&quot;10&quot; URL=&quot;https://api.telegram.org/bot$KEY/sendMessage&quot; while IFS= read -r line; do line=`echo &quot;$line&quot; | sed -e 's/\\&quot;//g'` line=`echo &quot;$line&quot; | sed -e 's/\\[//g'` echo &quot;$line&quot; line=`echo &quot;$line&quot; | sed -e 's/\\]//g'` echo &quot;$line&quot; line=`echo &quot;$line&quot; | sed -e 's/_/\\\\\\_/g'` echo &quot;$line&quot; line=`echo &quot;$line&quot; | sed -e 's/\\*//g'` echo send new line as msg: &quot;$line&quot; curl -s --max-time $TIME -d &quot;chat_id=$CHATID&amp;disable_web_page_preview=1&amp;parse_mode=markdown&quot; --data-urlencode &quot;text=$line&quot; $URL &gt;/dev/null done   You will have to replace the CHATID and KEY values with your own ones.  Once saved, make the script executable :  $ chmod +x tg_logbot.sh   And once again, that is ALL !! You can now try to pipe, tail, cat whatever your want to the shell script which will handle its transfer to our chatbot !! ","version":"Next","tagName":"h2"},{"title":"Why do you need a telegram bot ?","type":0,"sectionRef":"#","url":"/docs/Node operator guide/Telegram_bot/monitoring_node_with_telegram","content":"","keywords":"","version":"Next"},{"title":"Create a telegram bot‚Äã","type":1,"pageTitle":"Why do you need a telegram bot ?","url":"/docs/Node operator guide/Telegram_bot/monitoring_node_with_telegram#create-a-telegram-bot","content":" The process to create a telegram bot is really straightforward and can be achieved in 6 easy steps.  ","version":"Next","tagName":"h2"},{"title":"Step 1. Open the telegram app‚Äã","type":1,"pageTitle":"Why do you need a telegram bot ?","url":"/docs/Node operator guide/Telegram_bot/monitoring_node_with_telegram#step-1-open-the-telegram-app","content":" Open your telegram app on either your mobile phone or your computer  ","version":"Next","tagName":"h3"},{"title":"Step 2. Connect to Bot Father‚Äã","type":1,"pageTitle":"Why do you need a telegram bot ?","url":"/docs/Node operator guide/Telegram_bot/monitoring_node_with_telegram#step-2-connect-to-bot-father","content":" BotFather is a bot/special user created by Telegram that allows you to create and manage your own bots. To connect to BotFather, search for &quot;@BotFather&quot; in the Telegram app and click on the result to start a conversation.    ","version":"Next","tagName":"h3"},{"title":"Step 3. Select the New Bot option‚Äã","type":1,"pageTitle":"Why do you need a telegram bot ?","url":"/docs/Node operator guide/Telegram_bot/monitoring_node_with_telegram#step-3-select-the-new-bot-option","content":" In the conversation with BotFather, select the &quot;New Bot&quot; option to start creating your new bot or simple type /newbot in the message panel. BotFather will guide you through the rest of the process.  ","version":"Next","tagName":"h3"},{"title":"Step 4. Add a bot friendly name and username‚Äã","type":1,"pageTitle":"Why do you need a telegram bot ?","url":"/docs/Node operator guide/Telegram_bot/monitoring_node_with_telegram#step-4-add-a-bot-friendly-name-and-username","content":" Next, BotFather will ask you to provide a name for your bot. Choose a name that accurately reflects the purpose of your bot and is easy to remember.  Lastly, BotFather will ask you to choose a username for your bot. This username will be used to create a unique URL that people can use to access your bot. Choose a username that is easy to remember and related to your bot's purpose.  ","version":"Next","tagName":"h3"},{"title":"Step 5. Test your bot token‚Äã","type":1,"pageTitle":"Why do you need a telegram bot ?","url":"/docs/Node operator guide/Telegram_bot/monitoring_node_with_telegram#step-5-test-your-bot-token","content":" Finally, your bot is created !    After obtaining your token, try pasting this URL into your browser:  https://api.telegram.org/bot`YOUR_BOT_TOKEN`/getMe  You'll get the information for your newly created bot :  { &quot;ok&quot;: true, &quot;result&quot;: { &quot;id&quot;: **********, &quot;is_bot&quot;: true, &quot;first_name&quot;: &quot;My First Bot&quot;, &quot;username&quot;: &quot;my_first_mina_bot&quot;, &quot;can_join_groups&quot;: true, &quot;can_read_all_group_messages&quot;: false, &quot;supports_inline_queries&quot;: false } }   ","version":"Next","tagName":"h3"},{"title":"Step 6. Initiate a chat with your bot and get the ChatId‚Äã","type":1,"pageTitle":"Why do you need a telegram bot ?","url":"/docs/Node operator guide/Telegram_bot/monitoring_node_with_telegram#step-6-initiate-a-chat-with-your-bot-and-get-the-chatid","content":" Last step consists of initiating a private chat with your bot so we can get a chatId we will adress to send message to. Just open a chat with your bot and click on Start  \t  Then finally head over  https://api.telegram.org/bot`YOUR_BOT_TOKEN`/getUpdates  which should return something similar to :  { &quot;ok&quot;: true, &quot;result&quot;: [ { &quot;update_id&quot;: 999999999, &quot;message&quot;: { &quot;message_id&quot;: 1, &quot;from&quot;: { &quot;id&quot;: 0123456789, &quot;is_bot&quot;: false, &quot;first_name&quot;: &quot;chatfn&quot;, &quot;username&quot;: &quot;chatun&quot;, &quot;language_code&quot;: &quot;en&quot; }, &quot;chat&quot;: { &quot;id&quot;: 0123456789, &quot;first_name&quot;: &quot;chatfn&quot;, &quot;username&quot;: &quot;chatun&quot;, &quot;type&quot;: &quot;private&quot; }, &quot;date&quot;: 1707867545, &quot;text&quot;: &quot;/start&quot;, &quot;entities&quot;: [ { &quot;offset&quot;: 0, &quot;length&quot;: 6, &quot;type&quot;: &quot;bot_command&quot; } ] } } ] }   And get your chat id here 0123456789 (example value)  And that's it! With these six easy steps, you can create your very own Telegram bot. Once you've created your bot, you can start adding features and programming it to do all sorts of fun and useful things.  More Information Telegram provides a detailed tutorial on bot create here : https://core.telegram.org/bots/tutorial  Summary Now you have your bot token and your chatId. These are the only two information you need to communicate with your bot from any program.  ","version":"Next","tagName":"h3"},{"title":"Use your Telegram bot‚Äã","type":1,"pageTitle":"Why do you need a telegram bot ?","url":"/docs/Node operator guide/Telegram_bot/monitoring_node_with_telegram#use-your-telegram-bot","content":" Now that we have our bot ready, we will use it to send some information originating from our node. In principle, you'll find it extremely simple.  Now, let's try something !!  Example 1- Connect to your node 2- Type the following in your interactive Shell : $ curl -d &quot;chat_id=0123456789&amp;disable_web_page_preview=1&amp;parse_mode=markdown&quot; --data-urlencode &quot;text=Hello&quot; https://api.telegram.org/bot`YOUR_BOT_TOKEN`/sendMessage You will get the following response from telegram : { &quot;ok&quot;: true, &quot;result&quot;: { &quot;message_id&quot;: 3, &quot;from&quot;: { &quot;id&quot;: **********, &quot;is_bot&quot;: true, &quot;first_name&quot;: &quot;My First Bot&quot;, &quot;username&quot;: &quot;my_first_mina_bot&quot; }, &quot;chat&quot;: { &quot;id&quot;: 0123456789, &quot;first_name&quot;: &quot;chatfn&quot;, &quot;username&quot;: &quot;chatun&quot;, &quot;type&quot;: &quot;private&quot; }, &quot;date&quot;: 1707869569, &quot;text&quot;: &quot;Hello&quot; } } And in your telegram private chat with your bot : ...So .... Cool !!!  note Every examples that will follow here are based on exactly the same operating principle. A program sends text via the Telegram APIs to our private chat with our bot. There's a lot more you can do with a bot that won't be covered here (questions, answers, interactivity, commands...). ","version":"Next","tagName":"h2"},{"title":"My Block Producer Statistics","type":0,"sectionRef":"#","url":"/docs/Node Statistics","content":"My Block Producer Statistics You'll find here some important information and statistics about my Block Producer. Block ProductionDelegationsPayouts","keywords":"","version":"Next"},{"title":"BP Stats","type":0,"sectionRef":"#","url":"/docs/Node Statistics/block_production","content":"","keywords":"","version":"Next"},{"title":"Blocks‚Äã","type":1,"pageTitle":"BP Stats","url":"/docs/Node Statistics/block_production#blocks","content":" Loading... ","version":"Next","tagName":"h2"},{"title":"Purpose","type":0,"sectionRef":"#","url":"/docs/Node operator guide/Telegram_bot/sending_payout","content":"","keywords":"","version":"Next"},{"title":"get_payouts.sh‚Äã","type":1,"pageTitle":"Purpose","url":"/docs/Node operator guide/Telegram_bot/sending_payout#get_payoutssh","content":" The following script needs to be adapted to your configuration. In the example below, it assumes that :  ~/mina_scripts/payout/mina-pool-payout is the path to the mina_pool_payout script~/mina_scripts/payout.log will get the formatted payouts resulting from the payout script execution  $ vim get_payouts.sh   #!/bin/bash if [[ ( $@ == &quot;--help&quot;) || $@ == &quot;-h&quot; ]] then echo &quot;Usage: $0 [starting block] [end block] [epoch]&quot; exit 0 fi sblock=$1 eblock=$2 epoch=$3 export POOL_MEMO=&quot;&amp;lt;Bp_discord_id&amp;gt;_epoch${epoch}_payout&quot; nepoch=$epoch nsblock=$sblock neblock=$eblock if [ &quot;$sblock&quot; != &quot;&quot; ]; then sblock=&quot;-m=$sblock&quot; fi if [ &quot;$eblock&quot; != &quot;&quot; ]; then eblock=&quot;-x=$eblock&quot; fi if [ &quot;$epoch&quot; != &quot;&quot; ]; then epoch=&quot;-e=$epoch&quot; sblock=&quot;&quot; eblock=&quot;&quot; fi debug=0 interval=3600 while true do # On lance le script de payout po=&quot;timeout 300 npm --prefix ~/mina_scripts/payout/mina-pool-payout/ run payout -- $sblock $eblock $epoch &gt;/dev/null 2&gt;&amp;1&quot; echo &quot;$po&quot; $po=$(eval &quot;$po&quot;) # get last transaction file name fn=$(find ~/mina_scripts/payout/mina-pool-payout/src/data -name 'payout_transactions*' -type f -exec ls -t1 {} + 2&gt;/dev/null | head -n 1) echo &quot;$fn&quot; echo &quot;Le dernier fichier de payout est : $fn&quot; # Extract the substring between the last '_' and the last '.' lastblock=$(echo &quot;$fn&quot; | grep -o '_[^_]*\\.') # Remove the '_' at the beginning and the '.' at the end of the substring lastblock=${lastblock#_} lastblock=${lastblock%.} echo &quot;lastblock: $lastblock&quot; sblock=&quot;-m=$lastblock&quot; epoch=&quot;&quot; eblock=&quot;&quot; echo -ne &quot;\\\\n&quot; # get the last generated payout transaction file json tr=&quot;find ~/mina_scripts/payout/mina-pool-payout/src/data -name 'payout_transactions*' -type f -exec ls -t1 {} + 2&gt;/dev/null | head -n 1 | xargs cat | jq .&quot; if [ &quot;$debug&quot; == &quot;1&quot; ]; then echo &quot;$tr&quot; fi #echo -ne &quot;\\\\n&quot; tr=$(eval &quot;$tr&quot;) compte=$(echo &quot;$tr&quot; | jq '. | length') if [ &quot;$debug&quot; == &quot;1&quot; ]; then echo &quot;$tr&quot; fi echo &quot;$compte payout √† effectuer&quot; if [ &quot;$compte&quot; != &quot;0&quot; ]; then echo -e &quot;Mina Epoch $nepoch$nsblock$neblock Payouts&quot; &gt;&gt; ~/mina_scripts/payout.log fi #exit 0 for row in $(echo &quot;${tr}&quot; | jq -r '.[] | @base64'); do _jq() { echo ${row} | base64 --decode | jq -r ${1} } pk=$(_jq '.publicKey') amount=$(_jq '.amount') fee=$(_jq '.feeMina') memo=$(_jq '.memo') fee=0 amount=$(echo &quot;scale=9 ;($amount + $fee)/1000000000&quot; | bc) echo -e &quot;$pk\\\\n$amount\\\\n$memo&quot; &gt;&gt; ~/mina_scripts/payout.log done sleep $interval done   Once launched, this script will loop every hour, will check if some new payouts have been computed using the payout script from the last block it was launched before (so that only new payouts are returned and will be sent to the telegram bot).  note The script do not send the telegram message directly. Instead of that, it will add some entries to a payout.log file and this is exactly the only thing this script does !. The payout.log file will then be tailed in background to the tg_logbot.sh script so each time a new payout is added to payout.log it will be sent to the telegram bot.  Sample payout.log file Mina Epoch 70 Payouts B62... 2222.222222222 26192608020F76108A141C0C79366D9D B62... 1111.111111111 26192608020F76108A141C0C79366D9D B62... 33.333333333 Payout_Memo B62qiburnzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzmp7r7UN6X 3600.000000000 26192608020F76108A141C0C79366D9D   ","version":"Next","tagName":"h2"},{"title":"Using get_payouts.sh‚Äã","type":1,"pageTitle":"Purpose","url":"/docs/Node operator guide/Telegram_bot/sending_payout#using-get_payoutssh","content":" The get_payouts.sh script can take either the starting epoch as argument or the start date and/or end date.  example $ ./get_payouts.sh &quot;&quot; &quot;&quot; &quot;70&quot;   note This script above will get payout from epoch 70 and then, as long as the script keeps running, all the payouts that will occur after the last block read. Note that if more than one block is produced between two runs in the loop, then all blocks will be taken into account in the computed results.  warning Ledgers (staking and next) have to be refreshed manually at the beginning of each new epoch (see Mina Pool Payout script documentation).  In order for the script to run in the backbround you can either use nohup along with &amp; such as  $ nohup ./get_payouts.sh &quot;&quot; &quot;&quot; &quot;70&quot; &amp;   Or my prefered method, launch the same in a screen session :  $ screen -S payout $ ./get_payouts.sh &quot;&quot; &quot;&quot; &quot;70&quot;   Then safely detach the screen session with CTRL+A+D. You can easily reattach the screen session with screen -R uptime thereafter.  Reminder Remember that the script only adds payout in a formatted way to the payout.log file and that it does not send anything to telegram.  ","version":"Next","tagName":"h2"},{"title":"Sending generated output to telegram‚Äã","type":1,"pageTitle":"Purpose","url":"/docs/Node operator guide/Telegram_bot/sending_payout#sending-generated-output-to-telegram","content":" The last step, once the get_payouts.sh script runs in the background is to tail in another screen or background process the content of the payout.log file to the tg_logbot.sh script that will send our payout messages to our telegram bot private channel.  For this, as usual, you can either use nohup along with &amp; such as  $ nohup tail -f payout.log | ./tg_logbot.sh &amp;   or a new screen session :  $ screen -S payout_log $ tail -f payout.log | ./tg_logbot.sh   You're done !! Finally, once both the payout script and the tail of payout.log generated file will be in place, you will receive due payouts right in your telegram bot chat. ","version":"Next","tagName":"h2"},{"title":"Purpose","type":0,"sectionRef":"#","url":"/docs/Node operator guide/Telegram_bot/sending_uptime","content":"","keywords":"","version":"Next"},{"title":"get_uptime.sh‚Äã","type":1,"pageTitle":"Purpose","url":"/docs/Node operator guide/Telegram_bot/sending_uptime#get_uptimesh","content":" The script we will use is the following :  $ vim get_uptime.sh   #!/bin/bash while true do since=&quot;24 hours ago&quot; &amp;&amp; echo &amp;&amp; echo &quot;$(hostname) : Uptime service - sent : $(journalctl --user -u mina -S &quot;$since&quot; | grep 'Sent block with state' | wc -l), failed: $(journalctl --user -u mina -S &quot;$since&quot; | grep 'After 8 attempts, failed' | wc -l)&quot; sleep 3600 done   Once launched, this script will loop every hour and return the number of successfull and failed uptime upload retrieved from mina logs.  Example Hostname : Uptime service - sent : 96, failed: 0   ","version":"Next","tagName":"h2"},{"title":"Using get_uptime.sh with tg_logbot.sh‚Äã","type":1,"pageTitle":"Purpose","url":"/docs/Node operator guide/Telegram_bot/sending_uptime#using-get_uptimesh-with-tg_logbotsh","content":" In order to send the ouput of the script each time it runs (every hour) to telegram, we will do something as easy as pipe the output from get_uptime.sh to tg_logbot.sh  Example $ ./get_uptime.sh | ./tg_logbot.sh   In order for the script to run in the backbround you can either use nohup along with &amp; such as  $ nohup ./get_uptime.sh | ./tg_logbot.sh &amp;   Or my prefered method, launch the same in a screen session :  $ screen -S uptime $ ./get_uptime.sh | ./tg_logbot.sh   Then safely detach the screen session with CTRL+A+D. You can easily reattach the screen session with screen -R uptime thereafter.  You're done !! Finally, once run, you'll receive every hour right in your telegram chat window with your bot a message with your actual 24 hour uptime.  Uptime value The uptime retrieved from the script is the splipping 24 hours uptime. Its value should be 96 (1 upload every 15min, 4 uploads each hour, 4x24=96 uploads a day) which means that you did not miss any uptime upload to the server. Please note that when a block is produced, an additional entry in the logs is added that will count as a snark upload as well. It means that if you produced 3 blocks the last 24h, then your score will be 99 and not 96. ","version":"Next","tagName":"h2"},{"title":"BP Stats","type":0,"sectionRef":"#","url":"/docs/Node Statistics/payouts","content":"","keywords":"","version":"Next"},{"title":"Payouts Calculator‚Äã","type":1,"pageTitle":"BP Stats","url":"/docs/Node Statistics/payouts#payouts-calculator","content":" warning The data below is provided for reference purposes only. A rule change in delegation conditions, particularly by the Mina Foundation or O1Labs, may lead to inaccurate results.Only the official payout script is authoritative in calculating rewards.  B62qpsyB3gCndt8sNz4GRwusBtg9U72TNiL4mxmcQfWKZ5noa9fFnWr Select an EpochGet Payout Parameter for block to Payout Parameters Delegations Block list ","version":"Next","tagName":"h2"},{"title":"BP Stats","type":0,"sectionRef":"#","url":"/docs/Node Statistics/delegations","content":"","keywords":"","version":"Next"},{"title":"Delegations‚Äã","type":1,"pageTitle":"BP Stats","url":"/docs/Node Statistics/delegations#delegations","content":" Loading... ","version":"Next","tagName":"h2"},{"title":"How to buy Mina ?","type":0,"sectionRef":"#","url":"/docs/Wallet owner guide/Buy mina","content":"How to buy Mina ? Mina is available to buy on all major exchanges. You can find a list of exchanges availabitily on cointmarketcap here : https://coinmarketcap.com/rankings/exchanges/ The top 10 exchanges that offer the purchase of Mina are : BinanceCoinbase ExchangeKrakenKuCoinBybitOKXBitstampBitfinexGate.ioUpbit","keywords":"","version":"Next"},{"title":"Mina explorers","type":0,"sectionRef":"#","url":"/docs/Wallet owner guide/Mina explorers","content":"Mina explorers","keywords":"","version":"Next"},{"title":"Staking guide","type":0,"sectionRef":"#","url":"/docs/Wallet owner guide/Staking guide","content":"Staking guide","keywords":"","version":"Next"},{"title":"Non custodial wallets","type":0,"sectionRef":"#","url":"/docs/Wallet owner guide/Non custodial wallets","content":"","keywords":"","version":"Next"},{"title":"What is a non-custodial wallet ?‚Äã","type":1,"pageTitle":"Non custodial wallets","url":"/docs/Wallet owner guide/Non custodial wallets#what-is-a-non-custodial-wallet-","content":" By definition, a &quot;non-custodial&quot; wallet is in contrast to a &quot;custodial&quot; wallet and represents a wallet for which you own the private key and have sole control over.  Buying Mina requires connecting to a trading platform that allows exchanging a currency (Euro, USD, other crypto, etc.) for Minas.  Once you have acquired Minas, they are accessible through the trading platform, and you can potentially engage in trades (short, long) with your tokens on the exchange pairs available on the platform.  info There are virtually no exchange platforms today that allow you to access your private key, which is from the blockchain's perspective the sole proof of ownership of your tokens. Instead, the wallet addresses on exchanges are assigned by the platform, and most of the time, you only have access to the public key of the wallet (which allows you to deposit funds) without ever being granted access to the private key (which enables you to operate, withdraw funds, control, etc.) of your wallet.  CONCLUSION Your tokens stored on an exchange do not belong to you !!! !! Not your key, not your tokens !!  Advantages of Keeping Your Tokens on an Exchange Platform The advantage of storing on an exchange platform (and there is only one!) is the ability to quickly trade (=exchange/buy/sell) your tokens.  Disadvantages of Keeping Your Tokens on an Exchange Platform There are numerous disadvantages to leaving your tokens on a centralized platform:  The first is that it is in complete contradiction with the very principle of blockchain, which is to be decentralized.The second disadvantage is that, theoretically, you have no control over your funds. If the platform goes out of business, you lose 100% of your investments!The third disadvantage concerns staking. Staking in the context of a Proof of Stake (PoS) blockchain like Mina involves delegating1 your tokens to a trusted validator2 to give them additional chances to produce blocks3 that generate rewards (coinbase4). These rewards are then distributed to the delegators proportionally to the number of delegated mina minus the commission taken by the validator (typically between 0% and 10%, with most applying a 5% rate). When your Minas are stored on a platform, at best, it offers its own staking conditions at high commission rates. However, most platforms simply do not offer staking, depriving you of a significant source of passive income (between 12% and 24% APR).The fourth disadvantage is that a non-custodial wallet does not allow the use of the wallet on specific applications of the blockchain (DApps or zkApps5 in the context of Mina).  1 Staking More information on staking in the dedicated section. Go to üîóStaking Guide  2 Validator A validator is a participants who locks up a certain amount of cryptocurrency as collateral. This collateral serves as a security deposit and ensures that validators have a vested interest in maintaining the integrity of the network. It‚Äôs important to note that funds staked on Mina are not locked up. This means you can re-delegate, un-delegate, transfer, sell, or donate your Mina tokens anytime you want.  3 Blocks Validators take turns creating new blocks and validating transactions based on the amount of cryptocurrency they have staked. The more cryptocurrency a validator has at stake, the higher the chances they have of being chosen to create a new block.  4 Coinbase Validators are rewarded with additional cryptocurrency for successfully creating and validating blocks. The coinbase is a special transaction in a newly produced block that contains the reward owed to the validator who produced the new block. Currently, the base reward for producing a block on Mina is 720 Mina, to which an additional 720 Mina (supercharged reward) is added if the production slot was won by an unlocked address.  5 zkApps  ","version":"Next","tagName":"h2"},{"title":"What are the \"non custodial\" mina wallets avaliable ?‚Äã","type":1,"pageTitle":"Non custodial wallets","url":"/docs/Wallet owner guide/Non custodial wallets#what-are-the-non-custodial-mina-wallets-avaliable-","content":" ","version":"Next","tagName":"h2"},{"title":"Auro Wallet‚Äã","type":1,"pageTitle":"Non custodial wallets","url":"/docs/Wallet owner guide/Non custodial wallets#auro-wallet","content":" official website : https://www.aurowallet.com/    Description (from official website) Available as a browser extension and as a mobile App, Auro Wallet has multiple languages version, perfectly supports Mina Protocol and is completely open-source. With it, you can easily send, receive or stake your MINA, and view the transaction records anytime. It also supports send zkApp transactions (once available on mainnet)  My Opinion  Auro Wallet strengths :  Available on Android and iOSAvailable as a browser extension (Chrome, Edge, Firefox)Compatible pour Ledger hardware walletzkApps readyMulti-account, wallets managementEasy inApp stakingOpen source  ","version":"Next","tagName":"h3"},{"title":"Clorio Wallet‚Äã","type":1,"pageTitle":"Non custodial wallets","url":"/docs/Wallet owner guide/Non custodial wallets#clorio-wallet","content":" official website : https://clor.io/    Description (from official website) Clorio is an open-source wallet for Mina Protocol, built with Javascript. With Clorio you can interact with the Mina blockchain by generating/using your private key or by using the Ledger hardware wallet. Clorio wallet doesn't send your private key out of the client app, all the transactions are signed in local or on your Ledger device. The nature of Clorio is self-custodian, this means that you are the only one responsible for safe-keeping your private key. We have no possibility to recover your lost keys, block transactions and we don't take any responsibility over software malfunction. You are essentially your own bank.  My Opinion  Clorio Wallet strengths :  Available as a desktop application (windows, Mac OSX and Linux)Compatible pour Ledger hardware walletMulti-account, wallets managementEasy inApp stakingOpen source ","version":"Next","tagName":"h3"},{"title":"What is prometheus ?","type":0,"sectionRef":"#","url":"/docs/Node operator guide/Monitoring/prometheus-metrics","content":"","keywords":"","version":"Next"},{"title":"Mina exposed metrics‚Äã","type":1,"pageTitle":"What is prometheus ?","url":"/docs/Node operator guide/Monitoring/prometheus-metrics#mina-exposed-metrics","content":" ","version":"Next","tagName":"h2"},{"title":"Metrics Table‚Äã","type":1,"pageTitle":"What is prometheus ?","url":"/docs/Node operator guide/Monitoring/prometheus-metrics#metrics-table","content":" The following table contains all the metrics exposed by the Mina Node.  info For offline reading, a file containing all metrics is available as a Google Sheets here to download : Mina Metrics Web Version Mina Metrics Google Sheet (read only)  METRIC\tDESCRIPTION\tTYPE\tEXEMPLE\tADDITIONAL INFORMATIONCoda_Block_ignored\t# of received blocks ignored\tcounter\tCoda_Block_ignored 0 Coda_Block_latency_gossip_slots\taverage delay, in slots, after which produced blocks are received\tgauge\tCoda_Block_latency_gossip_slots 0.0952381 Coda_Block_latency_gossip_time\taverage delay, in seconds, after which produced blocks are received\tgauge\tCoda_Block_latency_gossip_time 147.395 Coda_Block_latency_inclusion_time\taverage delay, in seconds, after which produced blocks are included into our frontier\tgauge\tCoda_Block_latency_inclusion_time 152.099 Coda_Block_latency_upload_to_gcloud_blocks\tNumber of pending gsutil cp jobs for block dumping\tgauge\tCoda_Block_latency_upload_to_gcloud_blocks 0 Coda_Block_latency_validation_acceptance_time\taverage delay, in seconds, between the time blocks are initially received from the libp2p_helper, and when they are accepted as valid\tgauge\tCoda_Block_latency_validation_acceptance_time 6.46069 Coda_Block_processing_time\taverage time, in ms, for blocks to be accepted after the OCaml process receives it\tgauge\tCoda_Block_processing_time 6.46088 Coda_Block_producer_block_production_delay\tA histogram for delay between start of slot and time of block production\thistogram\tCoda_Block_producer_block_production_delay_sum 171333 Coda_Block_producer_block_production_delay_count 3 Coda_Block_producer_block_production_delay_bucket{le=&quot;+Inf&quot;} 3 Coda_Block_producer_block_production_delay_bucket{le=&quot;210000&quot;} 3 Coda_Block_producer_block_production_delay_bucket{le=&quot;180000&quot;} 3 Coda_Block_producer_block_production_delay_bucket{le=&quot;150000&quot;} 3 Coda_Block_producer_block_production_delay_bucket{le=&quot;120000&quot;} 3 Coda_Block_producer_block_production_delay_bucket{le=&quot;90000&quot;} 3 Coda_Block_producer_block_production_delay_bucket{le=&quot;60000&quot;} 2 Coda_Block_producer_blocks_produced\tblocks produced and submitted by the daemon\tcounter\tCoda_Block_producer_blocks_produced 3 Coda_Block_producer_slots_won\tslots which the loaded block production keys have won (does not represent that a block was actually produced)\tcounter\tCoda_Block_producer_slots_won 4 Coda_Block_received\t# of blocks received\tcounter\tCoda_Block_received 2391 Coda_Block_rejected\t# of received blocks failing validation\tcounter\tCoda_Block_rejected 517 Coda_Block_rejection_time\taverage time, in ms, for blocks to be rejected after the OCaml process receives it\tgauge\tCoda_Block_rejection_time 10.2652 Coda_Block_validation_time\taverage time, in ms, for blocks to be validated and rebroadcasted\tgauge\tCoda_Block_validation_time 293.528 Coda_Block_validations_timed_out\t# of received blocks whose validation timed out\tcounter\tCoda_Block_validations_timed_out 574 Coda_Bootstrap_bootstrap_time_ms\ttime elapsed while bootstrapping\tgauge\tCoda_Bootstrap_bootstrap_time_ms 0 Coda_Bootstrap_next_epoch_ledger_sync_ms\ttime elapsed when sync next epoch ledger in ms\tcounter\tCoda_Bootstrap_next_epoch_ledger_sync_ms 0 Coda_Bootstrap_num_of_root_snarked_ledger_retargeted\tnumber of times root_snarked_ledger retargeted during bootstrap\tgauge\tCoda_Bootstrap_num_of_root_snarked_ledger_retargeted 0 Coda_Bootstrap_root_snarked_ledger_sync_ms\ttime elapsed when sync root snarked ledger in ms\tcounter\tCoda_Bootstrap_root_snarked_ledger_sync_ms 0 Coda_Bootstrap_staking_epoch_ledger_sync_ms\ttime elapsed when sync staking epoch ledger in ms\tcounter\tCoda_Bootstrap_staking_epoch_ledger_sync_ms 0 Coda_Catchup_build_breadcrumb_time\ttime to build breadcrumb in ms\tgauge\tCoda_Catchup_build_breadcrumb_time 340.206 Coda_Catchup_download_time\ttime to download 1 transition in ms\tgauge\tCoda_Catchup_download_time 2378.34 Coda_Catchup_initial_catchup_time\ttime for initial catchup in min\tgauge\tCoda_Catchup_initial_catchup_time 0 Coda_Catchup_initial_validation_time\ttime to do initial validation in ms\tgauge\tCoda_Catchup_initial_validation_time 810.603 Coda_Catchup_verification_time\ttime to do verificatin in ms\tgauge\tCoda_Catchup_verification_time 8073.01 Coda_Consensus_stake_delegators\t# of delegators the node is evaluating vrfs for (in addition to evaluations for staking keypairs)\tgauge\tCoda_Consensus_stake_delegators 5 Coda_Consensus_staking_keypairs\t# of actively staking keypairs\tgauge\tCoda_Consensus_staking_keypairs 1 Coda_Consensus_vrf_evaluations\tvrf evaluations performed\tcounter\tCoda_Consensus_vrf_evaluations 0 Coda_Cryptography_blockchain_proving_time_ms\ttime elapsed while proving most recently generated blockchain snark\tgauge\tCoda_Cryptography_blockchain_proving_time_ms 48402.8 Coda_Cryptography_snark_work_base_time_sec\ttime elapsed while doing base proof\thistogram\tCoda_Cryptography_snark_work_base_time_sec_sum 0 Coda_Cryptography_snark_work_base_time_sec_count 0 Coda_Cryptography_snark_work_base_time_sec_bucket{le=&quot;+Inf&quot;} 0 Coda_Cryptography_snark_work_base_time_sec_bucket{le=&quot;270&quot;} 0 Coda_Cryptography_snark_work_base_time_sec_bucket{le=&quot;240&quot;} 0 Coda_Cryptography_snark_work_base_time_sec_bucket{le=&quot;210&quot;} 0 Coda_Cryptography_snark_work_base_time_sec_bucket{le=&quot;180&quot;} 0 Coda_Cryptography_snark_work_base_time_sec_bucket{le=&quot;150&quot;} 0 Coda_Cryptography_snark_work_base_time_sec_bucket{le=&quot;120&quot;} 0 Coda_Cryptography_snark_work_base_time_sec_bucket{le=&quot;90&quot;} 0 Coda_Cryptography_snark_work_base_time_sec_bucket{le=&quot;60&quot;} 0 Coda_Cryptography_snark_work_merge_time_sec\ttime elapsed while doing merge proof\thistogram\tCoda_Cryptography_snark_work_merge_time_sec_sum 0 Coda_Cryptography_snark_work_merge_time_sec_count 0 Coda_Cryptography_snark_work_merge_time_sec_bucket{le=&quot;+Inf&quot;} 0 Coda_Cryptography_snark_work_merge_time_sec_bucket{le=&quot;270&quot;} 0 Coda_Cryptography_snark_work_merge_time_sec_bucket{le=&quot;240&quot;} 0 Coda_Cryptography_snark_work_merge_time_sec_bucket{le=&quot;210&quot;} 0 Coda_Cryptography_snark_work_merge_time_sec_bucket{le=&quot;180&quot;} 0 Coda_Cryptography_snark_work_merge_time_sec_bucket{le=&quot;150&quot;} 0 Coda_Cryptography_snark_work_merge_time_sec_bucket{le=&quot;120&quot;} 0 Coda_Cryptography_snark_work_merge_time_sec_bucket{le=&quot;90&quot;} 0 Coda_Cryptography_snark_work_merge_time_sec_bucket{le=&quot;60&quot;} 0 Coda_Cryptography_total_pedersen_hash_computed\t# of pedersen hashes computed\tcounter\tCoda_Cryptography_total_pedersen_hash_computed 0 Coda_Network_all_peers\t# of peers ever seen through gossip net\tgauge\tCoda_Network_all_peers 0 Coda_Network_answer_sync_ledger_query_rpc_requests_failed\t# of Answer_sync_ledger_query rpc requests failed\tcounter\tCoda_Network_answer_sync_ledger_query_rpc_requests_failed 0 Coda_Network_answer_sync_ledger_query_rpc_responses_failed\t# of Answer_sync_ledger_query rpc requests failed to respond\tcounter\tCoda_Network_answer_sync_ledger_query_rpc_responses_failed 918 Coda_Network_answer_sync_ledger_query_rpcs_received\t# of Answer_synce_ledger_query rpc requests received\tcounter\tCoda_Network_answer_sync_ledger_query_rpcs_received 1162 Coda_Network_answer_sync_ledger_query_rpcs_received_five_slots\t# of Answer_synce_ledger_query rpc requests received\tgauge\tCoda_Network_answer_sync_ledger_query_rpcs_received_five_slots 1162 Coda_Network_answer_sync_ledger_query_rpcs_sent\t# of Answer_sync_ledger_query rpc requests sent\tcounter\tCoda_Network_answer_sync_ledger_query_rpcs_sent 0 Coda_Network_answer_sync_ledger_query_rpcs_sent_five_slots\t# of Answer_sync_ledger_query rpc requests sent\tgauge\tCoda_Network_answer_sync_ledger_query_rpcs_sent_five_slots 0 Coda_Network_answer_sync_ledger_query_write_response_avg_size\taverage size for RPC response in bytes\thistogram\tCoda_Network_answer_sync_ledger_query_write_response_avg_size_sum 124485 Coda_Network_answer_sync_ledger_query_write_response_avg_size_count 1162 Coda_Network_answer_sync_ledger_query_write_response_avg_size_bucket{le=&quot;+Inf&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_avg_size_bucket{le=&quot;32000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_avg_size_bucket{le=&quot;16000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_avg_size_bucket{le=&quot;8000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_avg_size_bucket{le=&quot;4000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_avg_size_bucket{le=&quot;2000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_avg_size_bucket{le=&quot;1000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_avg_size_bucket{le=&quot;500&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_max_size\tmaximum size for RPC response in bytes\thistogram\tCoda_Network_answer_sync_ledger_query_write_response_max_size_sum 140523 Coda_Network_answer_sync_ledger_query_write_response_max_size_count 1162 Coda_Network_answer_sync_ledger_query_write_response_max_size_bucket{le=&quot;+Inf&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_max_size_bucket{le=&quot;32000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_max_size_bucket{le=&quot;16000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_max_size_bucket{le=&quot;8000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_max_size_bucket{le=&quot;4000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_max_size_bucket{le=&quot;2000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_max_size_bucket{le=&quot;1000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_max_size_bucket{le=&quot;500&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_size\tsize for RPC response in bytes\thistogram\tCoda_Network_answer_sync_ledger_query_write_response_size_sum 127015 Coda_Network_answer_sync_ledger_query_write_response_size_count 1162 Coda_Network_answer_sync_ledger_query_write_response_size_bucket{le=&quot;+Inf&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_size_bucket{le=&quot;32000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_size_bucket{le=&quot;16000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_size_bucket{le=&quot;8000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_size_bucket{le=&quot;4000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_size_bucket{le=&quot;2000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_size_bucket{le=&quot;1000&quot;} 1162 Coda_Network_answer_sync_ledger_query_write_response_size_bucket{le=&quot;500&quot;} 1162 Coda_Network_ban_notify_rpc_requests_failed\t# of Ban_notify rpc requests failed\tcounter\tCoda_Network_ban_notify_rpc_requests_failed 0 Coda_Network_ban_notify_rpc_responses_failed\t# of Ban_notify rpc requests failed to respond\tcounter\tCoda_Network_ban_notify_rpc_responses_failed 0 Coda_Network_ban_notify_rpcs_received\t# of Ban_notify rpc requests received\tcounter\tCoda_Network_ban_notify_rpcs_received 0 Coda_Network_ban_notify_rpcs_received_five_slots\t# of Ban_notify rpc requests received\tgauge\tCoda_Network_ban_notify_rpcs_received_five_slots 0 Coda_Network_ban_notify_rpcs_sent\t# of Ban_notify rpc requests sent\tcounter\tCoda_Network_ban_notify_rpcs_sent 0 Coda_Network_ban_notify_rpcs_sent_five_slots\t# of Ban_notify rpc requests sent\tgauge\tCoda_Network_ban_notify_rpcs_sent_five_slots 0 Coda_Network_get_ancestry_rpc_requests_failed\t# of Get_ancestry rpc requests failed\tcounter\tCoda_Network_get_ancestry_rpc_requests_failed 0 Coda_Network_get_ancestry_rpc_responses_failed\t# of Get_ancestry rpc requests failed to respond\tcounter\tCoda_Network_get_ancestry_rpc_responses_failed 0 Coda_Network_get_ancestry_rpcs_received\t# of Get_ancestry rpc requests received\tcounter\tCoda_Network_get_ancestry_rpcs_received 2 Coda_Network_get_ancestry_rpcs_received_five_slots\t# of Get_ancestry rpc requests received\tgauge\tCoda_Network_get_ancestry_rpcs_received_five_slots 2 Coda_Network_get_ancestry_rpcs_sent\t# of Get_ancestry rpc requests sent\tcounter\tCoda_Network_get_ancestry_rpcs_sent 0 Coda_Network_get_ancestry_rpcs_sent_five_slots\t# of Get_ancestry rpc requests sent\tgauge\tCoda_Network_get_ancestry_rpcs_sent_five_slots 0 Coda_Network_get_ancestry_write_response_avg_size\taverage size for RPC response in bytes\thistogram\tCoda_Network_get_ancestry_write_response_avg_size_sum 1.84546e+06 Coda_Network_get_ancestry_write_response_avg_size_count 2 Coda_Network_get_ancestry_write_response_avg_size_bucket{le=&quot;+Inf&quot;} 2 Coda_Network_get_ancestry_write_response_avg_size_bucket{le=&quot;32000&quot;} 0 Coda_Network_get_ancestry_write_response_avg_size_bucket{le=&quot;16000&quot;} 0 Coda_Network_get_ancestry_write_response_avg_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_ancestry_write_response_avg_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_ancestry_write_response_avg_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_ancestry_write_response_avg_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_ancestry_write_response_avg_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_ancestry_write_response_max_size\tmaximum size for RPC response in bytes\thistogram\tCoda_Network_get_ancestry_write_response_max_size_sum 2.34384e+06 Coda_Network_get_ancestry_write_response_max_size_count 2 Coda_Network_get_ancestry_write_response_max_size_bucket{le=&quot;+Inf&quot;} 2 Coda_Network_get_ancestry_write_response_max_size_bucket{le=&quot;32000&quot;} 0 Coda_Network_get_ancestry_write_response_max_size_bucket{le=&quot;16000&quot;} 0 Coda_Network_get_ancestry_write_response_max_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_ancestry_write_response_max_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_ancestry_write_response_max_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_ancestry_write_response_max_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_ancestry_write_response_max_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_ancestry_write_response_size\tsize for RPC response in bytes\thistogram\tCoda_Network_get_ancestry_write_response_size_sum 2.34384e+06 Coda_Network_get_ancestry_write_response_size_count 2 Coda_Network_get_ancestry_write_response_size_bucket{le=&quot;+Inf&quot;} 2 Coda_Network_get_ancestry_write_response_size_bucket{le=&quot;32000&quot;} 0 Coda_Network_get_ancestry_write_response_size_bucket{le=&quot;16000&quot;} 0 Coda_Network_get_ancestry_write_response_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_ancestry_write_response_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_ancestry_write_response_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_ancestry_write_response_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_ancestry_write_response_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_best_tip_latency\ttime elapsed while doing RPC calls in ms\tgauge\tCoda_Network_get_best_tip_latency 1394.85 Coda_Network_get_best_tip_read_response_avg_size\taverage size for RPC response in bytes\thistogram\tCoda_Network_get_best_tip_read_response_avg_size_sum 1.16833e+07 Coda_Network_get_best_tip_read_response_avg_size_count 13 Coda_Network_get_best_tip_read_response_avg_size_bucket{le=&quot;+Inf&quot;} 13 Coda_Network_get_best_tip_read_response_avg_size_bucket{le=&quot;32000&quot;} 1 Coda_Network_get_best_tip_read_response_avg_size_bucket{le=&quot;16000&quot;} 1 Coda_Network_get_best_tip_read_response_avg_size_bucket{le=&quot;8000&quot;} 1 Coda_Network_get_best_tip_read_response_avg_size_bucket{le=&quot;4000&quot;} 1 Coda_Network_get_best_tip_read_response_avg_size_bucket{le=&quot;2000&quot;} 1 Coda_Network_get_best_tip_read_response_avg_size_bucket{le=&quot;1000&quot;} 1 Coda_Network_get_best_tip_read_response_avg_size_bucket{le=&quot;500&quot;} 1 Coda_Network_get_best_tip_read_response_max_size\tmaximum size for RPC response in bytes\thistogram\tCoda_Network_get_best_tip_read_response_max_size_sum 1.42772e+07 Coda_Network_get_best_tip_read_response_max_size_count 13 Coda_Network_get_best_tip_read_response_max_size_bucket{le=&quot;+Inf&quot;} 13 Coda_Network_get_best_tip_read_response_max_size_bucket{le=&quot;32000&quot;} 1 Coda_Network_get_best_tip_read_response_max_size_bucket{le=&quot;16000&quot;} 1 Coda_Network_get_best_tip_read_response_max_size_bucket{le=&quot;8000&quot;} 1 Coda_Network_get_best_tip_read_response_max_size_bucket{le=&quot;4000&quot;} 1 Coda_Network_get_best_tip_read_response_max_size_bucket{le=&quot;2000&quot;} 1 Coda_Network_get_best_tip_read_response_max_size_bucket{le=&quot;1000&quot;} 1 Coda_Network_get_best_tip_read_response_max_size_bucket{le=&quot;500&quot;} 1 Coda_Network_get_best_tip_read_response_size\tsize for RPC response in bytes\thistogram\tCoda_Network_get_best_tip_read_response_size_sum 1.42772e+07 Coda_Network_get_best_tip_read_response_size_count 13 Coda_Network_get_best_tip_read_response_size_bucket{le=&quot;+Inf&quot;} 13 Coda_Network_get_best_tip_read_response_size_bucket{le=&quot;32000&quot;} 1 Coda_Network_get_best_tip_read_response_size_bucket{le=&quot;16000&quot;} 1 Coda_Network_get_best_tip_read_response_size_bucket{le=&quot;8000&quot;} 1 Coda_Network_get_best_tip_read_response_size_bucket{le=&quot;4000&quot;} 1 Coda_Network_get_best_tip_read_response_size_bucket{le=&quot;2000&quot;} 1 Coda_Network_get_best_tip_read_response_size_bucket{le=&quot;1000&quot;} 1 Coda_Network_get_best_tip_read_response_size_bucket{le=&quot;500&quot;} 1 Coda_Network_get_best_tip_rpc_requests_failed\t# of Get_best_tip rpc requests failed\tcounter\tCoda_Network_get_best_tip_rpc_requests_failed 3 Coda_Network_get_best_tip_rpc_responses_failed\t# of Get_best_tip rpc requests failed to respond\tcounter\tCoda_Network_get_best_tip_rpc_responses_failed 0 Coda_Network_get_best_tip_rpcs_received\t# of Get_best_tip rpc requests received\tcounter\tCoda_Network_get_best_tip_rpcs_received 2 Coda_Network_get_best_tip_rpcs_received_five_slots\t# of Get_best_tip rpc requests received\tgauge\tCoda_Network_get_best_tip_rpcs_received_five_slots 2 Coda_Network_get_best_tip_rpcs_sent\t# of Get_best_tip rpc requests sent\tcounter\tCoda_Network_get_best_tip_rpcs_sent 13 Coda_Network_get_best_tip_rpcs_sent_five_slots\t# of Get_best_tip rpc requests sent\tgauge\tCoda_Network_get_best_tip_rpcs_sent_five_slots 13 Coda_Network_get_best_tip_write_response_avg_size\taverage size for RPC response in bytes\thistogram\tCoda_Network_get_best_tip_write_response_avg_size_sum 4.98225e+06 Coda_Network_get_best_tip_write_response_avg_size_count 2 Coda_Network_get_best_tip_write_response_avg_size_bucket{le=&quot;+Inf&quot;} 2 Coda_Network_get_best_tip_write_response_avg_size_bucket{le=&quot;32000&quot;} 0 Coda_Network_get_best_tip_write_response_avg_size_bucket{le=&quot;16000&quot;} 0 Coda_Network_get_best_tip_write_response_avg_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_best_tip_write_response_avg_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_best_tip_write_response_avg_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_best_tip_write_response_avg_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_best_tip_write_response_avg_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_best_tip_write_response_max_size\tmaximum size for RPC response in bytes\thistogram\tCoda_Network_get_best_tip_write_response_max_size_sum 6.61525e+06 Coda_Network_get_best_tip_write_response_max_size_count 2 Coda_Network_get_best_tip_write_response_max_size_bucket{le=&quot;+Inf&quot;} 2 Coda_Network_get_best_tip_write_response_max_size_bucket{le=&quot;32000&quot;} 0 Coda_Network_get_best_tip_write_response_max_size_bucket{le=&quot;16000&quot;} 0 Coda_Network_get_best_tip_write_response_max_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_best_tip_write_response_max_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_best_tip_write_response_max_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_best_tip_write_response_max_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_best_tip_write_response_max_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_best_tip_write_response_size\tsize for RPC response in bytes\thistogram\tCoda_Network_get_best_tip_write_response_size_sum 3.34926e+06 Coda_Network_get_best_tip_write_response_size_count 2 Coda_Network_get_best_tip_write_response_size_bucket{le=&quot;+Inf&quot;} 2 Coda_Network_get_best_tip_write_response_size_bucket{le=&quot;32000&quot;} 0 Coda_Network_get_best_tip_write_response_size_bucket{le=&quot;16000&quot;} 0 Coda_Network_get_best_tip_write_response_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_best_tip_write_response_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_best_tip_write_response_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_best_tip_write_response_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_best_tip_write_response_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_epoch_ledger_rpc_requests_failed\t# of Get_epoch_ledger rpc requests failed\tcounter\tCoda_Network_get_epoch_ledger_rpc_requests_failed 0 Coda_Network_get_epoch_ledger_rpc_responses_failed\t# of Get_epoch_ledger rpc requests failed to respond\tcounter\tCoda_Network_get_epoch_ledger_rpc_responses_failed 0 Coda_Network_get_epoch_ledger_rpcs_received\t# of Get_epoch_ledger rpc requests received\tcounter\tCoda_Network_get_epoch_ledger_rpcs_received 0 Coda_Network_get_epoch_ledger_rpcs_received_five_slots\t# of Get_epoch_ledger rpc requests received\tgauge\tCoda_Network_get_epoch_ledger_rpcs_received_five_slots 0 Coda_Network_get_epoch_ledger_rpcs_sent\t# of Get_epoch_ledger rpc requests sent\tcounter\tCoda_Network_get_epoch_ledger_rpcs_sent 0 Coda_Network_get_epoch_ledger_rpcs_sent_five_slots\t# of Get_epoch_ledger rpc requests sent\tgauge\tCoda_Network_get_epoch_ledger_rpcs_sent_five_slots 0 Coda_Network_get_node_status_rpc_requests_failed\t# of Get_node_status rpc requests failed\tcounter\tCoda_Network_get_node_status_rpc_requests_failed 0 Coda_Network_get_node_status_rpc_responses_failed\t# of Get_node_status rpc requests failed to respond\tcounter\tCoda_Network_get_node_status_rpc_responses_failed 0 Coda_Network_get_node_status_rpcs_received\t# of Get_node_status rpc requests received\tcounter\tCoda_Network_get_node_status_rpcs_received 0 Coda_Network_get_node_status_rpcs_received_five_slots\t# of Get_node_status rpc requests received\tgauge\tCoda_Network_get_node_status_rpcs_received_five_slots 0 Coda_Network_get_node_status_rpcs_sent\t# of Get_node_status rpc requests sent\tcounter\tCoda_Network_get_node_status_rpcs_sent 0 Coda_Network_get_node_status_rpcs_sent_five_slots\t# of Get_node_status rpc requests sent\tgauge\tCoda_Network_get_node_status_rpcs_sent_five_slots 0 Coda_Network_get_some_initial_peers_rpc_requests_failed\t# of Get_some_initial_peers rpc requests failed\tcounter\tCoda_Network_get_some_initial_peers_rpc_requests_failed 0 Coda_Network_get_some_initial_peers_rpc_responses_failed\t# of Get_some_initial_peers rpc requests failed to respond\tcounter\tCoda_Network_get_some_initial_peers_rpc_responses_failed 0 Coda_Network_get_some_initial_peers_rpcs_received\t# of Get_some_initial_peers rpc requests received\tcounter\tCoda_Network_get_some_initial_peers_rpcs_received 0 Coda_Network_get_some_initial_peers_rpcs_received_five_slots\t# of Get_some_initial_peers rpc requests received\tgauge\tCoda_Network_get_some_initial_peers_rpcs_received_five_slots 0 Coda_Network_get_some_initial_peers_rpcs_sent\t# of Get_some_initial_peers rpc requests sent\tcounter\tCoda_Network_get_some_initial_peers_rpcs_sent 0 Coda_Network_get_some_initial_peers_rpcs_sent_five_slots\t# of Get_some_initial_peers rpc requests sent\tgauge\tCoda_Network_get_some_initial_peers_rpcs_sent_five_slots 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_rpc_requests_failed\t# of Get_staged_ledger_aux_and_pending_coinbases_at_hash rpc requests failed\tcounter\tCoda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_rpc_requests_failed 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_rpc_responses_failed\t# of Get_staged_ledger_aux_and_pending_coinbases_at_hash rpc requests failed to respond\tcounter\tCoda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_rpc_responses_failed 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_rpcs_received\t# of Get_staged_ledger_aux_and_pending_coinbases_at_hash rpc requests received\tcounter\tCoda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_rpcs_received 1 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_rpcs_received_five_slots\t# of Get_staged_ledger_aux_and_pending_coinbases_at_hash rpc requests received\tgauge\tCoda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_rpcs_received_five_slots 1 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_rpcs_sent\t# of Get_staged_ledger_aux_and_pending_coinbases_at_hash rpc requests sent\tcounter\tCoda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_rpcs_sent 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_rpcs_sent_five_slots\t# of Get_staged_ledger_aux_and_pending_coinbases_at_hash rpc requests sent\tgauge\tCoda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_rpcs_sent_five_slots 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_avg_size\taverage size for RPC response in bytes\thistogram\tCoda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_avg_size_sum 1.86316e+07 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_avg_size_count 1 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_avg_size_bucket{le=&quot;+Inf&quot;} 1 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_avg_size_bucket{le=&quot;32000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_avg_size_bucket{le=&quot;16000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_avg_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_avg_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_avg_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_avg_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_avg_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_max_size\tmaximum size for RPC response in bytes\thistogram\tCoda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_max_size_sum 1.86316e+07 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_max_size_count 1 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_max_size_bucket{le=&quot;+Inf&quot;} 1 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_max_size_bucket{le=&quot;32000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_max_size_bucket{le=&quot;16000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_max_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_max_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_max_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_max_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_max_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_size\tsize for RPC response in bytes\thistogram\tCoda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_size_sum 1.86316e+07 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_size_count 1 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_size_bucket{le=&quot;+Inf&quot;} 1 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_size_bucket{le=&quot;32000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_size_bucket{le=&quot;16000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_staged_ledger_aux_and_pending_coinbases_at_hash_write_response_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_transition_chain_latency\ttime elapsed while doing RPC calls in ms\tgauge\tCoda_Network_get_transition_chain_latency 1661.43 Coda_Network_get_transition_chain_proof_latency\ttime elapsed while doing RPC calls in ms\tgauge\tCoda_Network_get_transition_chain_proof_latency 790.728 Coda_Network_get_transition_chain_proof_read_response_avg_size\taverage size for RPC response in bytes\thistogram\tCoda_Network_get_transition_chain_proof_read_response_avg_size_sum 1.13721e+07 Coda_Network_get_transition_chain_proof_read_response_avg_size_count 1541 Coda_Network_get_transition_chain_proof_read_response_avg_size_bucket{le=&quot;+Inf&quot;} 1541 Coda_Network_get_transition_chain_proof_read_response_avg_size_bucket{le=&quot;32000&quot;} 1541 Coda_Network_get_transition_chain_proof_read_response_avg_size_bucket{le=&quot;16000&quot;} 1541 Coda_Network_get_transition_chain_proof_read_response_avg_size_bucket{le=&quot;8000&quot;} 1056 Coda_Network_get_transition_chain_proof_read_response_avg_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_transition_chain_proof_read_response_avg_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_transition_chain_proof_read_response_avg_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_transition_chain_proof_read_response_avg_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_transition_chain_proof_read_response_max_size\tmaximum size for RPC response in bytes\thistogram\tCoda_Network_get_transition_chain_proof_read_response_max_size_sum 4.42112e+07 Coda_Network_get_transition_chain_proof_read_response_max_size_count 1541 Coda_Network_get_transition_chain_proof_read_response_max_size_bucket{le=&quot;+Inf&quot;} 1541 Coda_Network_get_transition_chain_proof_read_response_max_size_bucket{le=&quot;32000&quot;} 1541 Coda_Network_get_transition_chain_proof_read_response_max_size_bucket{le=&quot;16000&quot;} 6 Coda_Network_get_transition_chain_proof_read_response_max_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_transition_chain_proof_read_response_max_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_transition_chain_proof_read_response_max_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_transition_chain_proof_read_response_max_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_transition_chain_proof_read_response_max_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_transition_chain_proof_read_response_size\tsize for RPC response in bytes\thistogram\tCoda_Network_get_transition_chain_proof_read_response_size_sum 1.16777e+07 Coda_Network_get_transition_chain_proof_read_response_size_count 1541 Coda_Network_get_transition_chain_proof_read_response_size_bucket{le=&quot;+Inf&quot;} 1541 Coda_Network_get_transition_chain_proof_read_response_size_bucket{le=&quot;32000&quot;} 1541 Coda_Network_get_transition_chain_proof_read_response_size_bucket{le=&quot;16000&quot;} 1133 Coda_Network_get_transition_chain_proof_read_response_size_bucket{le=&quot;8000&quot;} 1063 Coda_Network_get_transition_chain_proof_read_response_size_bucket{le=&quot;4000&quot;} 1063 Coda_Network_get_transition_chain_proof_read_response_size_bucket{le=&quot;2000&quot;} 1063 Coda_Network_get_transition_chain_proof_read_response_size_bucket{le=&quot;1000&quot;} 1063 Coda_Network_get_transition_chain_proof_read_response_size_bucket{le=&quot;500&quot;} 1063 Coda_Network_get_transition_chain_proof_rpc_requests_failed\t# of Get_transition_chain_proof rpc requests failed\tcounter\tCoda_Network_get_transition_chain_proof_rpc_requests_failed 47 Coda_Network_get_transition_chain_proof_rpc_responses_failed\t# of Get_transition_chain_proof rpc requests failed to respond\tcounter\tCoda_Network_get_transition_chain_proof_rpc_responses_failed 637 Coda_Network_get_transition_chain_proof_rpcs_received\t# of Get_transition_chain_proof rpc requests received\tcounter\tCoda_Network_get_transition_chain_proof_rpcs_received 1943 Coda_Network_get_transition_chain_proof_rpcs_received_five_slots\t# of Get_transition_chain_proof rpc requests received\tgauge\tCoda_Network_get_transition_chain_proof_rpcs_received_five_slots 1943 Coda_Network_get_transition_chain_proof_rpcs_sent\t# of Get_transition_chain_proof rpc requests sent\tcounter\tCoda_Network_get_transition_chain_proof_rpcs_sent 1547 Coda_Network_get_transition_chain_proof_rpcs_sent_five_slots\t# of Get_transition_chain_proof rpc requests sent\tgauge\tCoda_Network_get_transition_chain_proof_rpcs_sent_five_slots 1547 Coda_Network_get_transition_chain_proof_write_response_avg_size\taverage size for RPC response in bytes\thistogram\tCoda_Network_get_transition_chain_proof_write_response_avg_size_sum 2.34447e+07 Coda_Network_get_transition_chain_proof_write_response_avg_size_count 1943 Coda_Network_get_transition_chain_proof_write_response_avg_size_bucket{le=&quot;+Inf&quot;} 1943 Coda_Network_get_transition_chain_proof_write_response_avg_size_bucket{le=&quot;32000&quot;} 1943 Coda_Network_get_transition_chain_proof_write_response_avg_size_bucket{le=&quot;16000&quot;} 1943 Coda_Network_get_transition_chain_proof_write_response_avg_size_bucket{le=&quot;8000&quot;} 34 Coda_Network_get_transition_chain_proof_write_response_avg_size_bucket{le=&quot;4000&quot;} 6 Coda_Network_get_transition_chain_proof_write_response_avg_size_bucket{le=&quot;2000&quot;} 5 Coda_Network_get_transition_chain_proof_write_response_avg_size_bucket{le=&quot;1000&quot;} 4 Coda_Network_get_transition_chain_proof_write_response_avg_size_bucket{le=&quot;500&quot;} 4 Coda_Network_get_transition_chain_proof_write_response_max_size\tmaximum size for RPC response in bytes\thistogram\tCoda_Network_get_transition_chain_proof_write_response_max_size_sum 4.36114e+07 Coda_Network_get_transition_chain_proof_write_response_max_size_count 1943 Coda_Network_get_transition_chain_proof_write_response_max_size_bucket{le=&quot;+Inf&quot;} 1943 Coda_Network_get_transition_chain_proof_write_response_max_size_bucket{le=&quot;32000&quot;} 1943 Coda_Network_get_transition_chain_proof_write_response_max_size_bucket{le=&quot;16000&quot;} 414 Coda_Network_get_transition_chain_proof_write_response_max_size_bucket{le=&quot;8000&quot;} 4 Coda_Network_get_transition_chain_proof_write_response_max_size_bucket{le=&quot;4000&quot;} 4 Coda_Network_get_transition_chain_proof_write_response_max_size_bucket{le=&quot;2000&quot;} 4 Coda_Network_get_transition_chain_proof_write_response_max_size_bucket{le=&quot;1000&quot;} 4 Coda_Network_get_transition_chain_proof_write_response_max_size_bucket{le=&quot;500&quot;} 4 Coda_Network_get_transition_chain_proof_write_response_size\tsize for RPC response in bytes\thistogram\tCoda_Network_get_transition_chain_proof_write_response_size_sum 2.87055e+07 Coda_Network_get_transition_chain_proof_write_response_size_count 1943 Coda_Network_get_transition_chain_proof_write_response_size_bucket{le=&quot;+Inf&quot;} 1943 Coda_Network_get_transition_chain_proof_write_response_size_bucket{le=&quot;32000&quot;} 1943 Coda_Network_get_transition_chain_proof_write_response_size_bucket{le=&quot;16000&quot;} 918 Coda_Network_get_transition_chain_proof_write_response_size_bucket{le=&quot;8000&quot;} 639 Coda_Network_get_transition_chain_proof_write_response_size_bucket{le=&quot;4000&quot;} 639 Coda_Network_get_transition_chain_proof_write_response_size_bucket{le=&quot;2000&quot;} 639 Coda_Network_get_transition_chain_proof_write_response_size_bucket{le=&quot;1000&quot;} 637 Coda_Network_get_transition_chain_proof_write_response_size_bucket{le=&quot;500&quot;} 637 Coda_Network_get_transition_chain_read_response_avg_size\taverage size for RPC response in bytes\thistogram\tCoda_Network_get_transition_chain_read_response_avg_size_sum 3.35791e+07 Coda_Network_get_transition_chain_read_response_avg_size_count 37 Coda_Network_get_transition_chain_read_response_avg_size_bucket{le=&quot;+Inf&quot;} 37 Coda_Network_get_transition_chain_read_response_avg_size_bucket{le=&quot;32000&quot;} 2 Coda_Network_get_transition_chain_read_response_avg_size_bucket{le=&quot;16000&quot;} 2 Coda_Network_get_transition_chain_read_response_avg_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_transition_chain_read_response_avg_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_transition_chain_read_response_avg_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_transition_chain_read_response_avg_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_transition_chain_read_response_avg_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_transition_chain_read_response_max_size\tmaximum size for RPC response in bytes\thistogram\tCoda_Network_get_transition_chain_read_response_max_size_sum 6.24616e+07 Coda_Network_get_transition_chain_read_response_max_size_count 37 Coda_Network_get_transition_chain_read_response_max_size_bucket{le=&quot;+Inf&quot;} 37 Coda_Network_get_transition_chain_read_response_max_size_bucket{le=&quot;32000&quot;} 2 Coda_Network_get_transition_chain_read_response_max_size_bucket{le=&quot;16000&quot;} 2 Coda_Network_get_transition_chain_read_response_max_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_transition_chain_read_response_max_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_transition_chain_read_response_max_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_transition_chain_read_response_max_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_transition_chain_read_response_max_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_transition_chain_read_response_size\tsize for RPC response in bytes\thistogram\tCoda_Network_get_transition_chain_read_response_size_sum 4.32294e+07 Coda_Network_get_transition_chain_read_response_size_count 37 Coda_Network_get_transition_chain_read_response_size_bucket{le=&quot;+Inf&quot;} 37 Coda_Network_get_transition_chain_read_response_size_bucket{le=&quot;32000&quot;} 9 Coda_Network_get_transition_chain_read_response_size_bucket{le=&quot;16000&quot;} 8 Coda_Network_get_transition_chain_read_response_size_bucket{le=&quot;8000&quot;} 0 Coda_Network_get_transition_chain_read_response_size_bucket{le=&quot;4000&quot;} 0 Coda_Network_get_transition_chain_read_response_size_bucket{le=&quot;2000&quot;} 0 Coda_Network_get_transition_chain_read_response_size_bucket{le=&quot;1000&quot;} 0 Coda_Network_get_transition_chain_read_response_size_bucket{le=&quot;500&quot;} 0 Coda_Network_get_transition_chain_rpc_requests_failed\t# of Get_some_initial_peers rpc requests failed\tcounter\tCoda_Network_get_transition_chain_rpc_requests_failed 1 Coda_Network_get_transition_chain_rpc_responses_failed\t# of Get_transition_chain rpc requests failed to respond\tcounter\tCoda_Network_get_transition_chain_rpc_responses_failed 2 Coda_Network_get_transition_chain_rpcs_received\t# of Get_transition_chain rpc requests received\tcounter\tCoda_Network_get_transition_chain_rpcs_received 1386 Coda_Network_get_transition_chain_rpcs_received_five_slots\t# of Get_transition_chain rpc requests received\tgauge\tCoda_Network_get_transition_chain_rpcs_received_five_slots 1386 Coda_Network_get_transition_chain_rpcs_sent\t# of Get_transition_chain rpc requests sent\tcounter\tCoda_Network_get_transition_chain_rpcs_sent 38 Coda_Network_get_transition_chain_rpcs_sent_five_slots\t# of Get_transition_chain rpc requests sent\tgauge\tCoda_Network_get_transition_chain_rpcs_sent_five_slots 38 Coda_Network_get_transition_chain_write_response_avg_size\taverage size for RPC response in bytes\thistogram\tCoda_Network_get_transition_chain_write_response_avg_size_sum 5.98292e+09 Coda_Network_get_transition_chain_write_response_avg_size_count 1381 Coda_Network_get_transition_chain_write_response_avg_size_bucket{le=&quot;+Inf&quot;} 1381 Coda_Network_get_transition_chain_write_response_avg_size_bucket{le=&quot;32000&quot;} 5 Coda_Network_get_transition_chain_write_response_avg_size_bucket{le=&quot;16000&quot;} 5 Coda_Network_get_transition_chain_write_response_avg_size_bucket{le=&quot;8000&quot;} 4 Coda_Network_get_transition_chain_write_response_avg_size_bucket{le=&quot;4000&quot;} 2 Coda_Network_get_transition_chain_write_response_avg_size_bucket{le=&quot;2000&quot;} 2 Coda_Network_get_transition_chain_write_response_avg_size_bucket{le=&quot;1000&quot;} 2 Coda_Network_get_transition_chain_write_response_avg_size_bucket{le=&quot;500&quot;} 2 Coda_Network_get_transition_chain_write_response_max_size\tmaximum size for RPC response in bytes\thistogram\tCoda_Network_get_transition_chain_write_response_max_size_sum 1.07855e+10 Coda_Network_get_transition_chain_write_response_max_size_count 1381 Coda_Network_get_transition_chain_write_response_max_size_bucket{le=&quot;+Inf&quot;} 1381 Coda_Network_get_transition_chain_write_response_max_size_bucket{le=&quot;32000&quot;} 5 Coda_Network_get_transition_chain_write_response_max_size_bucket{le=&quot;16000&quot;} 3 Coda_Network_get_transition_chain_write_response_max_size_bucket{le=&quot;8000&quot;} 2 Coda_Network_get_transition_chain_write_response_max_size_bucket{le=&quot;4000&quot;} 2 Coda_Network_get_transition_chain_write_response_max_size_bucket{le=&quot;2000&quot;} 2 Coda_Network_get_transition_chain_write_response_max_size_bucket{le=&quot;1000&quot;} 2 Coda_Network_get_transition_chain_write_response_max_size_bucket{le=&quot;500&quot;} 2 Coda_Network_get_transition_chain_write_response_size\tsize for RPC response in bytes\thistogram\tCoda_Network_get_transition_chain_write_response_size_sum 5.79216e+09 Coda_Network_get_transition_chain_write_response_size_count 1381 Coda_Network_get_transition_chain_write_response_size_bucket{le=&quot;+Inf&quot;} 1381 Coda_Network_get_transition_chain_write_response_size_bucket{le=&quot;32000&quot;} 29 Coda_Network_get_transition_chain_write_response_size_bucket{le=&quot;16000&quot;} 22 Coda_Network_get_transition_chain_write_response_size_bucket{le=&quot;8000&quot;} 2 Coda_Network_get_transition_chain_write_response_size_bucket{le=&quot;4000&quot;} 2 Coda_Network_get_transition_chain_write_response_size_bucket{le=&quot;2000&quot;} 2 Coda_Network_get_transition_chain_write_response_size_bucket{le=&quot;1000&quot;} 2 Coda_Network_get_transition_chain_write_response_size_bucket{le=&quot;500&quot;} 2 Coda_Network_get_transition_knowledge_rpc_requests_failed\t# of Get_transition_knowledge rpc requests failed\tcounter\tCoda_Network_get_transition_knowledge_rpc_requests_failed 0 Coda_Network_get_transition_knowledge_rpc_responses_failed\t# of Get_transition_knowledge rpc requests failed to respond\tcounter\tCoda_Network_get_transition_knowledge_rpc_responses_failed 0 Coda_Network_get_transition_knowledge_rpcs_received\t# of Get_transition_knowledge rpc requests received\tcounter\tCoda_Network_get_transition_knowledge_rpcs_received 0 Coda_Network_get_transition_knowledge_rpcs_received_five_slots\t# of Get_transition_knowledge rpc requests received\tgauge\tCoda_Network_get_transition_knowledge_rpcs_received_five_slots 0 Coda_Network_get_transition_knowledge_rpcs_sent\t# of Get_transition_knowledge rpc requests sent\tcounter\tCoda_Network_get_transition_knowledge_rpcs_sent 0 Coda_Network_get_transition_knowledge_rpcs_sent_five_slots\t# of Get_transition_knowledge rpc requests sent\tgauge\tCoda_Network_get_transition_knowledge_rpcs_sent_five_slots 0 Coda_Network_gossip_messages_failed_to_decode\t# of received messages that could not be decoded\tcounter\tCoda_Network_gossip_messages_failed_to_decode 0 Coda_Network_ipc_latency_ns_summary\tA histogram for all IPC message latencies\thistogram\tCoda_Network_ipc_latency_ns_summary_sum 1.01497e+14 Coda_Network_ipc_latency_ns_summary_count 380538 Coda_Network_ipc_latency_ns_summary_bucket{le=&quot;+Inf&quot;} 380538 Coda_Network_ipc_latency_ns_summary_bucket{le=&quot;1e+07&quot;} 333989 Coda_Network_ipc_latency_ns_summary_bucket{le=&quot;1e+06&quot;} 306994 Coda_Network_ipc_latency_ns_summary_bucket{le=&quot;100000&quot;} 30282 Coda_Network_ipc_latency_ns_summary_bucket{le=&quot;10000&quot;} 0 Coda_Network_ipc_latency_ns_summary_bucket{le=&quot;1000&quot;} 0 Coda_Network_ipc_logs_received_total\tTotal number of logs received from libp2p helper subprocess\tcounter\tCoda_Network_ipc_logs_received_total 43216 Coda_Network_messages_received\t# of messages received\tcounter\tCoda_Network_messages_received 219794 Coda_Network_new_state_broadcasted\t# of block broadcasted\tgauge\tCoda_Network_new_state_broadcasted 3 Coda_Network_new_state_received\t# of blocks received\tgauge\tCoda_Network_new_state_received 2391 Coda_Network_peers\t# of peers seen through gossip net\tgauge\tCoda_Network_peers 39 Coda_Network_rpc_connections_failed\t# of failed connections for rpc requests\tcounter\tCoda_Network_rpc_connections_failed 15 Coda_Network_rpc_latency_ms_summary\tA histogram for all RPC call latencies\thistogram\tCoda_Network_rpc_latency_ms_summary_sum 671700 Coda_Network_rpc_latency_ms_summary_count 1591 Coda_Network_rpc_latency_ms_summary_bucket{le=&quot;+Inf&quot;} 1591 Coda_Network_rpc_latency_ms_summary_bucket{le=&quot;1e+07&quot;} 1591 Coda_Network_rpc_latency_ms_summary_bucket{le=&quot;1e+06&quot;} 1591 Coda_Network_rpc_latency_ms_summary_bucket{le=&quot;100000&quot;} 1591 Coda_Network_rpc_latency_ms_summary_bucket{le=&quot;10000&quot;} 1589 Coda_Network_rpc_latency_ms_summary_bucket{le=&quot;1000&quot;} 1449 Coda_Network_rpc_requests_received\t# of rpc requests received\tcounter\tCoda_Network_rpc_requests_received 4496 Coda_Network_rpc_requests_sent\t# of rpc requests sent\tcounter\tCoda_Network_rpc_requests_sent 1598 Coda_Network_snark_pool_diff_broadcasted\t# of snark_pool_diff broadcasted\tgauge\tCoda_Network_snark_pool_diff_broadcasted 0 Coda_Network_snark_pool_diff_received\t# of snark_pool_diff received\tgauge\tCoda_Network_snark_pool_diff_received 191991 Coda_Network_transaction_pool_diff_broadcasted\t# of txn_pool_diff broadcasted\tgauge\tCoda_Network_transaction_pool_diff_broadcasted 0 Coda_Network_transaction_pool_diff_received\t# of txn_pool_diff received\tgauge\tCoda_Network_transaction_pool_diff_received 25412 Coda_Network_validations_timed_out\t# of received messages whose validation timed out\tcounter\tCoda_Network_validations_timed_out 574 Coda_Object_lifetime_statistics_allocated_count_block\ttotal number of objects allocated (including previously collected objects)\tcounter\tCoda_Object_lifetime_statistics_allocated_count_block 509963 Coda_Object_lifetime_statistics_allocated_count_block_body\ttotal number of objects allocated (including previously collected objects)\tcounter\tCoda_Object_lifetime_statistics_allocated_count_block_body 509963 Coda_Object_lifetime_statistics_allocated_count_block_header\ttotal number of objects allocated (including previously collected objects)\tcounter\tCoda_Object_lifetime_statistics_allocated_count_block_header 509963 Coda_Object_lifetime_statistics_allocated_count_blockchain_snark\ttotal number of objects allocated (including previously collected objects)\tcounter\tCoda_Object_lifetime_statistics_allocated_count_blockchain_snark 2372 Coda_Object_lifetime_statistics_allocated_count_breadcrumb\ttotal number of objects allocated (including previously collected objects)\tcounter\tCoda_Object_lifetime_statistics_allocated_count_breadcrumb 3635 Coda_Object_lifetime_statistics_allocated_count_external_transition\ttotal number of objects allocated (including previously collected objects)\tcounter\tCoda_Object_lifetime_statistics_allocated_count_external_transition 20464 Coda_Object_lifetime_statistics_allocated_count_plong_dlog_proof_pasta_pallas\ttotal number of objects allocated (including previously collected objects)\tcounter\tCoda_Object_lifetime_statistics_allocated_count_plong_dlog_proof_pasta_pallas 1.57372e+06 Coda_Object_lifetime_statistics_collected_count_block\ttotal number of objects collected\tcounter\tCoda_Object_lifetime_statistics_collected_count_block 509306 Coda_Object_lifetime_statistics_collected_count_block_body\ttotal number of objects collected\tcounter\tCoda_Object_lifetime_statistics_collected_count_block_body 509306 Coda_Object_lifetime_statistics_collected_count_block_header\ttotal number of objects collected\tcounter\tCoda_Object_lifetime_statistics_collected_count_block_header 509306 Coda_Object_lifetime_statistics_collected_count_blockchain_snark\ttotal number of objects collected\tcounter\tCoda_Object_lifetime_statistics_collected_count_blockchain_snark 2372 Coda_Object_lifetime_statistics_collected_count_breadcrumb\ttotal number of objects collected\tcounter\tCoda_Object_lifetime_statistics_collected_count_breadcrumb 2980 Coda_Object_lifetime_statistics_collected_count_external_transition\ttotal number of objects collected\tcounter\tCoda_Object_lifetime_statistics_collected_count_external_transition 19865 Coda_Object_lifetime_statistics_collected_count_plong_dlog_proof_pasta_pallas\ttotal number of objects collected\tcounter\tCoda_Object_lifetime_statistics_collected_count_plong_dlog_proof_pasta_pallas 1.42182e+06 Coda_Object_lifetime_statistics_lifetime_block_body_q1_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_block_body_q1_ms 0 Coda_Object_lifetime_statistics_lifetime_block_body_q2_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_block_body_q2_ms 0 Coda_Object_lifetime_statistics_lifetime_block_body_q3_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_block_body_q3_ms 0 Coda_Object_lifetime_statistics_lifetime_block_body_q4_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_block_body_q4_ms 0 Coda_Object_lifetime_statistics_lifetime_block_header_q1_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_block_header_q1_ms 0 Coda_Object_lifetime_statistics_lifetime_block_header_q2_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_block_header_q2_ms 0 Coda_Object_lifetime_statistics_lifetime_block_header_q3_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_block_header_q3_ms 0 Coda_Object_lifetime_statistics_lifetime_block_header_q4_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_block_header_q4_ms 0 Coda_Object_lifetime_statistics_lifetime_block_q1_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_block_q1_ms 0 Coda_Object_lifetime_statistics_lifetime_block_q2_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_block_q2_ms 0 Coda_Object_lifetime_statistics_lifetime_block_q3_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_block_q3_ms 0 Coda_Object_lifetime_statistics_lifetime_block_q4_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_block_q4_ms 0 Coda_Object_lifetime_statistics_lifetime_blockchain_snark_q1_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_blockchain_snark_q1_ms 0 Coda_Object_lifetime_statistics_lifetime_blockchain_snark_q2_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_blockchain_snark_q2_ms 0 Coda_Object_lifetime_statistics_lifetime_blockchain_snark_q3_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_blockchain_snark_q3_ms 0 Coda_Object_lifetime_statistics_lifetime_blockchain_snark_q4_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_blockchain_snark_q4_ms 0 Coda_Object_lifetime_statistics_lifetime_breadcrumb_q1_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_breadcrumb_q1_ms 0 Coda_Object_lifetime_statistics_lifetime_breadcrumb_q2_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_breadcrumb_q2_ms 0 Coda_Object_lifetime_statistics_lifetime_breadcrumb_q3_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_breadcrumb_q3_ms 0 Coda_Object_lifetime_statistics_lifetime_breadcrumb_q4_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_breadcrumb_q4_ms 0 Coda_Object_lifetime_statistics_lifetime_external_transition_q1_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_external_transition_q1_ms 0 Coda_Object_lifetime_statistics_lifetime_external_transition_q2_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_external_transition_q2_ms 0 Coda_Object_lifetime_statistics_lifetime_external_transition_q3_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_external_transition_q3_ms 0 Coda_Object_lifetime_statistics_lifetime_external_transition_q4_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_external_transition_q4_ms 0 Coda_Object_lifetime_statistics_lifetime_plong_dlog_proof_pasta_pallas_q1_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_plong_dlog_proof_pasta_pallas_q1_ms 118.248 Coda_Object_lifetime_statistics_lifetime_plong_dlog_proof_pasta_pallas_q2_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_plong_dlog_proof_pasta_pallas_q2_ms 127.886 Coda_Object_lifetime_statistics_lifetime_plong_dlog_proof_pasta_pallas_q3_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_plong_dlog_proof_pasta_pallas_q3_ms 130.405 Coda_Object_lifetime_statistics_lifetime_plong_dlog_proof_pasta_pallas_q4_ms\tquartile of active object lifetimes, expressed in milliseconds\tgauge\tCoda_Object_lifetime_statistics_lifetime_plong_dlog_proof_pasta_pallas_q4_ms 134.198 Coda_Object_lifetime_statistics_live_count_block\ttotal number of objects currently allocated\tgauge\tCoda_Object_lifetime_statistics_live_count_block 0 Coda_Object_lifetime_statistics_live_count_block_body\ttotal number of objects currently allocated\tgauge\tCoda_Object_lifetime_statistics_live_count_block_body 0 Coda_Object_lifetime_statistics_live_count_block_header\ttotal number of objects currently allocated\tgauge\tCoda_Object_lifetime_statistics_live_count_block_header 0 Coda_Object_lifetime_statistics_live_count_blockchain_snark\ttotal number of objects currently allocated\tgauge\tCoda_Object_lifetime_statistics_live_count_blockchain_snark 0 Coda_Object_lifetime_statistics_live_count_breadcrumb\ttotal number of objects currently allocated\tgauge\tCoda_Object_lifetime_statistics_live_count_breadcrumb 0 Coda_Object_lifetime_statistics_live_count_external_transition\ttotal number of objects currently allocated\tgauge\tCoda_Object_lifetime_statistics_live_count_external_transition 0 Coda_Object_lifetime_statistics_live_count_plong_dlog_proof_pasta_pallas\ttotal number of objects currently allocated\tgauge\tCoda_Object_lifetime_statistics_live_count_plong_dlog_proof_pasta_pallas 16 Coda_Pipe_overflow_bootstrap_sync_ledger_pipe\tOverflow in sync ledger pipe when bootstrapping\tcounter\tCoda_Pipe_overflow_bootstrap_sync_ledger_pipe 0 Coda_Pipe_overflow_router_bootstrap_controller_pipe\tOverflow in bootstrap controller pipe in Transition_router\tcounter\tCoda_Pipe_overflow_router_bootstrap_controller_pipe 0 Coda_Pipe_overflow_router_transition_frontier_controller\tOverflow in transition frontier controller pipe in Transition_router\tcounter\tCoda_Pipe_overflow_router_transition_frontier_controller 0 Coda_Pipe_overflow_router_transitions\tOverflow in transitions pipe in Transition_router\tcounter\tCoda_Pipe_overflow_router_transitions 0 Coda_Pipe_overflow_router_valid_transitions\tOverflow in valid transitions pipe in Transition_router\tcounter\tCoda_Pipe_overflow_router_valid_transitions 0 Coda_Pipe_overflow_router_verified_transitions\tOverflow in verified transitions pipe in Transition_router\tcounter\tCoda_Pipe_overflow_router_verified_transitions 0 Coda_Pipe_overflow_transition_frontier_primary_transitions\tOverflow in primary transitions pipe\tcounter\tCoda_Pipe_overflow_transition_frontier_primary_transitions 0 Coda_Pipe_overflow_transition_frontier_valid_transitions\tOverflow in valid transitions pipe that has validated network transitions\tcounter\tCoda_Pipe_overflow_transition_frontier_valid_transitions 0 Coda_Pipe_overflow_verified_network_pool_diffs\tOverflow in verified network pool diffs pipe (transactions or snark work)\tcounter\tCoda_Pipe_overflow_verified_network_pool_diffs 0 Coda_Rejected_blocks_invalid_proof\tThe number of blocks rejected due to invalid proof\tcounter\tCoda_Rejected_blocks_invalid_proof 0 Coda_Rejected_blocks_no_common_ancestor\tThe number of blocks rejected due to the blocks do not share a common ancestor with our root\tcounter\tCoda_Rejected_blocks_no_common_ancestor 0 Coda_Rejected_blocks_received_early\tThe number of blocks rejected due to blocks being received too early\tcounter\tCoda_Rejected_blocks_received_early 0 Coda_Rejected_blocks_received_late\tThe number of blocks rejected due to blocks being received too late\tcounter\tCoda_Rejected_blocks_received_late 85 Coda_Rejected_blocks_worse_than_root\tThe number of blocks rejected due to the blocks are not selected over our root\tcounter\tCoda_Rejected_blocks_worse_than_root 0 Coda_Runtime_long_async_cycle\tA histogram for long async cycles\thistogram\tCoda_Runtime_long_async_cycle_sum 18604.7 Coda_Runtime_long_async_cycle_count 5378 Coda_Runtime_long_async_cycle_bucket{le=&quot;+Inf&quot;} 5378 Coda_Runtime_long_async_cycle_bucket{le=&quot;32&quot;} 5373 Coda_Runtime_long_async_cycle_bucket{le=&quot;16&quot;} 5372 Coda_Runtime_long_async_cycle_bucket{le=&quot;8&quot;} 5331 Coda_Runtime_long_async_cycle_bucket{le=&quot;4&quot;} 2955 Coda_Runtime_long_async_cycle_bucket{le=&quot;2&quot;} 2158 Coda_Runtime_long_async_cycle_bucket{le=&quot;1&quot;} 872 Coda_Runtime_long_async_cycle_bucket{le=&quot;0.5&quot;} 0 Coda_Runtime_long_async_job\tA histogram for long async jobs\thistogram\tCoda_Runtime_long_async_job_sum 15293.8 Coda_Runtime_long_async_job_count 3015 Coda_Runtime_long_async_job_bucket{le=&quot;+Inf&quot;} 3015 Coda_Runtime_long_async_job_bucket{le=&quot;32&quot;} 3010 Coda_Runtime_long_async_job_bucket{le=&quot;16&quot;} 3009 Coda_Runtime_long_async_job_bucket{le=&quot;8&quot;} 2985 Coda_Runtime_long_async_job_bucket{le=&quot;4&quot;} 652 Coda_Runtime_long_async_job_bucket{le=&quot;2&quot;} 0 Coda_Runtime_long_async_job_bucket{le=&quot;1&quot;} 0 Coda_Runtime_long_async_job_bucket{le=&quot;0.5&quot;} 0 Coda_Runtime_ocaml_gc_allocated_bytes\tTotal number of bytes allocated since the program was started.\tcounter\tCoda_Runtime_ocaml_gc_allocated_bytes 3.06144e+13 Coda_Runtime_ocaml_gc_compactions\tNumber of heap compactions since the program was started.\tcounter\tCoda_Runtime_ocaml_gc_compactions 737 Coda_Runtime_ocaml_gc_fragments\tNo. of heap fragments.\tcounter\tCoda_Runtime_ocaml_gc_fragments 222 Coda_Runtime_ocaml_gc_free_words\tWords freed by the GC.\tcounter\tCoda_Runtime_ocaml_gc_free_words 1.35567e+08 Coda_Runtime_ocaml_gc_heap_words\tTotal size of the major heap, in words.\tgauge\tCoda_Runtime_ocaml_gc_heap_words 8.83031e+08 Coda_Runtime_ocaml_gc_largest_free\tSize of the largest block freed by the GC.\tcounter\tCoda_Runtime_ocaml_gc_largest_free 2.74015e+07 Coda_Runtime_ocaml_gc_live_words\tLive words allocated by the GC.\tcounter\tCoda_Runtime_ocaml_gc_live_words 7.47463e+08 Coda_Runtime_ocaml_gc_major_collections\tNumber of major collection cycles completed since the program was started.\tcounter\tCoda_Runtime_ocaml_gc_major_collections 2029 Coda_Runtime_ocaml_gc_major_words\tNumber of words allocated in the major heap since the program was started.\tcounter\tCoda_Runtime_ocaml_gc_major_words 5.11097e+10 Coda_Runtime_ocaml_gc_minor_collections\tNumber of minor collection cycles completed since the program was started.\tcounter\tCoda_Runtime_ocaml_gc_minor_collections 1.45096e+07 Coda_Runtime_ocaml_gc_stack_size\tCurrent stack size.\tcounter\tCoda_Runtime_ocaml_gc_stack_size 895 Coda_Runtime_ocaml_gc_top_heap_words\tMaximum size reached by the major heap, in words.\tcounter\tCoda_Runtime_ocaml_gc_top_heap_words 8.83031e+08 Coda_Runtime_process_cpu_seconds_total\tTotal user and system CPU time spent in seconds.\tcounter\tCoda_Runtime_process_cpu_seconds_total 24281 Coda_Runtime_process_uptime_ms_total\tTotal time the process has been running for in milliseconds.\tcounter\tCoda_Runtime_process_uptime_ms_total 2.70652e+08 Coda_Scan_state_base_snarks_required_tree0\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree0 0 Coda_Scan_state_base_snarks_required_tree1\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree1 0 Coda_Scan_state_base_snarks_required_tree10\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree10 0 Coda_Scan_state_base_snarks_required_tree11\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree11 0 Coda_Scan_state_base_snarks_required_tree12\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree12 0 Coda_Scan_state_base_snarks_required_tree13\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree13 0 Coda_Scan_state_base_snarks_required_tree14\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree14 0 Coda_Scan_state_base_snarks_required_tree15\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree15 0 Coda_Scan_state_base_snarks_required_tree16\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree16 0 Coda_Scan_state_base_snarks_required_tree17\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree17 0 Coda_Scan_state_base_snarks_required_tree18\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree18 0 Coda_Scan_state_base_snarks_required_tree19\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree19 0 Coda_Scan_state_base_snarks_required_tree2\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree2 0 Coda_Scan_state_base_snarks_required_tree20\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree20 0 Coda_Scan_state_base_snarks_required_tree21\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree21 128 Coda_Scan_state_base_snarks_required_tree22\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree22 128 Coda_Scan_state_base_snarks_required_tree23\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree23 112 Coda_Scan_state_base_snarks_required_tree24\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree24 1 Coda_Scan_state_base_snarks_required_tree3\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree3 0 Coda_Scan_state_base_snarks_required_tree4\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree4 0 Coda_Scan_state_base_snarks_required_tree5\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree5 0 Coda_Scan_state_base_snarks_required_tree6\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree6 0 Coda_Scan_state_base_snarks_required_tree7\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree7 0 Coda_Scan_state_base_snarks_required_tree8\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree8 0 Coda_Scan_state_base_snarks_required_tree9\t# of base snarks required\tgauge\tCoda_Scan_state_base_snarks_required_tree9 0 Coda_Scan_state_merge_snarks_required_tree0\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree0 1 Coda_Scan_state_merge_snarks_required_tree1\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree1 1 Coda_Scan_state_merge_snarks_required_tree10\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree10 8 Coda_Scan_state_merge_snarks_required_tree11\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree11 8 Coda_Scan_state_merge_snarks_required_tree12\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree12 16 Coda_Scan_state_merge_snarks_required_tree13\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree13 16 Coda_Scan_state_merge_snarks_required_tree14\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree14 16 Coda_Scan_state_merge_snarks_required_tree15\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree15 32 Coda_Scan_state_merge_snarks_required_tree16\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree16 32 Coda_Scan_state_merge_snarks_required_tree17\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree17 32 Coda_Scan_state_merge_snarks_required_tree18\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree18 64 Coda_Scan_state_merge_snarks_required_tree19\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree19 64 Coda_Scan_state_merge_snarks_required_tree2\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree2 1 Coda_Scan_state_merge_snarks_required_tree20\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree20 64 Coda_Scan_state_merge_snarks_required_tree21\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree21 0 Coda_Scan_state_merge_snarks_required_tree22\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree22 0 Coda_Scan_state_merge_snarks_required_tree23\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree23 0 Coda_Scan_state_merge_snarks_required_tree24\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree24 0 Coda_Scan_state_merge_snarks_required_tree3\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree3 2 Coda_Scan_state_merge_snarks_required_tree4\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree4 2 Coda_Scan_state_merge_snarks_required_tree5\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree5 2 Coda_Scan_state_merge_snarks_required_tree6\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree6 4 Coda_Scan_state_merge_snarks_required_tree7\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree7 4 Coda_Scan_state_merge_snarks_required_tree8\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree8 4 Coda_Scan_state_merge_snarks_required_tree9\t# of merge snarks required\tgauge\tCoda_Scan_state_merge_snarks_required_tree9 8 Coda_Scan_state_purchased_snark_work_per_block\t# of snark work bundles purchased per block\tgauge\tCoda_Scan_state_purchased_snark_work_per_block 0 Coda_Scan_state_slots_available_tree0\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree0 0 Coda_Scan_state_slots_available_tree1\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree1 0 Coda_Scan_state_slots_available_tree10\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree10 0 Coda_Scan_state_slots_available_tree11\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree11 0 Coda_Scan_state_slots_available_tree12\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree12 0 Coda_Scan_state_slots_available_tree13\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree13 0 Coda_Scan_state_slots_available_tree14\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree14 0 Coda_Scan_state_slots_available_tree15\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree15 0 Coda_Scan_state_slots_available_tree16\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree16 0 Coda_Scan_state_slots_available_tree17\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree17 0 Coda_Scan_state_slots_available_tree18\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree18 0 Coda_Scan_state_slots_available_tree19\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree19 0 Coda_Scan_state_slots_available_tree2\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree2 0 Coda_Scan_state_slots_available_tree20\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree20 0 Coda_Scan_state_slots_available_tree21\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree21 0 Coda_Scan_state_slots_available_tree22\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree22 0 Coda_Scan_state_slots_available_tree23\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree23 16 Coda_Scan_state_slots_available_tree24\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree24 127 Coda_Scan_state_slots_available_tree3\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree3 0 Coda_Scan_state_slots_available_tree4\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree4 0 Coda_Scan_state_slots_available_tree5\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree5 0 Coda_Scan_state_slots_available_tree6\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree6 0 Coda_Scan_state_slots_available_tree7\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree7 0 Coda_Scan_state_slots_available_tree8\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree8 0 Coda_Scan_state_slots_available_tree9\t# of slots available\tgauge\tCoda_Scan_state_slots_available_tree9 0 Coda_Scan_state_snark_fees_per_block\tTotal snark fee per block\tgauge\tCoda_Scan_state_snark_fees_per_block 0 Coda_Scan_state_snark_work_required\t# of snark work bundles in the scan state that are yet to be done/purchased\tgauge\tCoda_Scan_state_snark_work_required 376 Coda_Scan_state_transaction_fees_per_block\tTotal transaction fee per block\tgauge\tCoda_Scan_state_transaction_fees_per_block 1.22959e+08 Coda_Snark_work_completed_snark_work_received_rpc\t# of completed snark work bundles received via rpc\tcounter\tCoda_Snark_work_completed_snark_work_received_rpc 0 Coda_Snark_work_ignored\t# of received snark work ignored\tcounter\tCoda_Snark_work_ignored 0 Coda_Snark_work_pending_snark_work\ttotal # of snark work bundles that are yet to be generated\tgauge\tCoda_Snark_work_pending_snark_work 0 Coda_Snark_work_processing_time\taverage delay, in ms, for snark work to be accepted after the OCaml process receives it\tgauge\tCoda_Snark_work_processing_time 0.978107 Coda_Snark_work_received\t# of snark work received\tcounter\tCoda_Snark_work_received 191991 Coda_Snark_work_rejected\t# of received snark work failing validation\tcounter\tCoda_Snark_work_rejected 57774 Coda_Snark_work_rejection_time\taverage time, in ms, for snark work to be rejected after the OCaml process receives it\tgauge\tCoda_Snark_work_rejection_time 0.0231447 Coda_Snark_work_snark_fee\tA histogram for snark fees\thistogram\tCoda_Snark_work_snark_fee_sum 3.60007e+20 Coda_Snark_work_snark_fee_count 163099 Coda_Snark_work_snark_fee_bucket{le=&quot;+Inf&quot;} 163099 Coda_Snark_work_snark_fee_bucket{le=&quot;9&quot;} 17559 Coda_Snark_work_snark_fee_bucket{le=&quot;8&quot;} 17559 Coda_Snark_work_snark_fee_bucket{le=&quot;7&quot;} 17559 Coda_Snark_work_snark_fee_bucket{le=&quot;6&quot;} 17559 Coda_Snark_work_snark_fee_bucket{le=&quot;5&quot;} 17559 Coda_Snark_work_snark_fee_bucket{le=&quot;4&quot;} 17559 Coda_Snark_work_snark_fee_bucket{le=&quot;3&quot;} 17559 Coda_Snark_work_snark_fee_bucket{le=&quot;2&quot;} 17559 Coda_Snark_work_snark_fee_bucket{le=&quot;1&quot;} 17559 Coda_Snark_work_snark_fee_bucket{le=&quot;0&quot;} 17559 Coda_Snark_work_snark_pool_serialization_ms\tA histogram for snark pool serialization time\thistogram\tCoda_Snark_work_snark_pool_serialization_ms_sum 1.11439e+07 Coda_Snark_work_snark_pool_serialization_ms_count 1440 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;+Inf&quot;} 1440 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;38000&quot;} 1440 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;36000&quot;} 1440 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;34000&quot;} 1440 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;32000&quot;} 1440 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;30000&quot;} 1440 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;28000&quot;} 1440 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;26000&quot;} 1440 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;24000&quot;} 1440 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;22000&quot;} 1440 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;20000&quot;} 1436 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;18000&quot;} 1430 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;16000&quot;} 1416 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;14000&quot;} 1352 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;12000&quot;} 1200 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;10000&quot;} 987 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;8000&quot;} 607 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;6000&quot;} 483 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;4000&quot;} 369 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;2000&quot;} 245 Coda_Snark_work_snark_pool_serialization_ms_bucket{le=&quot;0&quot;} 0 Coda_Snark_work_snark_pool_size\t# of completed snark work bundles in the snark pool\tgauge\tCoda_Snark_work_snark_pool_size 36274 Coda_Snark_work_snark_work_assigned_rpc\t# of snark work bundles assigned via rpc\tcounter\tCoda_Snark_work_snark_work_assigned_rpc 0 Coda_Snark_work_snark_work_timed_out_rpc\t# of snark work bundles sent via rpc that did not complete within the value of the daemon flag work-reassignment-wait\tcounter\tCoda_Snark_work_snark_work_timed_out_rpc 0 Coda_Snark_work_useful_snark_work_received_time_sec\tTime at which useful snark work was seen (seconds since 1/1/1970)\tgauge\tCoda_Snark_work_useful_snark_work_received_time_sec 9.70225e+07 Coda_Snark_work_validation_time\taverage delay, in ms, for snark work to be validated and rebroadcasted\tgauge\tCoda_Snark_work_validation_time 298.285 Coda_Snark_work_validations_timed_out\t# of received snark work whose validation timed out\tcounter\tCoda_Snark_work_validations_timed_out 0 Coda_Transaction_ignored\t# of received transactions ignored\tcounter\tCoda_Transaction_ignored 2648 Coda_Transaction_pool_size\tNumber of transactions in the pool\tgauge\tCoda_Transaction_pool_size 277 Coda_Transaction_pool_transactions_added_to_pool\tNumber of transactions added to the pool since the node start\tcounter\tCoda_Transaction_pool_transactions_added_to_pool 21576 Coda_Transaction_pool_useful_transactions_received_time_sec\tTime at which useful transactions were seen (seconds since 1/1/1970)\tgauge\tCoda_Transaction_pool_useful_transactions_received_time_sec 9.70225e+07 Coda_Transaction_processing_time\taverage delay, in ms, for transactions to be accepted after the OCaml process receives it\tgauge\tCoda_Transaction_processing_time 0.00277506 Coda_Transaction_received\t# of transactions received\tcounter\tCoda_Transaction_received 25412 Coda_Transaction_rejected\t# of received transactions failing validation\tcounter\tCoda_Transaction_rejected 5444 Coda_Transaction_rejection_time\taverage time, in ms, for transactions to be rejected after the OCaml process receives it\tgauge\tCoda_Transaction_rejection_time 0.000390079 Coda_Transaction_validation_time\taverage delay, in ms, for transactions to be validated and rebroadcasted\tgauge\tCoda_Transaction_validation_time 299.295 Coda_Transaction_validations_timed_out\t# of received transactions whose validation timed out\tcounter\tCoda_Transaction_validations_timed_out 0 Coda_Transition_frontier_accepted_block_slot_time_sec\tSlot time (seconds since 1/1/1970) corresponding to the most recently accepted block\tgauge\tCoda_Transition_frontier_accepted_block_slot_time_sec 9.70218e+07 Coda_Transition_frontier_active_breadcrumbs\tcurrent # of breadcrumbs in the transition frontier\tgauge\tCoda_Transition_frontier_active_breadcrumbs 655 Coda_Transition_frontier_best_tip_block_height\tHeight of most recent best tip\tgauge\tCoda_Transition_frontier_best_tip_block_height 325613 Coda_Transition_frontier_best_tip_coinbase\t0 if there is no coinbase in the current best tip, 1 otherwise\tgauge\tCoda_Transition_frontier_best_tip_coinbase 1 Coda_Transition_frontier_best_tip_slot_time_sec\tSlot time (seconds since 1/1/1970) corresponding to the most recent best tip\tgauge\tCoda_Transition_frontier_best_tip_slot_time_sec 9.70218e+07 Coda_Transition_frontier_best_tip_user_txns\t# of transactions in the current best tip\tgauge\tCoda_Transition_frontier_best_tip_user_txns 38 Coda_Transition_frontier_controller_breadcrumbs_built_by_builder\tbreadcrumbs built by the breadcrumb builder\tcounter\tCoda_Transition_frontier_controller_breadcrumbs_built_by_builder 0 Coda_Transition_frontier_controller_breadcrumbs_built_by_processor\tbreadcrumbs built by the processor\tcounter\tCoda_Transition_frontier_controller_breadcrumbs_built_by_processor 1980 Coda_Transition_frontier_controller_catchup_time_ms\ttime elapsed while doing catchup\tgauge\tCoda_Transition_frontier_controller_catchup_time_ms 0 Coda_Transition_frontier_controller_transitions_being_processed\ttransitions currently being processed by the transition frontier controller\tgauge\tCoda_Transition_frontier_controller_transitions_being_processed 0 Coda_Transition_frontier_controller_transitions_downloaded_from_catchup\t# of transitions downloaded by ledger_catchup\tgauge\tCoda_Transition_frontier_controller_transitions_downloaded_from_catchup 0 Coda_Transition_frontier_controller_transitions_in_catchup_scheduler\ttransitions stored inside catchup scheduler\tgauge\tCoda_Transition_frontier_controller_transitions_in_catchup_scheduler -2138 Coda_Transition_frontier_empty_blocks_at_best_tip\tNumber of blocks at the best tip that have no user-commands in them\tgauge\tCoda_Transition_frontier_empty_blocks_at_best_tip 0 Coda_Transition_frontier_finalized_staged_txns\ttotal # of staged txns that have been finalized\tcounter\tCoda_Transition_frontier_finalized_staged_txns 28418 Coda_Transition_frontier_longest_fork\tLength of the longest path in the frontier\tgauge\tCoda_Transition_frontier_longest_fork 5 Coda_Transition_frontier_max_blocklength_observed\tmax blocklength observed by the system\tgauge\tCoda_Transition_frontier_max_blocklength_observed 325613 Coda_Transition_frontier_max_unvalidated_blocklength_observed\tmax unvalidated blocklength observed by the system\tgauge\tCoda_Transition_frontier_max_unvalidated_blocklength_observed 325613 Coda_Transition_frontier_min_window_density\tmin window density for the best tip\tgauge\tCoda_Transition_frontier_min_window_density 13 Coda_Transition_frontier_recently_finalized_staged_txns\t# of staged txns that were finalized during the last transition frontier root transition\tgauge\tCoda_Transition_frontier_recently_finalized_staged_txns 11 Coda_Transition_frontier_root_snarked_ledger_accounts\t# of accounts in transition frontier root snarked ledger\tgauge\tCoda_Transition_frontier_root_snarked_ledger_accounts 0 Coda_Transition_frontier_root_snarked_ledger_total_currency\ttotal amount of currency in root snarked ledger\tgauge\tCoda_Transition_frontier_root_snarked_ledger_total_currency 0 Coda_Transition_frontier_root_transitions\t# of root transitions (finalizations) performed in transition frontier\tcounter\tCoda_Transition_frontier_root_transitions 879 Coda_Transition_frontier_slot_fill_rate\tfill rate for the last k slots (or fewer if there have not been k slots between the best tip and the frontier root)\tgauge\tCoda_Transition_frontier_slot_fill_rate 0.542662 Coda_Transition_frontier_total_breadcrumbs\tmonotonically increasing # of breadcrumbs added to transition frontier\tcounter\tCoda_Transition_frontier_total_breadcrumbs 2755 Coda_Transition_frontier_tps_30min\tmoving average for transaction per second, the rolling interval is set to 30 min\tgauge\tCoda_Transition_frontier_tps_30min 0.0255556 Coda_Trust_system_banned_peers\t# of banned ip addresses\tgauge\tCoda_Trust_system_banned_peers 0 Mina_Daemon_time_spent_in_thread_accumulate_libp2p_ipc_message_fragments_ms\tTotal number of ms spent on 'accumulate_libp2p_ipc_message_fragments'\tcounter\tMina_Daemon_time_spent_in_thread_accumulate_libp2p_ipc_message_fragments_ms 1128.22 Mina_Daemon_time_spent_in_thread_apply_and_broadcast_snark_pool_diffs_ms\tTotal number of ms spent on 'apply_and_broadcast_snark_pool_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_apply_and_broadcast_snark_pool_diffs_ms 50428.4 Mina_Daemon_time_spent_in_thread_apply_and_broadcast_transaction_pool_diffs_ms\tTotal number of ms spent on 'apply_and_broadcast_transaction_pool_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_apply_and_broadcast_transaction_pool_diffs_ms 206.27 Mina_Daemon_time_spent_in_thread_apply_new_best_tip_ledger_to_snark_pool_ms\tTotal number of ms spent on 'apply_new_best_tip_ledger_to_snark_pool'\tcounter\tMina_Daemon_time_spent_in_thread_apply_new_best_tip_ledger_to_snark_pool_ms 302387 Mina_Daemon_time_spent_in_thread_apply_refcount_table_to_snark_pool_ms\tTotal number of ms spent on 'apply_refcount_table_to_snark_pool'\tcounter\tMina_Daemon_time_spent_in_thread_apply_refcount_table_to_snark_pool_ms 444283 Mina_Daemon_time_spent_in_thread_apply_transaction_ms\tTotal number of ms spent on 'apply_transaction'\tcounter\tMina_Daemon_time_spent_in_thread_apply_transaction_ms 1.3793e+06 Mina_Daemon_time_spent_in_thread_apply_transaction_to_scan_state_ms\tTotal number of ms spent on 'apply_transaction_to_scan_state'\tcounter\tMina_Daemon_time_spent_in_thread_apply_transaction_to_scan_state_ms 2.48106e+06 Mina_Daemon_time_spent_in_thread_broadcast_blocks_ms\tTotal number of ms spent on 'broadcast_blocks'\tcounter\tMina_Daemon_time_spent_in_thread_broadcast_blocks_ms 721.475 Mina_Daemon_time_spent_in_thread_broadcast_snark_pool_diffs_ms\tTotal number of ms spent on 'broadcast_snark_pool_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_broadcast_snark_pool_diffs_ms 59.0037 Mina_Daemon_time_spent_in_thread_broadcast_transaction_pool_diffs_ms\tTotal number of ms spent on 'broadcast_transaction_pool_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_broadcast_transaction_pool_diffs_ms 73.7233 Mina_Daemon_time_spent_in_thread_build_breadcrumb_ms\tTotal number of ms spent on 'build_breadcrumb'\tcounter\tMina_Daemon_time_spent_in_thread_build_breadcrumb_ms 4.12141e+06 Mina_Daemon_time_spent_in_thread_calculate_diff_frontier_diffs_ms\tTotal number of ms spent on 'calculate_diff_frontier_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_calculate_diff_frontier_diffs_ms 8349.8 Mina_Daemon_time_spent_in_thread_check_completed_works_ms\tTotal number of ms spent on 'check_completed_works'\tcounter\tMina_Daemon_time_spent_in_thread_check_completed_works_ms 22815.3 Mina_Daemon_time_spent_in_thread_check_for_sufficient_snark_work_ms\tTotal number of ms spent on 'check_for_sufficient_snark_work'\tcounter\tMina_Daemon_time_spent_in_thread_check_for_sufficient_snark_work_ms 0 Mina_Daemon_time_spent_in_thread_check_next_block_timing_ms\tTotal number of ms spent on 'check_next_block_timing'\tcounter\tMina_Daemon_time_spent_in_thread_check_next_block_timing_ms 5.87833 Mina_Daemon_time_spent_in_thread_check_super_catchup_invariants_ms\tTotal number of ms spent on 'check_super_catchup_invariants'\tcounter\tMina_Daemon_time_spent_in_thread_check_super_catchup_invariants_ms 5.14064e+06 Mina_Daemon_time_spent_in_thread_collect_gc_metrics_ms\tTotal number of ms spent on 'collect_gc_metrics'\tcounter\tMina_Daemon_time_spent_in_thread_collect_gc_metrics_ms 105662 Mina_Daemon_time_spent_in_thread_commit_frontier_root_snarked_ledger_ms\tTotal number of ms spent on 'commit_frontier_root_snarked_ledger'\tcounter\tMina_Daemon_time_spent_in_thread_commit_frontier_root_snarked_ledger_ms 29887.1 Mina_Daemon_time_spent_in_thread_compute_downloader_maxes_ms\tTotal number of ms spent on 'compute_downloader_maxes'\tcounter\tMina_Daemon_time_spent_in_thread_compute_downloader_maxes_ms 205.936 Mina_Daemon_time_spent_in_thread_compute_downloader_useful_peers_ms\tTotal number of ms spent on 'compute_downloader_useful_peers'\tcounter\tMina_Daemon_time_spent_in_thread_compute_downloader_useful_peers_ms 430.576 Mina_Daemon_time_spent_in_thread_create_coinbase_ms\tTotal number of ms spent on 'create_coinbase'\tcounter\tMina_Daemon_time_spent_in_thread_create_coinbase_ms 5.87627 Mina_Daemon_time_spent_in_thread_create_ledger_witness_ms\tTotal number of ms spent on 'create_ledger_witness'\tcounter\tMina_Daemon_time_spent_in_thread_create_ledger_witness_ms 1.17771e+06 Mina_Daemon_time_spent_in_thread_create_staged_ledger_diff_ms\tTotal number of ms spent on 'create_staged_ledger_diff'\tcounter\tMina_Daemon_time_spent_in_thread_create_staged_ledger_diff_ms 2682.07 Mina_Daemon_time_spent_in_thread_create_staged_ledger_diff_one_prediff_ms\tTotal number of ms spent on 'create_staged_ledger_diff_one_prediff'\tcounter\tMina_Daemon_time_spent_in_thread_create_staged_ledger_diff_one_prediff_ms 4.47952 Mina_Daemon_time_spent_in_thread_dispatch_block_proving_ms\tTotal number of ms spent on 'dispatch_block_proving'\tcounter\tMina_Daemon_time_spent_in_thread_dispatch_block_proving_ms 4.91155 Mina_Daemon_time_spent_in_thread_dispatch_blockchain_snark_verification_ms\tTotal number of ms spent on 'dispatch_blockchain_snark_verification'\tcounter\tMina_Daemon_time_spent_in_thread_dispatch_blockchain_snark_verification_ms 740.35 Mina_Daemon_time_spent_in_thread_dispatch_downloader_requests_ms\tTotal number of ms spent on 'dispatch_downloader_requests'\tcounter\tMina_Daemon_time_spent_in_thread_dispatch_downloader_requests_ms 16612 Mina_Daemon_time_spent_in_thread_dispatch_libp2p_stream_handler_ms\tTotal number of ms spent on 'dispatch_libp2p_stream_handler'\tcounter\tMina_Daemon_time_spent_in_thread_dispatch_libp2p_stream_handler_ms 131428 Mina_Daemon_time_spent_in_thread_dispatch_transaction_snark_verification_ms\tTotal number of ms spent on 'dispatch_transaction_snark_verification'\tcounter\tMina_Daemon_time_spent_in_thread_dispatch_transaction_snark_verification_ms 67192.3 Mina_Daemon_time_spent_in_thread_download_ms\tTotal number of ms spent on 'download'\tcounter\tMina_Daemon_time_spent_in_thread_download_ms 5.05691e+06 Mina_Daemon_time_spent_in_thread_exec_super_catchup_fstm_ms\tTotal number of ms spent on 'exec_super_catchup_fstm'\tcounter\tMina_Daemon_time_spent_in_thread_exec_super_catchup_fstm_ms 239499 Mina_Daemon_time_spent_in_thread_execute_downlader_node_fstm_ms\tTotal number of ms spent on 'execute_downlader_node_fstm'\tcounter\tMina_Daemon_time_spent_in_thread_execute_downlader_node_fstm_ms 5.05705e+06 Mina_Daemon_time_spent_in_thread_fill_work_and_enqueue_transactions_ms\tTotal number of ms spent on 'fill_work_and_enqueue_transactions'\tcounter\tMina_Daemon_time_spent_in_thread_fill_work_and_enqueue_transactions_ms 0 Mina_Daemon_time_spent_in_thread_generate_consensus_transition_ms\tTotal number of ms spent on 'generate_consensus_transition'\tcounter\tMina_Daemon_time_spent_in_thread_generate_consensus_transition_ms 28.3156 Mina_Daemon_time_spent_in_thread_generate_internal_transition_ms\tTotal number of ms spent on 'generate_internal_transition'\tcounter\tMina_Daemon_time_spent_in_thread_generate_internal_transition_ms 0.003717 Mina_Daemon_time_spent_in_thread_generate_snark_transition_ms\tTotal number of ms spent on 'generate_snark_transition'\tcounter\tMina_Daemon_time_spent_in_thread_generate_snark_transition_ms 0.00013 Mina_Daemon_time_spent_in_thread_generate_staged_ledger_diff_ms\tTotal number of ms spent on 'generate_staged_ledger_diff'\tcounter\tMina_Daemon_time_spent_in_thread_generate_staged_ledger_diff_ms 17.548 Mina_Daemon_time_spent_in_thread_get_epoch_data_for_vrf_ms\tTotal number of ms spent on 'get_epoch_data_for_vrf'\tcounter\tMina_Daemon_time_spent_in_thread_get_epoch_data_for_vrf_ms 2.79737 Mina_Daemon_time_spent_in_thread_get_transaction__status_ms\tTotal number of ms spent on 'get_transaction__status'\tcounter\tMina_Daemon_time_spent_in_thread_get_transaction__status_ms 2353.83 Mina_Daemon_time_spent_in_thread_gossip_net_ms\tTotal number of ms spent on 'gossip_net'\tcounter\tMina_Daemon_time_spent_in_thread_gossip_net_ms 749999 Mina_Daemon_time_spent_in_thread_handle_block_gossip_ms\tTotal number of ms spent on 'handle_block_gossip'\tcounter\tMina_Daemon_time_spent_in_thread_handle_block_gossip_ms 13.0158 Mina_Daemon_time_spent_in_thread_handle_libp2p_helper_subprocess_logs_ms\tTotal number of ms spent on 'handle_libp2p_helper_subprocess_logs'\tcounter\tMina_Daemon_time_spent_in_thread_handle_libp2p_helper_subprocess_logs_ms 2926.93 Mina_Daemon_time_spent_in_thread_handle_libp2p_ipc_incoming_ms\tTotal number of ms spent on 'handle_libp2p_ipc_incoming'\tcounter\tMina_Daemon_time_spent_in_thread_handle_libp2p_ipc_incoming_ms 734489 Mina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_gossip_received_ms\tTotal number of ms spent on 'handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_gossip_received'\tcounter\tMina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_gossip_received_ms 670487 Mina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_incoming_stream_ms\tTotal number of ms spent on 'handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_incoming_stream'\tcounter\tMina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_incoming_stream_ms 131520 Mina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_peer_disconnected_ms\tTotal number of ms spent on 'handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_peer_disconnected'\tcounter\tMina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_peer_disconnected_ms 80.7209 Mina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_stream_lost_ms\tTotal number of ms spent on 'handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_stream_lost'\tcounter\tMina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_stream_lost_ms 141.004 Mina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_stream_message_received_ms\tTotal number of ms spent on 'handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_stream_message_received'\tcounter\tMina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_handle_libp2p_helper_subprocess_push_stream_message_received_ms 274.302 Mina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_handle_libp2p_ipc_push_peer_connected_ms\tTotal number of ms spent on 'handle_libp2p_ipc_push_handle_libp2p_ipc_push_peer_connected'\tcounter\tMina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_handle_libp2p_ipc_push_peer_connected_ms 504.188 Mina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_ms\tTotal number of ms spent on 'handle_libp2p_ipc_push'\tcounter\tMina_Daemon_time_spent_in_thread_handle_libp2p_ipc_push_ms 875726 Mina_Daemon_time_spent_in_thread_handle_libp2p_ipc_rpc_response_ms\tTotal number of ms spent on 'handle_libp2p_ipc_rpc_response'\tcounter\tMina_Daemon_time_spent_in_thread_handle_libp2p_ipc_rpc_response_ms 717.272 Mina_Daemon_time_spent_in_thread_handle_protocol_streams_ms\tTotal number of ms spent on 'handle_protocol_streams'\tcounter\tMina_Daemon_time_spent_in_thread_handle_protocol_streams_ms 0.026581 Mina_Daemon_time_spent_in_thread_handle_request_answer_sync_ledger_query_ms\tTotal number of ms spent on 'handle_request_answer_sync_ledger_query'\tcounter\tMina_Daemon_time_spent_in_thread_handle_request_answer_sync_ledger_query_ms 54.2216 Mina_Daemon_time_spent_in_thread_handle_request_get_ancestry_ms\tTotal number of ms spent on 'handle_request_get_ancestry'\tcounter\tMina_Daemon_time_spent_in_thread_handle_request_get_ancestry_ms 0 Mina_Daemon_time_spent_in_thread_handle_request_get_best_tip_ms\tTotal number of ms spent on 'handle_request_get_best_tip'\tcounter\tMina_Daemon_time_spent_in_thread_handle_request_get_best_tip_ms 0 Mina_Daemon_time_spent_in_thread_handle_request_get_node_status_ms\tTotal number of ms spent on 'handle_request_get_node_status'\tcounter\tMina_Daemon_time_spent_in_thread_handle_request_get_node_status_ms 50632.9 Mina_Daemon_time_spent_in_thread_handle_request_get_staged_ledger_aux_and_pending_coinbases_at_hash_ms\tTotal number of ms spent on 'handle_request_get_staged_ledger_aux_and_pending_coinbases_at_hash'\tcounter\tMina_Daemon_time_spent_in_thread_handle_request_get_staged_ledger_aux_and_pending_coinbases_at_hash_ms 0 Mina_Daemon_time_spent_in_thread_handle_request_get_transition_chain_ms\tTotal number of ms spent on 'handle_request_get_transition_chain'\tcounter\tMina_Daemon_time_spent_in_thread_handle_request_get_transition_chain_ms 0 Mina_Daemon_time_spent_in_thread_handle_request_get_transition_chain_proof_ms\tTotal number of ms spent on 'handle_request_get_transition_chain_proof'\tcounter\tMina_Daemon_time_spent_in_thread_handle_request_get_transition_chain_proof_ms 0 Mina_Daemon_time_spent_in_thread_handle_rpc_answer_sync_ledger_query_ms\tTotal number of ms spent on 'handle_rpc_answer_sync_ledger_query'\tcounter\tMina_Daemon_time_spent_in_thread_handle_rpc_answer_sync_ledger_query_ms 69.6133 Mina_Daemon_time_spent_in_thread_handle_rpc_get_ancestry_ms\tTotal number of ms spent on 'handle_rpc_get_ancestry'\tcounter\tMina_Daemon_time_spent_in_thread_handle_rpc_get_ancestry_ms 17.0314 Mina_Daemon_time_spent_in_thread_handle_rpc_get_best_tip_ms\tTotal number of ms spent on 'handle_rpc_get_best_tip'\tcounter\tMina_Daemon_time_spent_in_thread_handle_rpc_get_best_tip_ms 18.1949 Mina_Daemon_time_spent_in_thread_handle_rpc_get_staged_ledger_aux_and_pending_coinbases_at_hash_ms\tTotal number of ms spent on 'handle_rpc_get_staged_ledger_aux_and_pending_coinbases_at_hash'\tcounter\tMina_Daemon_time_spent_in_thread_handle_rpc_get_staged_ledger_aux_and_pending_coinbases_at_hash_ms 273.552 Mina_Daemon_time_spent_in_thread_handle_rpc_get_transition_chain_ms\tTotal number of ms spent on 'handle_rpc_get_transition_chain'\tcounter\tMina_Daemon_time_spent_in_thread_handle_rpc_get_transition_chain_ms 432.601 Mina_Daemon_time_spent_in_thread_handle_rpc_get_transition_chain_proof_ms\tTotal number of ms spent on 'handle_rpc_get_transition_chain_proof'\tcounter\tMina_Daemon_time_spent_in_thread_handle_rpc_get_transition_chain_proof_ms 41709.7 Mina_Daemon_time_spent_in_thread_handle_snark_pool_diffs_ms\tTotal number of ms spent on 'handle_snark_pool_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_handle_snark_pool_diffs_ms 817274 Mina_Daemon_time_spent_in_thread_handle_snark_pool_gossip_ms\tTotal number of ms spent on 'handle_snark_pool_gossip'\tcounter\tMina_Daemon_time_spent_in_thread_handle_snark_pool_gossip_ms 663.564 Mina_Daemon_time_spent_in_thread_handle_super_catchup_jobs_ms\tTotal number of ms spent on 'handle_super_catchup_jobs'\tcounter\tMina_Daemon_time_spent_in_thread_handle_super_catchup_jobs_ms 91158.5 Mina_Daemon_time_spent_in_thread_handle_transaction_pool_diffs_ms\tTotal number of ms spent on 'handle_transaction_pool_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_handle_transaction_pool_diffs_ms 10632.1 Mina_Daemon_time_spent_in_thread_handle_transaction_pool_gossip_ms\tTotal number of ms spent on 'handle_transaction_pool_gossip'\tcounter\tMina_Daemon_time_spent_in_thread_handle_transaction_pool_gossip_ms 74.6273 Mina_Daemon_time_spent_in_thread_initially_validate_blocks_ms\tTotal number of ms spent on 'initially_validate_blocks'\tcounter\tMina_Daemon_time_spent_in_thread_initially_validate_blocks_ms 3125.25 Mina_Daemon_time_spent_in_thread_maintain_downloader_peers_ms\tTotal number of ms spent on 'maintain_downloader_peers'\tcounter\tMina_Daemon_time_spent_in_thread_maintain_downloader_peers_ms 103.564 Mina_Daemon_time_spent_in_thread_manage_libp2p_helper_subprocess_ms\tTotal number of ms spent on 'manage_libp2p_helper_subprocess'\tcounter\tMina_Daemon_time_spent_in_thread_manage_libp2p_helper_subprocess_ms 747521 Mina_Daemon_time_spent_in_thread_manage_prover_subprocess_ms\tTotal number of ms spent on 'manage_prover_subprocess'\tcounter\tMina_Daemon_time_spent_in_thread_manage_prover_subprocess_ms 1547.46 Mina_Daemon_time_spent_in_thread_manage_uptimer_snark_worker_subprocess_ms\tTotal number of ms spent on 'manage_uptimer_snark_worker_subprocess'\tcounter\tMina_Daemon_time_spent_in_thread_manage_uptimer_snark_worker_subprocess_ms 1692.51 Mina_Daemon_time_spent_in_thread_manage_verifier_subprocess_ms\tTotal number of ms spent on 'manage_verifier_subprocess'\tcounter\tMina_Daemon_time_spent_in_thread_manage_verifier_subprocess_ms 4410.96 Mina_Daemon_time_spent_in_thread_manage_vrf_evaluator_subprocess_ms\tTotal number of ms spent on 'manage_vrf_evaluator_subprocess'\tcounter\tMina_Daemon_time_spent_in_thread_manage_vrf_evaluator_subprocess_ms 1428.36 Mina_Daemon_time_spent_in_thread_mina_lib_ms\tTotal number of ms spent on 'mina_lib'\tcounter\tMina_Daemon_time_spent_in_thread_mina_lib_ms 2.26658e+07 Mina_Daemon_time_spent_in_thread_mina_ms\tTotal number of ms spent on 'mina'\tcounter\tMina_Daemon_time_spent_in_thread_mina_ms 2.35492e+07 Mina_Daemon_time_spent_in_thread_mina_net2_ms\tTotal number of ms spent on 'mina_net2'\tcounter\tMina_Daemon_time_spent_in_thread_mina_net2_ms 747521 Mina_Daemon_time_spent_in_thread_mina_networking_ms\tTotal number of ms spent on 'mina_networking'\tcounter\tMina_Daemon_time_spent_in_thread_mina_networking_ms 816970 Mina_Daemon_time_spent_in_thread_perform_super_catchup_ms\tTotal number of ms spent on 'perform_super_catchup'\tcounter\tMina_Daemon_time_spent_in_thread_perform_super_catchup_ms 5.16846e+06 Mina_Daemon_time_spent_in_thread_persistent_frontier_read_from_disk_ms\tTotal number of ms spent on 'persistent_frontier_read_from_disk'\tcounter\tMina_Daemon_time_spent_in_thread_persistent_frontier_read_from_disk_ms 0.0003 Mina_Daemon_time_spent_in_thread_persistent_frontier_write_to_disk_ms\tTotal number of ms spent on 'persistent_frontier_write_to_disk'\tcounter\tMina_Daemon_time_spent_in_thread_persistent_frontier_write_to_disk_ms 442386 Mina_Daemon_time_spent_in_thread_process_blocks_ms\tTotal number of ms spent on 'process_blocks'\tcounter\tMina_Daemon_time_spent_in_thread_process_blocks_ms 3.15592e+06 Mina_Daemon_time_spent_in_thread_process_new_block_subscriptions_ms\tTotal number of ms spent on 'process_new_block_subscriptions'\tcounter\tMina_Daemon_time_spent_in_thread_process_new_block_subscriptions_ms 14217.5 Mina_Daemon_time_spent_in_thread_processing_snark_pool_diffs_ms\tTotal number of ms spent on 'processing_snark_pool_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_processing_snark_pool_diffs_ms 253433 Mina_Daemon_time_spent_in_thread_processing_snark_pool_transition_frontier_diffs_ms\tTotal number of ms spent on 'processing_snark_pool_transition_frontier_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_processing_snark_pool_transition_frontier_diffs_ms 746670 Mina_Daemon_time_spent_in_thread_processing_transaction_pool_diffs_ms\tTotal number of ms spent on 'processing_transaction_pool_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_processing_transaction_pool_diffs_ms 42962.9 Mina_Daemon_time_spent_in_thread_processing_transaction_pool_transition_frontier_diffs_ms\tTotal number of ms spent on 'processing_transaction_pool_transition_frontier_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_processing_transaction_pool_transition_frontier_diffs_ms 0 Mina_Daemon_time_spent_in_thread_produce_blocks_ms\tTotal number of ms spent on 'produce_blocks'\tcounter\tMina_Daemon_time_spent_in_thread_produce_blocks_ms 0.046106 Mina_Daemon_time_spent_in_thread_query_vrf_evaluator_ms\tTotal number of ms spent on 'query_vrf_evaluator'\tcounter\tMina_Daemon_time_spent_in_thread_query_vrf_evaluator_ms 0.162419 Mina_Daemon_time_spent_in_thread_refresh_downloader_knowledge_ms\tTotal number of ms spent on 'refresh_downloader_knowledge'\tcounter\tMina_Daemon_time_spent_in_thread_refresh_downloader_knowledge_ms 12.8744 Mina_Daemon_time_spent_in_thread_refresh_downloader_peers_ms\tTotal number of ms spent on 'refresh_downloader_peers'\tcounter\tMina_Daemon_time_spent_in_thread_refresh_downloader_peers_ms 595.721 Mina_Daemon_time_spent_in_thread_serve_client_rpcs_ms\tTotal number of ms spent on 'serve_client_rpcs'\tcounter\tMina_Daemon_time_spent_in_thread_serve_client_rpcs_ms 0.025618 Mina_Daemon_time_spent_in_thread_serve_graphql_ms\tTotal number of ms spent on 'serve_graphql'\tcounter\tMina_Daemon_time_spent_in_thread_serve_graphql_ms 7454.74 Mina_Daemon_time_spent_in_thread_serve_limited_graphql_ms\tTotal number of ms spent on 'serve_limited_graphql'\tcounter\tMina_Daemon_time_spent_in_thread_serve_limited_graphql_ms 0.038242 Mina_Daemon_time_spent_in_thread_serve_metrics_ms\tTotal number of ms spent on 'serve_metrics'\tcounter\tMina_Daemon_time_spent_in_thread_serve_metrics_ms 50981.9 Mina_Daemon_time_spent_in_thread_set_vrf_evaluator_epoch_state_ms\tTotal number of ms spent on 'set_vrf_evaluator_epoch_state'\tcounter\tMina_Daemon_time_spent_in_thread_set_vrf_evaluator_epoch_state_ms 0.044895 Mina_Daemon_time_spent_in_thread_snapshot_peers_ms\tTotal number of ms spent on 'snapshot_peers'\tcounter\tMina_Daemon_time_spent_in_thread_snapshot_peers_ms 1561.06 Mina_Daemon_time_spent_in_thread_snark_pool_ms\tTotal number of ms spent on 'snark_pool'\tcounter\tMina_Daemon_time_spent_in_thread_snark_pool_ms 1.02097e+06 Mina_Daemon_time_spent_in_thread_snark_pool_rebroadcast_loop_ms\tTotal number of ms spent on 'snark_pool_rebroadcast_loop'\tcounter\tMina_Daemon_time_spent_in_thread_snark_pool_rebroadcast_loop_ms 1.47013 Mina_Daemon_time_spent_in_thread_stabilize_sync_status_ms\tTotal number of ms spent on 'stabilize_sync_status'\tcounter\tMina_Daemon_time_spent_in_thread_stabilize_sync_status_ms 41.5622 Mina_Daemon_time_spent_in_thread_stream_libp2p_ipc_messages_ms\tTotal number of ms spent on 'stream_libp2p_ipc_messages'\tcounter\tMina_Daemon_time_spent_in_thread_stream_libp2p_ipc_messages_ms 9831.84 Mina_Daemon_time_spent_in_thread_super_catchup_downloader_ms\tTotal number of ms spent on 'super_catchup_downloader'\tcounter\tMina_Daemon_time_spent_in_thread_super_catchup_downloader_ms 5.0773e+06 Mina_Daemon_time_spent_in_thread_transaction_pool_ms\tTotal number of ms spent on 'transaction_pool'\tcounter\tMina_Daemon_time_spent_in_thread_transaction_pool_ms 51149.2 Mina_Daemon_time_spent_in_thread_transaction_pool_rebroadcast_loop_ms\tTotal number of ms spent on 'transaction_pool_rebroadcast_loop'\tcounter\tMina_Daemon_time_spent_in_thread_transaction_pool_rebroadcast_loop_ms 4.30157 Mina_Daemon_time_spent_in_thread_transition_handler_processor_ms\tTotal number of ms spent on 'transition_handler_processor'\tcounter\tMina_Daemon_time_spent_in_thread_transition_handler_processor_ms 3.90553e+06 Mina_Daemon_time_spent_in_thread_transition_router_ms\tTotal number of ms spent on 'transition_router'\tcounter\tMina_Daemon_time_spent_in_thread_transition_router_ms 1.01647e+07 Mina_Daemon_time_spent_in_thread_update_coinbase_stack_start_time_ms\tTotal number of ms spent on 'update_coinbase_stack_start_time'\tcounter\tMina_Daemon_time_spent_in_thread_update_coinbase_stack_start_time_ms 4.61906e+06 Mina_Daemon_time_spent_in_thread_update_consensus_local_state_ms\tTotal number of ms spent on 'update_consensus_local_state'\tcounter\tMina_Daemon_time_spent_in_thread_update_consensus_local_state_ms 10.8192 Mina_Daemon_time_spent_in_thread_update_downloader_ms\tTotal number of ms spent on 'update_downloader'\tcounter\tMina_Daemon_time_spent_in_thread_update_downloader_ms 215.046 Mina_Daemon_time_spent_in_thread_update_node_status_ms\tTotal number of ms spent on 'update_node_status'\tcounter\tMina_Daemon_time_spent_in_thread_update_node_status_ms 82553.4 Mina_Daemon_time_spent_in_thread_update_pending_coinbase_collection_ms\tTotal number of ms spent on 'update_pending_coinbase_collection'\tcounter\tMina_Daemon_time_spent_in_thread_update_pending_coinbase_collection_ms 0 Mina_Daemon_time_spent_in_thread_validate_blocks_against_frontier_ms\tTotal number of ms spent on 'validate_blocks_against_frontier'\tcounter\tMina_Daemon_time_spent_in_thread_validate_blocks_against_frontier_ms 1325.81 Mina_Daemon_time_spent_in_thread_validate_libp2p_gossip_ms\tTotal number of ms spent on 'validate_libp2p_gossip'\tcounter\tMina_Daemon_time_spent_in_thread_validate_libp2p_gossip_ms 584720 Mina_Daemon_time_spent_in_thread_validate_transaction_against_staged_ledger_ms\tTotal number of ms spent on 'validate_transaction_against_staged_ledger'\tcounter\tMina_Daemon_time_spent_in_thread_validate_transaction_against_staged_ledger_ms 2243.88 Mina_Daemon_time_spent_in_thread_validate_transaction_snark_scan_state_ms\tTotal number of ms spent on 'validate_transaction_snark_scan_state'\tcounter\tMina_Daemon_time_spent_in_thread_validate_transaction_snark_scan_state_ms 19.0577 Mina_Daemon_time_spent_in_thread_verify_scan_state_after_apply_ms\tTotal number of ms spent on 'verify_scan_state_after_apply'\tcounter\tMina_Daemon_time_spent_in_thread_verify_scan_state_after_apply_ms 7607.18 Mina_Daemon_time_spent_in_thread_verify_snark_pool_diffs_ms\tTotal number of ms spent on 'verify_snark_pool_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_verify_snark_pool_diffs_ms 650758 Mina_Daemon_time_spent_in_thread_verify_transaction_pool_diffs_ms\tTotal number of ms spent on 'verify_transaction_pool_diffs'\tcounter\tMina_Daemon_time_spent_in_thread_verify_transaction_pool_diffs_ms 3525.95 Mina_Daemon_time_spent_in_thread_wait_for_jobs_to_download_ms\tTotal number of ms spent on 'wait_for_jobs_to_download'\tcounter\tMina_Daemon_time_spent_in_thread_wait_for_jobs_to_download_ms 6.55411\t ","version":"Next","tagName":"h2"}],"options":{"languages":["en","de"],"id":"default"}}